[{"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js":"1","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js":"2","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js":"3","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Routes.js":"4","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/LogoutStyle.js":"5","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen.js":"6","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"7","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/Theme.js":"8","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/dataProvider.js":"9","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren.js":"10","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate.js":"11","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User.js":"12","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/ProfilePicutre.js":"13","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Codes.js":"14","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Tour_Feedback.js":"15","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyLayout.js":"16","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyAppBar.js":"17","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/profile.js":"18","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyUserMenu.js":"19","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/LoginPage.js":"20"},{"size":620,"mtime":1608462829115,"results":"21","hashOfConfig":"22"},{"size":4076,"mtime":1612173502903,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1608462829115,"results":"24","hashOfConfig":"22"},{"size":704,"mtime":1609672701770,"results":"25","hashOfConfig":"22"},{"size":1896,"mtime":1608462829115,"results":"26","hashOfConfig":"22"},{"size":3770,"mtime":1612250805693,"results":"27","hashOfConfig":"22"},{"size":4358,"mtime":1612337520269,"results":"28","hashOfConfig":"22"},{"size":472,"mtime":1610037043118,"results":"29","hashOfConfig":"22"},{"size":9082,"mtime":1612337557829,"results":"30","hashOfConfig":"22"},{"size":10131,"mtime":1611415192454,"results":"31","hashOfConfig":"22"},{"size":8290,"mtime":1612250931100,"results":"32","hashOfConfig":"22"},{"size":3076,"mtime":1612172976470,"results":"33","hashOfConfig":"22"},{"size":1662,"mtime":1611307680788,"results":"34","hashOfConfig":"22"},{"size":1175,"mtime":1612172976470,"results":"35","hashOfConfig":"22"},{"size":1582,"mtime":1611647244428,"results":"36","hashOfConfig":"22"},{"size":349,"mtime":1612173188616,"results":"37","hashOfConfig":"22"},{"size":213,"mtime":1612173188616,"results":"38","hashOfConfig":"22"},{"size":2971,"mtime":1612173188616,"results":"39","hashOfConfig":"22"},{"size":445,"mtime":1612173188616,"results":"40","hashOfConfig":"22"},{"size":2754,"mtime":1612173621637,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"zx3xcf",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":2,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"45"},"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js",["95","96"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["97","98"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js",["99"],"import React from 'react';\nimport { Admin, Resource, Layout } from 'react-admin';\nimport { theme } from './app/components/Style/Theme.js';\n// site components\nimport {\n  ExponateList,\n  ExponateEdit,\n  ExponateCreate,\n} from './app/components/Exponate.js';\nimport {\n  TourenList,\n  TourenEdit,\n  TourenCreate,\n} from './app/components/Touren.js';\nimport {\n  FeedbackList\n} from './app/components/Tour_Feedback.js';\nimport { UserList, AccountEdit, UserCreate } from './app/components/User.js';\nimport { CodeList, CodeCreate } from './app/components/Codes.js';\nimport {\n  AbzeichenList,\n  AbzeichenEdit,\n  AbzeichenCreate,\n} from './app/components/Abzeichen.js';\nimport {\n  PictureList,\n  PictureEdit,\n  PictureCreate,\n} from './app/components/ProfilePicutre.js';\nimport Dashboard from './app/containers/Dashboard';\nimport MyLayout from './app/components/MyProfile/MyLayout.js';\nimport LoginPage from './app/containers/LoginPage.js';\nimport dataProvider from './app/containers/dataProvider.js';\n\n//icons\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PhotoFilterIcon from '@material-ui/icons/PhotoFilter';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport ListIcon from '@material-ui/icons/List';\nimport CreateIcon from '@material-ui/icons/Create';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\n\nexport default function App() {\n  return (\n    <div>\n      <Admin\n        title='Hessisches Landesmuseum'\n        //can be replaced with the real data provider\n        dataProvider={dataProvider}\n        // todo: User authentification\n        // authProdiver={authProvider}\n        // can be enabled/replaced if we have designed a custom LoginPage\n        loginPage={LoginPage}\n        // custom dashboard page\n        dashboard={Dashboard}\n        // custom theme\n        theme={theme} \n        // TODO: add a tree menu to show all resources\n        layout={MyLayout}\n      >\n        <Resource\n          name='Exponate'\n          list={ExponateList}\n          edit={ExponateEdit}\n          create={ExponateCreate}\n          icon={AccountBalanceIcon}\n          options={{ label: 'Exponate' }}\n        />\n        <Resource\n          name='Touren'\n          list={TourenList}\n          edit={TourenEdit}\n          create={TourenCreate}\n          icon={NavigationIcon}\n          options={{ label: 'Touren' }}\n        />\n        <Resource\n          name='Benutzer_overview'\n          icon={SupervisorAccountIcon}\n          options={{ label: 'Benutzer*innen', isMenuParent: true }}\n        />\n        <Resource\n          name='Benutzer'\n          list={UserList}\n          edit={AccountEdit}\n          create={UserCreate}\n          icon={ListIcon}\n          options={{ label: 'Übersicht', menuParent: 'Benutzer_overview' }}\n        />\n        <Resource\n          name='Codes'\n          list={CodeList}\n          create={CodeCreate}\n          icon={CreateIcon}\n          options={{\n            label: 'Code Erstellen',\n            menuParent: 'Benutzer_overview',\n          }}\n        />\n        <Resource\n          name='Bilder_overview'\n          icon={AddPhotoAlternateIcon}\n          options={{ label: 'Bildverknüpfungen', isMenuParent: true }}\n        />\n        <Resource\n          name='Abzeichen'\n          list={AbzeichenList}\n          edit={AbzeichenEdit}\n          create={AbzeichenCreate}\n          icon={PhotoFilterIcon}\n          options={{ label: 'Abzeichen', menuParent: 'Bilder_overview' }}\n        />\n        <Resource\n          name='ProfilePicture'\n          list={PictureList}\n          edit={PictureEdit}\n          create={PictureCreate}\n          icon={AddPhotoAlternateIcon}\n          options={{ label: 'Profilbilder', menuParent: 'Bilder_overview' }}\n        />\n        <Resource\n          name='Feedback'\n          list={FeedbackList}\n          icon={RateReviewIcon}\n          options={{ label: 'Feedback' }}\n        />\n      </Admin>\n    </div>\n  );\n}\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Routes.js",["100","101"],"import React from 'react'\nimport { BrowserRouter as Router,\n    Route, Switch, Link } from \"react-router-dom\";\nimport Admins from './Admins';\nimport Exponate from './Exponate';\nimport Touren from './Touren';\n\n\n\n\nexport default class Routes extends React.Component {\n    render() {\n        return(\n            <div>\n            <Switch>\n           <Route exact path=\"/Touren\" render={() => (\n               <Touren></Touren>\n           )}/>\n              \n         \n          <Route exact path=\"/Exponate\">\n               <Exponate></Exponate>\n          </Route>\n          <Route exact path=\"/User\">\n                <Admins></Admins>\n            </Route>\n        </Switch>\n        </div>\n        )\n    }\n}",["102","103"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/LogoutStyle.js",["104","105","106"],"import React, { Component } from 'react'\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { CssBaseline } from '@material-ui/core';\n\nconst StyledMenu = withStyles()\n  ((props) => (\n    <Menu \n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\"\n      }}\n      {...props}\n    />\n  ));\n\n  const StyledMenuItem = withStyles((theme) => ({\n    root: {\n      \"&:focus\": {\n        backgroundColor: theme.palette.primary.main,\n        \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n          color: theme.palette.common.white\n        }\n      }\n    }\n  }))(MenuItem);\n\nexport default function LogoutStyle() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n      };\n\n    return(\n        <div>\n            <Button onClick={handleClick}>\n                <AccountCircleIcon/>\n            </Button>\n\n            <StyledMenu\n            id=\"customized-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n            >\n                <StyledMenuItem>\n                    <ListItemText primary=\"Abmelden\" onClick={blah}/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>            \n    )    \n}\n\nfunction blah()  {\n    return(\n        alert('Sie sind abgemeldet')\n    )\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen.js",["107","108","109","110","111","112","113","114"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["115","116"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/Theme.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/dataProvider.js",["117","118","119","120","121","122","123","124"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren.js",["125"],"import React from 'react';\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SimpleForm,\n  SingleFieldList,\n  //options\n  SimpleFormIterator,\n  Filter,\n  EditButton,\n  Show,\n  SimpleShowLayout,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //actions\n  useListContext,\n  TopToolbar,\n  CreateButton,\n  ExportButton,\n  sanitizeListRestProps,\n  //fields\n  TextField,\n  ReferenceField,\n  ReferenceArrayField,\n  DateField,\n  NumberField,\n  ChipField,\n  ArrayField,\n  BooleanField,\n  UrlField,\n  //inputs\n  SelectInput,\n  ImageInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  SearchInput,\n  ReferenceInput,\n  NumberInput,\n  ArrayInput,\n  BooleanInput,\n  DateInput,\n  TextInput,\n} from 'react-admin';\n// material UI styles\nimport { Button } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// filter the tours (search for text)\n// TODO: filter Ersteller der Tour\n// filter for featured tours (todo, not working yet)\nconst FilterBar = (props) => (\n  <div>\n    <Filter {...props}>\n      <SearchInput source='q' alwaysOn />\n      <SelectInput\n        source='status'\n        choices={[\n          { id: 'freigegeben', name: 'freigegeben' },\n          { id: 'ausstehend', name: 'ausstehend' },\n          { id: 'privat', name: 'privat' },\n        ]}\n        alwaysOn\n      />\n      <ReferenceInput\n        source='user'\n        reference='Benutzer'\n        label='Ersteller'\n        alwaysOn\n      >\n        <SelectInput optionText='username' />\n      </ReferenceInput>\n      <NumberInput\n        source='difficulty'\n        label='Schwierigkeitsgrad'\n        validate={validateDifficulty}\n        alwaysOn\n      />\n      <DateInput\n        source='lastEdit'\n        label='letzte Bearbeitung'\n        options={{ format: 'DD/MM/YYYY' }}\n        alwaysOn\n      />\n    </Filter>\n    <Button\n      variant='contained'\n      size='small'\n      startIcon={<DeleteIcon />}\n      onClick={() => props.setFilters({})}\n    >\n      Alle Filter zurücksetzen\n    </Button>\n  </div>\n);\n\n//solution for removing reset button from action bar (doesnt have functionality there)\nconst ListActions = (props) => {\n  const { className, exporter, filters, maxResults, ...rest } = props;\n  const {\n    currentSort,\n    resource,\n    filterValues,\n    basePath,\n    total,\n  } = useListContext();\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      <CreateButton basePath={basePath} />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filterValues={filterValues}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\n//edit expand component\n//TODO: get information about stations (from the video) and model them\nconst StationShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <ArrayField source='Stationen'>\n        <Datagrid>\n          {/*  if no object is there it is an individual slide and foto, text, details should be deactivated */}\n          <TextField source='Objekt' />\n          <TextField source='Foto' />\n          <TextField source='Text' />\n          <TextField source='Details' />\n          <TextField source='Textfeld' />\n          <UrlField source='Bild' />\n          {/*  model a question */}\n          <ArrayField source='???' label='Fragen'>\n            <Datagrid>\n              <TextField source='question' label='Frage' />\n              <ReferenceArrayField\n                label='verlinkte Objekte'\n                reference='Exponate'\n                source='linked_objects'\n              >\n                <SingleFieldList>\n                  <ChipField source='title' label='Name' />\n                </SingleFieldList>\n              </ReferenceArrayField>\n            </Datagrid>\n          </ArrayField>\n          {/*  model an answer */}\n          <ArrayField source='???' label='Antworten'>\n            <Datagrid>\n              <TextField source='answer' label='Antwort' />\n              <ReferenceArrayField\n                label='verlinkte User'\n                reference='User'\n                source='user'\n              >\n                <SingleFieldList>\n                  <ChipField source='username' label='Benutzer' />\n                </SingleFieldList>\n              </ReferenceArrayField>\n            </Datagrid>\n          </ArrayField>\n        </Datagrid>\n      </ArrayField>\n    </SimpleShowLayout>\n  </Show>\n);\n\n// TODO: create border to devide the component from the filters (spacing)\nconst useStyles = makeStyles({\n  main: {\n    marginTop: 20,\n  },\n});\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// list existing tours\nexport const TourenList = (props) => {\n  const classes = useStyles(props);\n  return (\n    <List\n      {...props}\n      title='Touren'\n      filters={<FilterBar />}\n      actions={<ListActions />}\n      classes={{ main: classes.main }}\n    >\n      <Datagrid expand={<StationShow />}>\n        {/* TODO: Whats the primaery key? replace Titel for pk or use built in  */}\n        <TextField source='_id' label='ID' />\n        <TextField source='name' label='Titel' />\n        <TextField source='description' label='Beschreibung' />\n        {/* refField: source=field in this table, reference=Name of reference Table  */}\n        <ReferenceField source='owner' reference='Benutzer' label='Ersteller'>\n          <ChipField source='username' />\n        </ReferenceField>\n        <ReferenceArrayField\n          label='Benutzer'\n          reference='Benutzer'\n          source='user'\n        >\n          <SingleFieldList>\n            <ChipField source='username' />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <TextField source='search_id' label='Touren Code' />\n        <TextField source='session_id' label='Passwort' />\n        <DateField\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberField source='difficulty' label='Schwierigkeitsgrad' />\n        <ChipField source='status' label='Status' />\n        <EditButton />\n      </Datagrid>\n    </List>\n  );\n};\n\n// edit a tour\nexport const TourenEdit = (props) => (\n  <Edit title='Bearbeite Touren' {...props}>\n    <SimpleForm warnWhenUnsavedChanges>\n      <TextInput disabled source='ID' />\n      <TextInput source='name' label='Titel' />\n      <TextInput source='description' label='Beschreibung' />\n      <ReferenceInput source='user' reference='Benutzer' label='Ersteller'>\n        <SelectInput optionText='username' />\n      </ReferenceInput>\n      <ReferenceArrayInput source='user' reference='Benutzer'>\n        <SelectArrayInput optionText='username' />\n      </ReferenceArrayInput>\n      <TextInput source='search_id' label='Touren Code' />\n      <TextInput source='session_id' label='Passwort' />\n      <DateInput\n        source='lastEdit'\n        label='letzte Bearbeitung'\n        options={{ format: 'DD/MM/YYYY' }}\n      />\n      <NumberInput\n        source='difficulty'\n        label='Schwierigkeitsgrad'\n        validate={validateDifficulty}\n      />\n      <SelectInput\n        source='Status'\n        choices={[\n          { id: 'freigegeben', name: 'freigegeben' },\n          { id: 'ausstehend', name: 'ausstehend' },\n          { id: 'privat', name: 'privat' },\n        ]}\n      />\n      {/*  TODO: model the different stations and translate them into edit Inputs*/}\n      <ArrayInput source='Stationen'>\n        <SimpleFormIterator>\n          <TextField source='Objekt' />\n          <BooleanInput source='Foto' />\n          <BooleanInput source='Text' />\n          <BooleanInput source='Details' />\n          <TextInput source='Textfeld' />\n          <ArrayInput source='Fragen'>\n            <SimpleFormIterator>\n              <TextInput source='Antwort' />\n              <BooleanInput source='Antwort' />\n            </SimpleFormIterator>\n          </ArrayInput>\n          <ImageInput source='Bild' />\n        </SimpleFormIterator>\n      </ArrayInput>\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new tour\n// todo: ID should not be created manually but automatically (distinct id)\nexport const TourenCreate = (props) => (\n  <Create title='Erstelle Touren' {...props}>\n    <SimpleForm warnWhenUnsavedChanges>\n      <TextInput disabled source='ID' />\n      <TextInput source='name' label='Titel' />\n      <TextInput source='description' label='Beschreibung' />\n      <ReferenceInput source='user' reference='Benutzer' label='Ersteller'>\n        <SelectInput optionText='username' />\n      </ReferenceInput>\n      <ReferenceArrayInput source='user' reference='Benutzer'>\n        <SelectArrayInput optionText='username' />\n      </ReferenceArrayInput>\n      <TextInput source='search_id' label='Touren Code' />\n      <TextInput source='session_id' label='Passwort' />\n      <DateInput\n        source='lastEdit'\n        label='letzte Bearbeitung'\n        options={{ format: 'DD/MM/YYYY' }}\n      />\n      <NumberInput\n        source='difficulty'\n        label='Schwierigkeitsgrad'\n        validate={validateDifficulty}\n      />\n      <SelectInput\n        source='Status'\n        choices={[\n          { id: 'freigegeben', name: 'freigegeben' },\n          { id: 'ausstehend', name: 'ausstehend' },\n          { id: 'privat', name: 'privat' },\n        ]}\n      />\n      {/*  TODO: model the different stations and translate them into edit Inputs*/}\n      <ArrayInput source='Stationen'>\n        <SimpleFormIterator>\n          <TextField source='Objekt' />\n          <BooleanInput source='Foto' />\n          <BooleanInput source='Text' />\n          <BooleanInput source='Details' />\n          <TextInput source='Textfeld' />\n          <ArrayInput source='Fragen'>\n            <SimpleFormIterator>\n              <TextInput source='Antwort' />\n              <BooleanInput source='Antwort' />\n            </SimpleFormIterator>\n          </ArrayInput>\n          <ImageInput source='Bild' />\n        </SimpleFormIterator>\n      </ArrayInput>\n    </SimpleForm>\n  </Create>\n);\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate.js",["126","127","128"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User.js",["129"],"import React from 'react';\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SingleFieldList,\n  SimpleForm,\n  EditButton,\n  TextField,\n  ChipField,\n  FunctionField,\n  BooleanField,\n  PasswordInput,\n  TextInput,\n  BooleanInput,\n  ReferenceManyField,\n} from 'react-admin';\n// material UI imports\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n// show eixsting users\nexport const UserList = (props) => (\n  <List {...props} title='Benutzer*innen'>\n    <Datagrid>\n      {/*  TODO: get real primary key of user ID (username?) */}\n      <TextField source='id' label='ID' />\n      <TextField source='username' label='Benutzername' />\n      <FunctionField\n        source='password'\n        label='Passwort'\n        render={(record) => `**********`}\n      />\n      <BooleanField\n        source='Adminrechte'\n        label='Adminrechte'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <ReferenceManyField\n        label='Erstellte Touren'\n        reference='Touren'\n        // match user.username with Touren.owner.username\n        source='username'\n        target='owner.username'\n      >\n        <SingleFieldList>\n          <ChipField \n          // display the name of the tour\n          source='name' />\n        </SingleFieldList>\n      </ReferenceManyField> \n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nconst optionRenderer = (choice) => `${choice.picture}`;\n\n// edit password with user rights first try\n/* export const AccountEdit = ({ permissions, ...props }) => (\n  <Edit title='Accountdaten ändern' {...props}>\n    <TabbedForm initialValues={{ role: 'user' }}>\n      <FormTab label='user.form.summary'>\n        {permissions === 'admin' && <TextInput disabled source='id' />}\n        <TextInput source='username' label='Username' validate={required()} />\n      </FormTab>\n      {permissions === 'admin' && (\n        <FormTab label='user.form.security'>\n          <TextInput source='email' label='Email' validate={required()} />\n          <PasswordInput\n            source='password'\n            label='Passwort'\n            validate={required()}\n          />\n          <BooleanInput\n            source='Adminrechte'\n            label='Adminrechte erlauben?'\n            validate={required()}\n          />\n        </FormTab>\n      )}\n    </TabbedForm>\n  </Edit>\n); */\n\nexport const AccountEdit = (props) => (\n  <Edit title='Accountdaten ändern' {...props}>\n    <SimpleForm>\n      <TextInput disabled source='id' label='ID' />\n      <TextInput source='username' label='Benutzername' />\n      <PasswordInput source='password' label='Passwort' />\n      <BooleanInput source='Adminrechte' label='Adminrechte erlauben?' />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new user\nexport const UserCreate = (props) => (\n  <Create title='Erstelle Admin' {...props}>\n    <SimpleForm>\n      <TextInput source='username' label='Benutzername' />\n      <PasswordInput source='password' label='Passwort' />\n      <BooleanInput source='Adminrechte' label='Adminrechte erlauben?' />\n    </SimpleForm>\n  </Create>\n);\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/ProfilePicutre.js",["130"],"import React from 'react';\nimport { Fragment } from 'react';\nimport {\n  List,\n  Datagrid,\n  UrlField,\n  ImageField,\n  BooleanField,\n  ImageInput,\n  BooleanInput,\n  EditButton,\n  Edit,\n  SimpleForm,\n  Create,\n  SimpleShowLayout,\n  Show,\n  TextField,\n  TextInput,\n} from 'react-admin';\n\n// edit expand component\nconst ImageShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <ImageField source='picture' />\n      <UrlField source='picture' label='Url' />\n    </SimpleShowLayout>\n  </Show>\n);\n\n// list existing badges\nexport const PictureList = (props) => (\n  <List {...props} title='Abzeichen'>\n    <Datagrid expand={<ImageShow />}>\n      <TextField source='name' label='Name' />\n      <BooleanField source='locked' label='gesperrt' />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\n// edit badges\nexport const PictureEdit = (props) => (\n  <Edit title='Verändere Profilbilder' {...props}>\n    <SimpleForm>\n      <TextInput source='name' label='Name' fullWidth />\n      <ImageInput source='ProfilePicture' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      <BooleanInput label='gesperrt' source='locked' />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new badge\nexport const PictureCreate = (props) => (\n  <Create title='Lade Profilbilder hoch' {...props}>\n    <SimpleForm>\n      <TextInput source='name' label='Name' fullWidth />\n      <ImageInput source='ProfilePicture' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      <BooleanInput label='gesperrt' source='locked' />\n    </SimpleForm>\n  </Create>\n);\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Codes.js",["131","132","133","134"],"import React from 'react';\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SimpleForm,\n  TextField,\n  TextInput,\n  BooleanField\n} from 'react-admin';\n// material UI imports\nimport Typography from '@material-ui/core/Typography';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n\nconst Aside = (props) => (\n  <div style={{ width: 200, margin: '1em' }}>\n  <Typography variant=\"h6\">Code Verteilung</Typography>\n  <Typography variant=\"body2\">\n      Vergebene Codes: {props.total}\n  </Typography>\n</div>\n);\n\nexport const CodeList = (props) => (\n\n    <List {...props} title='Ersteller Codes' aside={<Aside />}>\n      <Datagrid>\n        <TextField source='id' label='ID' />\n        <TextField source='Code' />\n       {/*  reference to users */}\n       <TextField source='Benutzername' />\n       {/* <BooleanField\n        source='producer'\n        label='Ersteller'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      /> */}\n      </Datagrid>\n    </List>\n  );\n  \n  export const CodeCreate = (props) => (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput source='Code' />\n      </SimpleForm>\n    </Create>\n  );","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Tour_Feedback.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyLayout.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyAppBar.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/profile.js",["135","136"],"/*\nimport ProfileEdit from './ProfileEdit';\n\nexport default {\n    edit: ProfileEdit\n};\n*/\n\nimport React, {\n    createContext,\n    useState,\n    useCallback,\n    useMemo,\n    useContext\n  } from \"react\";\n  import {\n    TextInput,\n    ImageInput,\n    ImageField,\n    PasswordInput,\n    SimpleForm,\n    required,\n    useDataProvider,\n    useNotify,\n    SaveContextProvider,\n    useGetIdentity\n  } from \"react-admin\";\n  \n  const ProfileContext = createContext();\n  \n  export const ProfileProvider = ({ children }) => {\n    const [profileVersion, setProfileVersion] = useState(0);\n    const context = useMemo(\n      () => ({\n        profileVersion,\n        refreshProfile: () =>\n          setProfileVersion((currentVersion) => currentVersion + 1)\n      }),\n      [profileVersion]\n    );\n  \n    return (\n      <ProfileContext.Provider value={context}>\n        {children}\n      </ProfileContext.Provider>\n    );\n  };\n  \n  export const useProfile = () => useContext(ProfileContext);\n  \n  export const ProfileEdit = ({ staticContext, ...props }) => {\n    console.log(\"ProfileEdit\");\n    const dataProvider = useDataProvider();\n    const notify = useNotify();\n    const [saving, setSaving] = useState();\n    const { refreshProfile } = useProfile();\n  \n    const { loaded, identity } = useGetIdentity();\n  \n    const handleSave = useCallback(\n      (values) => {\n        setSaving(true);\n        dataProvider.updateUserProfile(\n          { data: values },\n          {\n            onSuccess: ({ data }) => {\n              setSaving(false);\n              notify(\"Dein Profil wurde aktualisiert\", \"info\", {\n                _: \"Dein Profil wurde aktualisiert\"\n              });\n              refreshProfile();\n            },\n            onFailure: () => {\n              setSaving(false);\n              notify(\n                \"A technical error occured while updating your profile. Please try later.\",\n                \"warning\",\n                {\n                  _:\n                    \"A technical error occured while updating your profile. Please try later.\"\n                }\n              );\n            }\n          }\n        );\n      },\n      [dataProvider, notify, refreshProfile]\n    );\n  \n    const saveContext = useMemo(\n      () => ({\n        save: handleSave,\n        saving\n      }),\n      [saving, handleSave]\n    );\n  \n    if (!loaded) {\n      return null;\n    }\n  \n    return (\n      <SaveContextProvider value={saveContext}>\n        <SimpleForm save={handleSave} record={identity ? identity : {}}>\n          <TextInput source=\"Benutzername\" validate={required()} fullWidth/>\n          <PasswordInput source=\"altes Passwort\" validate={required()} label=\"altes Passwort\" fullWidth/>\n          <PasswordInput source=\"neues Passwort\" validate={required()} label=\"neues Passwort\" fullWidth/>\n          <PasswordInput source=\"neues Passwort\" validate={required()} label=\"neues Passwort wiederholen\" fullWidth/>\n        </SimpleForm>\n      </SaveContextProvider>\n    );\n  };\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyUserMenu.js",["137"],"import React from 'react';\nimport { UserMenu, MenuItemLink} from 'react-admin';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\n\nconst MyUserMenu = (props) => {\n  return (\n    <UserMenu  {...props}>\n      <MenuItemLink\n        to=\"/my-profile\"\n        primaryText=\"Mein Profil\"\n        leftIcon={<SettingsIcon />}\n      />\n    </UserMenu>\n  );\n};\n\nexport default MyUserMenu;\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/LoginPage.js",["138","139","140","141"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LockIcon from '@material-ui/icons/Lock';\n\n// site components\n//import authProvider from \"./authProvider\";\nimport './LoginPage.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n      open: false,\n    };\n  }\n\n  setUsername = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  setPassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <div className='Login'>\n            <Button>\n              <LockIcon color='primary' fontSize='large' />\n            </Button>\n            <TextField\n              variant='standard'\n              label='Benutzername'\n              margin='normal'\n              onChange={this.setUsername}\n              value={this.state.username}\n            />\n            <TextField\n              variant='standard'\n              label='Passwort'\n              margin='normal'\n              type='password'\n              onChange={this.setPassword}\n              value={this.state.password}\n            />\n\n            <div className='Button'>\n              <Button variant='contained' color='primary' onClick={() => {}}>\n                ANMELDEN\n              </Button>\n            </div>\n          </div>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n          >\n            <DialogTitle id='alert-dialog-title'></DialogTitle>\n            <DialogContent>\n              <DialogContentText id='alert-dialog-description'>\n                {this.state.message}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color='primary'>\n                Okay\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n",{"ruleId":"142","severity":1,"message":"143","line":7,"column":27,"nodeType":"144","messageId":"145","endLine":7,"endColumn":33},{"ruleId":"142","severity":1,"message":"146","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":19},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"142","severity":1,"message":"151","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":33},{"ruleId":"142","severity":1,"message":"152","line":3,"column":20,"nodeType":"144","messageId":"145","endLine":3,"endColumn":24},{"ruleId":"147","replacedBy":"153"},{"ruleId":"149","replacedBy":"154"},{"ruleId":"142","severity":1,"message":"155","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"156","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":9,"column":10,"nodeType":"144","messageId":"145","endLine":9,"endColumn":21},{"ruleId":"142","severity":1,"message":"157","line":6,"column":3,"nodeType":"144","messageId":"145","endLine":6,"endColumn":11},{"ruleId":"142","severity":1,"message":"158","line":9,"column":3,"nodeType":"144","messageId":"145","endLine":9,"endColumn":17},{"ruleId":"142","severity":1,"message":"159","line":21,"column":3,"nodeType":"144","messageId":"145","endLine":21,"endColumn":13},{"ruleId":"142","severity":1,"message":"160","line":22,"column":3,"nodeType":"144","messageId":"145","endLine":22,"endColumn":18},{"ruleId":"142","severity":1,"message":"161","line":23,"column":3,"nodeType":"144","messageId":"145","endLine":23,"endColumn":22},{"ruleId":"142","severity":1,"message":"162","line":24,"column":3,"nodeType":"144","messageId":"145","endLine":24,"endColumn":19},{"ruleId":"163","severity":2,"message":"164","line":65,"column":4,"nodeType":"165","endLine":65,"endColumn":11},{"ruleId":"163","severity":2,"message":"166","line":66,"column":8,"nodeType":"165","endLine":66,"endColumn":18},{"ruleId":"142","severity":1,"message":"167","line":6,"column":27,"nodeType":"144","messageId":"145","endLine":6,"endColumn":32},{"ruleId":"142","severity":1,"message":"168","line":65,"column":9,"nodeType":"144","messageId":"145","endLine":65,"endColumn":19},{"ruleId":"142","severity":1,"message":"169","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"170","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":26},{"ruleId":"171","severity":1,"message":"172","line":132,"column":7,"nodeType":"173","messageId":"174","endLine":132,"endColumn":11},{"ruleId":"171","severity":1,"message":"175","line":135,"column":7,"nodeType":"173","messageId":"174","endLine":135,"endColumn":18},{"ruleId":"171","severity":1,"message":"176","line":139,"column":9,"nodeType":"173","messageId":"174","endLine":139,"endColumn":17},{"ruleId":"171","severity":1,"message":"176","line":144,"column":11,"nodeType":"173","messageId":"174","endLine":144,"endColumn":19},{"ruleId":"171","severity":1,"message":"176","line":148,"column":11,"nodeType":"173","messageId":"174","endLine":148,"endColumn":19},{"ruleId":"171","severity":1,"message":"177","line":154,"column":7,"nodeType":"173","messageId":"174","endLine":154,"endColumn":15},{"ruleId":"142","severity":1,"message":"178","line":33,"column":3,"nodeType":"144","messageId":"145","endLine":33,"endColumn":15},{"ruleId":"142","severity":1,"message":"179","line":22,"column":3,"nodeType":"144","messageId":"145","endLine":22,"endColumn":12},{"ruleId":"142","severity":1,"message":"159","line":23,"column":3,"nodeType":"144","messageId":"145","endLine":23,"endColumn":13},{"ruleId":"142","severity":1,"message":"180","line":39,"column":3,"nodeType":"144","messageId":"145","endLine":39,"endColumn":11},{"ruleId":"142","severity":1,"message":"181","line":59,"column":7,"nodeType":"144","messageId":"145","endLine":59,"endColumn":21},{"ruleId":"142","severity":1,"message":"182","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"183","line":4,"column":3,"nodeType":"144","messageId":"145","endLine":4,"endColumn":7},{"ruleId":"142","severity":1,"message":"178","line":10,"column":3,"nodeType":"144","messageId":"145","endLine":10,"endColumn":15},{"ruleId":"142","severity":1,"message":"184","line":14,"column":8,"nodeType":"144","messageId":"145","endLine":14,"endColumn":16},{"ruleId":"142","severity":1,"message":"185","line":15,"column":8,"nodeType":"144","messageId":"145","endLine":15,"endColumn":17},{"ruleId":"142","severity":1,"message":"186","line":18,"column":5,"nodeType":"144","messageId":"145","endLine":18,"endColumn":15},{"ruleId":"142","severity":1,"message":"187","line":19,"column":5,"nodeType":"144","messageId":"145","endLine":19,"endColumn":15},{"ruleId":"142","severity":1,"message":"188","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":33},{"ruleId":"142","severity":1,"message":"189","line":2,"column":35,"nodeType":"144","messageId":"145","endLine":2,"endColumn":40},{"ruleId":"142","severity":1,"message":"190","line":2,"column":42,"nodeType":"144","messageId":"145","endLine":2,"endColumn":48},{"ruleId":"142","severity":1,"message":"152","line":2,"column":50,"nodeType":"144","messageId":"145","endLine":2,"endColumn":54},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["191"],"no-negated-in-lhs",["192"],"'Layout' is defined but never used.","'Link' is defined but never used.",["191"],["192"],"'Component' is defined but never used.","'AcUnitIcon' is defined but never used.","'UrlField' is defined but never used.","'ReferenceField' is defined but never used.","'ArrayField' is defined but never used.","'SingleFieldList' is defined but never used.","'ReferenceArrayInput' is defined but never used.","'SelectArrayInput' is defined but never used.","react/jsx-no-undef","'Toolbar' is not defined.","JSXIdentifier","'SaveButton' is not defined.","'Paper' is defined but never used.","'cardStyles' is assigned a value but never used.","'simpleRestProvider' is defined but never used.","'jsonServerProvider' is defined but never used.","no-dupe-keys","Duplicate key 'name'.","ObjectExpression","unexpected","Duplicate key 'description'.","Duplicate key 'username'.","Duplicate key 'lastEdit'.","'BooleanField' is defined but never used.","'ChipField' is defined but never used.","'minWidth' is defined but never used.","'optionRenderer' is assigned a value but never used.","'Fragment' is defined but never used.","'Edit' is defined but never used.","'DoneIcon' is defined but never used.","'ClearIcon' is defined but never used.","'ImageInput' is defined but never used.","'ImageField' is defined but never used.","'createMuiTheme' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation"]