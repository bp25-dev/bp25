[{"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js":"1","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js":"2","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js":"3","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Drawer.js":"4","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Admins.js":"5","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Routes.js":"6","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/LogoutStyle.js":"7","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Exponate.js":"8","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Admin/AddAdmin.js":"9","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Admin/CreateCode.js":"10","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/TourEdit.js":"11","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/AddExponate.js":"12","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen.js":"13","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Touren.js":"14","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"15","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/Theme.js":"16"},{"size":620,"mtime":1608462829115,"results":"17","hashOfConfig":"18"},{"size":3569,"mtime":1610036941484,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608462829115,"results":"20","hashOfConfig":"18"},{"size":6035,"mtime":1609676788456,"results":"21","hashOfConfig":"18"},{"size":2577,"mtime":1610041784098,"results":"22","hashOfConfig":"18"},{"size":704,"mtime":1609672701770,"results":"23","hashOfConfig":"18"},{"size":1896,"mtime":1608462829115,"results":"24","hashOfConfig":"18"},{"size":4780,"mtime":1610041764082,"results":"25","hashOfConfig":"18"},{"size":191,"mtime":1609671524515,"results":"26","hashOfConfig":"18"},{"size":227,"mtime":1608462829115,"results":"27","hashOfConfig":"18"},{"size":228,"mtime":1608462829115,"results":"28","hashOfConfig":"18"},{"size":237,"mtime":1608462829115,"results":"29","hashOfConfig":"18"},{"size":1383,"mtime":1610041764082,"results":"30","hashOfConfig":"18"},{"size":3120,"mtime":1610043775115,"results":"31","hashOfConfig":"18"},{"size":3432,"mtime":1609945079603,"results":"32","hashOfConfig":"18"},{"size":472,"mtime":1610037043118,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"zx3xcf",{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js",["74","75"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["76","77"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js",["78","79","80"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Drawer.js",["81","82","83","84","85"],"import React from 'react';\nimport clsx from 'clsx';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n//icons\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\n\nimport { BrowserRouter as Router,\n    Route, Switch, Link } from \"react-router-dom\";\nimport Admins_test from './Admins';\nimport { RouterSharp } from '@material-ui/icons';\nimport Routes from './Routes';\nimport LogoutStyle from '../components/Style/LogoutStyle';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n\n  link: {\n    textDecoration: 'none', //ohne das wÃ¤ren die Namen unterstrichen\n    color: theme.palette.text.primary\n  },\n\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n \n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Router>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n        color =\"default\"\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Hessisches Landesmuseum Daicon={ItemIcon}rmstadt\n          </Typography>\n          <div className={classes.toolbarButtons}>\n              <IconButton><LogoutStyle/></IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n     <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n\n        <Divider />\n        <List>\n            <Link to=\"/Touren\" className={classes.link}>\n              <ListItem button key={'Touren'}>\n                <ListItemIcon> \n                 <NavigationIcon />\n                </ListItemIcon>\n                <ListItemText primary={'Touren'} />                \n             </ListItem>\n            </Link>\n\n            <Link to=\"/Exponate\" className={classes.link}>\n              <ListItem button key={'Exponate'}>\n                <ListItemIcon> \n                 <AccountBalanceIcon />\n                </ListItemIcon>\n                \n                 <ListItemText primary={\"Exponate\"} />\n             </ListItem>\n            </Link>\n     \n            <Link to=\"/User\" className={classes.link}>\n              <ListItem button key={'Admins'}>\n                <ListItemIcon> \n                 <SupervisorAccountIcon />\n                </ListItemIcon>\n                 <ListItemText primary={\"Admins\"} />\n             </ListItem>\n            </Link>\n        </List>\n      </Drawer>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n          <Routes></Routes>\n        \n      </main>\n        \n    </div>\n</Router>\n  );\n}\n",["86","87"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Admins.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Routes.js",["88","89"],"import React from 'react'\nimport { BrowserRouter as Router,\n    Route, Switch, Link } from \"react-router-dom\";\nimport Admins from './Admins';\nimport Exponate from './Exponate';\nimport Touren from './Touren';\n\n\n\n\nexport default class Routes extends React.Component {\n    render() {\n        return(\n            <div>\n            <Switch>\n           <Route exact path=\"/Touren\" render={() => (\n               <Touren></Touren>\n           )}/>\n              \n         \n          <Route exact path=\"/Exponate\">\n               <Exponate></Exponate>\n          </Route>\n          <Route exact path=\"/User\">\n                <Admins></Admins>\n            </Route>\n        </Switch>\n        </div>\n        )\n    }\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/LogoutStyle.js",["90","91","92"],"import React, { Component } from 'react'\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { CssBaseline } from '@material-ui/core';\n\nconst StyledMenu = withStyles()\n  ((props) => (\n    <Menu \n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\"\n      }}\n      {...props}\n    />\n  ));\n\n  const StyledMenuItem = withStyles((theme) => ({\n    root: {\n      \"&:focus\": {\n        backgroundColor: theme.palette.primary.main,\n        \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n          color: theme.palette.common.white\n        }\n      }\n    }\n  }))(MenuItem);\n\nexport default function LogoutStyle() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n      };\n\n    return(\n        <div>\n            <Button onClick={handleClick}>\n                <AccountCircleIcon/>\n            </Button>\n\n            <StyledMenu\n            id=\"customized-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n            >\n                <StyledMenuItem>\n                    <ListItemText primary=\"Abmelden\" onClick={blah}/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>            \n    )    \n}\n\nfunction blah()  {\n    return(\n        alert('Sie sind abgemeldet')\n    )\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Exponate.js",["93"],"import React from 'react';\nimport AddExponate from '../components/Exponate/AddExponate';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  BooleanField,\n  EditButton,\n  Edit,\n  SimpleForm,\n  TextInput,\n  BooleanInput,\n  Create,\n  Filter,\n  FilterList,\n  FilterListItem,\n  FilterLiveSearch\n} from 'react-admin';\n//icons\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ClassIcon from '@material-ui/icons/Class';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { Card as MuiCard, CardContent, withStyles } from '@material-ui/core';\n\n\nconst HasImageFilter = () => (\n  <FilterList label='BildverknÃ¼pfung' icon={<ImageSearchIcon />}>\n    <FilterListItem label='vorhanden' value={{ BildverknÃ¼pfung: 'vorhanden' }} />\n    <FilterListItem label='nicht vorhanden' value={{ BildverknÃ¼pfung: 'nicht vorhanden' }} />\n  </FilterList>\n);\n\nconst KategorieFilter = () => (\n  <FilterList\n      label=\"Kategorie\"\n      icon={<ClassIcon />}\n  >\n    <FilterListItem label='Art' value={{ Kategorie: 'Art' }} />\n     {/* {Kategorie.map(Kategorie => (\n          <FilterListItem\n              label={Kategorie.name}\n              key={Kategorie.id}\n              value={{ groups: Kategorie.id }}\n          />\n      ))}  */}\n  </FilterList>\n);\n\n// the filter sidebar\n// sidebar styling\nconst Card = withStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      order: -1, // display on the left rather than on the right of the list\n      width: '15em',\n      marginRight: '1em',\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n}))(MuiCard);\n\n// sidebar functionality\nconst FilterSidebar = () => (\n  <Card>\n    <CardContent>\n      <FilterLiveSearch source=\"full_name\" />\n      <HasImageFilter />\n      <KategorieFilter/>\n    </CardContent>\n  </Card>\n);\n\n// list the exhibits\nexport const ExponateList = (props) => (\n  <List {...props} title='Exponate' aside={<FilterSidebar />}>\n    <Datagrid  rowClick='edit' >\n      <TextField source='ObjektID' label='ID' />\n      <TextField source='Kategorie' />\n      <TextField source='Subkategorie' />\n      <TextField source='Titel' />\n      <TextField source='Jahr' />\n      <TextField source='Bild' />\n      <TextField source='Kunsttyp' />\n      <TextField source='Ersteller' />\n      <TextField source='Material' />\n      <TextField source='GrÃ¶Ãe' />\n      <TextField source='Ort' />\n      <TextField source='Beschreibung' />\n      <TextField source='InterdisziplinÃ¤rkontext' />\n      <BooleanField source=\"BildverknÃ¼pfung\" TrueIcon={CheckCircleOutlineIcon} FalseIcon={HighlightOffIcon}/>\n      {/* add new table with images and reference them here\n      <ReferenceField label=\"BilderverknÃ¼pfung\" source=\"image_url\" reference=\"BilderverknÃ¼pfung\"/> */}\n      <EditButton basePath='./app/components/Exponate.js' />\n    </Datagrid>\n  </List>\n);\n\n// edit an exhibit\nexport const ExponateEdit = (props) => (\n  <Edit title='Bearbeite Exponate' {...props}>\n    <SimpleForm>\n      <TextInput disabled source='ObjektID' />\n      <TextInput source='Kategorie' />\n      <TextInput source='Subkategorie' />\n      <TextInput source='Titel' />\n      <TextInput source='Jahr' />\n      <TextInput source='Bild' />\n      <TextInput source='Kunsttyp' />\n      <TextInput source='Ersteller' />\n      <TextInput source='Material' />\n      <TextInput source='GrÃ¶Ãe' />\n      <TextInput source='Ort' />\n      <TextInput source='Beschreibung' />\n      <TextInput source='InterdisziplinÃ¤rkontext' />\n      <BooleanInput source=\"BildverknÃ¼pfung\" \n      falseLabel=\"nicht vorhanden\"\n      trueLabel=\"vorhanden\" />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new exhibit\n// todo: ID should not be created manually but automacially (distinct id)\nexport const ExponateCreate = (props) => (\n  <Create title='Erstelle Exponate' {...props}>\n    <SimpleForm>\n      <TextInput source='Kategorie' />\n      <TextInput source='Subkategorie' />\n      <TextInput source='Titel' />\n      <TextInput source='Jahr' />\n      <TextInput source='Bild' />\n      <TextInput source='Kunsttyp' />\n      <TextInput source='Ersteller' />\n      <TextInput source='Material' />\n      <TextInput source='GrÃ¶Ãe' />\n      <TextInput source='Ort' />\n      <TextInput source='Beschreibung' />\n      <TextInput source='InterdisziplinÃ¤rkontext' />\n      <BooleanInput source=\"BildverknÃ¼pfung\"\n      falseLabel=\"nicht vorhanden\"\n      trueLabel=\"vorhanden\" />\n    </SimpleForm>\n  </Create>\n);\n\n// todo: embed text on the side -> move to resource in App.js?\nexport default class Exponate extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Exponaten-Seite</h1>\n        <AddExponate></AddExponate>\n      </div>\n    );\n  }\n}\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Admin/AddAdmin.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Admin/CreateCode.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/TourEdit.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/AddExponate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen.js",["94"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Touren.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["95","96"],"import * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport { Title } from 'react-admin';\n\n// style for the cards\nconst useStyles = makeStyles(() => ({\n   card: {\n    maxWidth: 500,\n    margin: 'auto',\n    transition: '0.3s',\n    boxShadow: '0 8px 40px -12px rgba(0,0,0,0.3)',\n    '&:hover': {\n      boxShadow: '0 16px 70px -12.125px rgba(0,0,0,0.3)',\n    },\n  }, \n  media: {\n    paddingTop: '56.25%',\n  },\n  content: {\n    textAlign: 'left',\n  },\n  heading: {\n    fontWeight: 'bold',\n  },\n  subheading: {\n    lineHeight: 1.8,\n  },\n  root: {\n    minWidth: 200\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\n// style for the gird\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\n  gridContainer: {\n    paddingLeft: '40px',\n    paddingRight: '40px',\n  },\n}));\n\n// card components for different links\nconst CustomCard = ({ classes, image, title, subtitle }) => {\n  const cardStyles = useStyles();\n  return (\n    <Card className={classes.card}>\n      <CardMedia className={classes.media} image={image} />\n      <CardContent className={classes.content}>\n        <Typography className={classes.title} variant={'h2'}>\n          {title}\n        </Typography>\n        <Typography className={classes.subtitle}>{subtitle}</Typography>\n      </CardContent>\n      <CardActions>\n        <Button size='small'>Klicke hier</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\n// place the card on a grid\nexport default function Dashboard() {\n  const cardStyles = useStyles();\n  const gridStyles = useGridStyles();\n  return (\n    <Grid\n      container\n      spacing={4}\n      className={gridStyles.gridContainer}\n      justify='center'\n    >\n      <Title title='Hessisches Landesmusuem' />\n      <Grid item xs={12} sm={6} md={4}>\n        <CustomCard\n          classes={cardStyles}\n          title={'Admins'}\n          subtitle={'Erstelle Administratoren'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/01_1180x0.png'\n          }\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} md={4}>\n        <CustomCard\n          classes={cardStyles}\n          title={'Touren'}\n          subtitle={'Erstelle Touren'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/02_376x376.png'\n          }\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} md={4}>\n        <CustomCard\n          classes={cardStyles}\n          title={'Exponate'}\n          subtitle={'Bearbeite Exponate'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/05_versionKlein_376x376.png'\n          }\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} md={4}>\n        <CustomCard\n          classes={cardStyles}\n          title={'Abzeichen'}\n          subtitle={'FÃ¼ge neue Abzeichen hinzu'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/03_376x376.png'\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/Theme.js",[],{"ruleId":"97","severity":1,"message":"98","line":7,"column":27,"nodeType":"99","messageId":"100","endLine":7,"endColumn":33},{"ruleId":"97","severity":1,"message":"101","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":19},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"97","severity":1,"message":"106","line":2,"column":27,"nodeType":"99","messageId":"100","endLine":2,"endColumn":33},{"ruleId":"97","severity":1,"message":"107","line":2,"column":35,"nodeType":"99","messageId":"100","endLine":2,"endColumn":41},{"ruleId":"97","severity":1,"message":"108","line":20,"column":3,"nodeType":"99","messageId":"100","endLine":20,"endColumn":13},{"ruleId":"97","severity":1,"message":"109","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":17},{"ruleId":"97","severity":1,"message":"110","line":27,"column":5,"nodeType":"99","messageId":"100","endLine":27,"endColumn":10},{"ruleId":"97","severity":1,"message":"111","line":27,"column":12,"nodeType":"99","messageId":"100","endLine":27,"endColumn":18},{"ruleId":"97","severity":1,"message":"112","line":28,"column":8,"nodeType":"99","messageId":"100","endLine":28,"endColumn":19},{"ruleId":"97","severity":1,"message":"113","line":29,"column":10,"nodeType":"99","messageId":"100","endLine":29,"endColumn":21},{"ruleId":"102","replacedBy":"114"},{"ruleId":"104","replacedBy":"115"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":27,"nodeType":"99","messageId":"100","endLine":2,"endColumn":33},{"ruleId":"97","severity":1,"message":"116","line":3,"column":20,"nodeType":"99","messageId":"100","endLine":3,"endColumn":24},{"ruleId":"97","severity":1,"message":"117","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"118","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":21},{"ruleId":"97","severity":1,"message":"119","line":14,"column":3,"nodeType":"99","messageId":"100","endLine":14,"endColumn":9},{"ruleId":"97","severity":1,"message":"120","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"121","line":3,"column":16,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"122","line":53,"column":9,"nodeType":"99","messageId":"100","endLine":53,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],"'AppBar' is defined but never used.","'Layout' is defined but never used.","'CodeCreate' is defined but never used.","'Container' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Admins_test' is defined but never used.","'RouterSharp' is defined but never used.",["123"],["124"],"'Link' is defined but never used.","'Component' is defined but never used.","'AcUnitIcon' is defined but never used.","'Filter' is defined but never used.","'Fragment' is defined but never used.","'Paper' is defined but never used.","'cardStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]