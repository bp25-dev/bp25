[{"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js":"1","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js":"2","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js":"3","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/CustomRoutes.js":"4","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyLayout.js":"5","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Footer.js":"6","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyTheme.js":"7","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/initialState.js":"8","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js":"9","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js":"10","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js":"11","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js":"12","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js":"13","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js":"14","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserList.js":"15","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserCreate.js":"16","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js":"17","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js":"18","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js":"19","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js":"20","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js":"21","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js":"22","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js":"23","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js":"24","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/LoginPage.js":"25","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/authProvider.js":"26","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js":"27","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"28","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyProfile/Profile.js":"29","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Faq/Faq.js":"30","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateFilterSidebar.js":"31","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/TourenFilter.js":"32","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/Stationen.js":"33","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/ProfilePictureGrid.js":"34","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserFilter.js":"35","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/customGraphQLProvider.js":"36","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/customQueryBuilder.js":"37","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/CustomActions/CustomBulkActions.js":"38","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/CustomActions/CustomListActions.js":"39","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/NOTUSEDtestmethods/testQueries.js":"40","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Feedback/TourenFeedback.js":"41","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Feedback/FeedbackGrid.js":"42","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/NOTUSEDrefreshAuth.js":"43"},{"size":620,"mtime":1615720566907,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1608462829115,"results":"46","hashOfConfig":"45"},{"size":6742,"mtime":1615727325979,"results":"47","hashOfConfig":"45"},{"size":338,"mtime":1615725242492,"results":"48","hashOfConfig":"45"},{"size":683,"mtime":1615624175645,"results":"49","hashOfConfig":"45"},{"size":1241,"mtime":1615720566895,"results":"50","hashOfConfig":"45"},{"size":353,"mtime":1615624175645,"results":"51","hashOfConfig":"45"},{"size":181,"mtime":1615624175645,"results":"52","hashOfConfig":"45"},{"size":3683,"mtime":1615725242492,"results":"53","hashOfConfig":"45"},{"size":3758,"mtime":1615725279289,"results":"54","hashOfConfig":"45"},{"size":3242,"mtime":1615725472897,"results":"55","hashOfConfig":"45"},{"size":3242,"mtime":1615724747180,"results":"56","hashOfConfig":"45"},{"size":2664,"mtime":1615720566891,"results":"57","hashOfConfig":"45"},{"size":3246,"mtime":1615724122508,"results":"58","hashOfConfig":"45"},{"size":3278,"mtime":1615723790190,"results":"59","hashOfConfig":"45"},{"size":510,"mtime":1615624175645,"results":"60","hashOfConfig":"45"},{"size":1248,"mtime":1615723849970,"results":"61","hashOfConfig":"45"},{"size":641,"mtime":1615724180436,"results":"62","hashOfConfig":"45"},{"size":2427,"mtime":1615723868318,"results":"63","hashOfConfig":"45"},{"size":2177,"mtime":1615723498533,"results":"64","hashOfConfig":"45"},{"size":1355,"mtime":1615720566887,"results":"65","hashOfConfig":"45"},{"size":1225,"mtime":1615724033767,"results":"66","hashOfConfig":"45"},{"size":1431,"mtime":1615723560797,"results":"67","hashOfConfig":"45"},{"size":606,"mtime":1615723558793,"results":"68","hashOfConfig":"45"},{"size":4102,"mtime":1615720566895,"results":"69","hashOfConfig":"45"},{"size":3042,"mtime":1615720566895,"results":"70","hashOfConfig":"45"},{"size":1570,"mtime":1615720566891,"results":"71","hashOfConfig":"45"},{"size":4378,"mtime":1615720566895,"results":"72","hashOfConfig":"45"},{"size":2937,"mtime":1615725140033,"results":"73","hashOfConfig":"45"},{"size":10204,"mtime":1615720566895,"results":"74","hashOfConfig":"45"},{"size":4233,"mtime":1615725321166,"results":"75","hashOfConfig":"45"},{"size":1620,"mtime":1615624175641,"results":"76","hashOfConfig":"45"},{"size":5766,"mtime":1615624175641,"results":"77","hashOfConfig":"45"},{"size":1956,"mtime":1615720566891,"results":"78","hashOfConfig":"45"},{"size":773,"mtime":1615624175645,"results":"79","hashOfConfig":"45"},{"size":1926,"mtime":1615727433992,"results":"80","hashOfConfig":"45"},{"size":1420,"mtime":1615723423633,"results":"81","hashOfConfig":"45"},{"size":401,"mtime":1615723702449,"results":"82","hashOfConfig":"45"},{"size":1401,"mtime":1615723667269,"results":"83","hashOfConfig":"45"},{"size":1531,"mtime":1615720566907,"results":"84","hashOfConfig":"45"},{"size":1755,"mtime":1615724706817,"results":"85","hashOfConfig":"45"},{"size":2825,"mtime":1615724706892,"results":"86","hashOfConfig":"45"},{"size":1441,"mtime":1615726959066,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"zx3xcf",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"91"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"91"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"91"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"91"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"91"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"91"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"91"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"91"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"91"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"91"},"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js",["194","195"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["196","197"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js",["198","199","200"],"import React, { Component } from 'react';\nimport { Admin, Resource, Login } from 'react-admin';\n//components\n//Exponate\nimport { ExponateCreate } from './app/components/Exponate/ExponateCreate.js';\nimport { ExponateEdit } from './app/components/Exponate/ExponateEdit.js';\nimport { ExponateList } from './app/components/Exponate/ExponateList.js';\n//Touren\nimport { TourenList } from './app/components/Touren/ListTouren.js';\nimport { TourenCreate } from './app/components/Touren/CreateTouren.js';\nimport { TourenEdit } from './app/components/Touren/EditTouren.js';\nimport {\n  FeedbackList,\n  FeedbackEdit,\n} from './app/components/Feedback/TourenFeedback.js';\n//Benutzer\nimport { UserList } from './app/components/User/UserList.js';\nimport { UserCreate } from './app/components/User/UserCreate.js';\nimport { AccountEdit } from './app/components/User/AccountEdit.js';\nimport { CodeList } from './app/components/User/Code/CodeList.js';\nimport { CodeCreate } from './app/components/User/Code/CodeCreate.js';\n//Bildverknüpfungen-Abzeichen\nimport { AbzeichenList } from './app/components/Abzeichen/AbzeichenList.js';\nimport { AbzeichenEdit } from './app/components/Abzeichen/AbzeichenEdit.js';\nimport { AbzeichenCreate } from './app/components/Abzeichen/AbzeichenCreate.js';\n//Bildverknüpfungen-Profilbilder\nimport { PictureList } from './app/components/Profilbilder/PictureList.js';\nimport { PictureEdit } from './app/components/Profilbilder/PictureEdit.js';\nimport { PictureCreate } from './app/components/Profilbilder/PictureCreate.js';\n//pages and theming \nimport Dashboard from './app/containers/Dashboard';\nimport CustomRoutesProfile from './app/containers/CustomRoutes.js';\nimport MyLayout from './app/containers/MyLayout.js';\nimport Footer from './app/containers/Footer.js';\nimport { MyTheme } from './app/containers/MyTheme.js';\n//icons\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PhotoFilterIcon from '@material-ui/icons/PhotoFilter';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport ListIcon from '@material-ui/icons/List';\nimport CreateIcon from '@material-ui/icons/Create';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\nimport HelpIcon from '@material-ui/icons/Help';\n// not used: login Page for fake data\nimport LoginPage from './app/containers/Login/LoginPage.js';\n// authProvider, Login for fakeData\nimport authProvider from './app/containers/Login/authProvider.js';\nimport initialState from './app/containers/Login/initialState.js';\n// attempts fetching real data\n//import dataProvider from './app/data/fake_data/fakeDataProvider.js';\nimport gqlDataProvider from './app/data/customGraphQLProvider.js';\nimport refreshAuth from './app/data/NOTUSEDrefreshAuth.js';\nimport authNew from './app/data/NOTUSEDrefreshAuth.js';\n\n\n\nconst MyLoginPage = () => (\n  <Login\n    backgroundImage='https://www.hlmd.de/fileadmin/user_upload/haupthalle_enthuellung.jpg'\n    style={{\n      backgroundPosition: 'center',\n    }}\n  />\n);\n\nclass App extends Component {\n  // first step: set initial state\n  constructor() {\n    super();\n    this.state = { dataProvider: null };\n  }\n  // second step: build up provider and set set\n  componentDidMount() {\n    /* const dataProvider = dataProviderFactory(\n      process.env.REACT_APP_DATA_PROVIDER);  */\n    const dataProvider = gqlDataProvider;\n    this.setState({ dataProvider });\n  }\n  render() {\n    const { dataProvider } = this.state;\n    if (!dataProvider) {\n      return <div>Loading</div>;\n    }\n    return (\n      <div>\n        <Admin\n          initial={initialState}\n          authProvider={authProvider}\n          dataProvider={dataProvider}\n          loginPage={MyLoginPage}\n          dashboard={Dashboard}\n          theme={MyTheme}\n          layout={MyLayout}\n          customRoutes={CustomRoutesProfile}\n        >\n          {(permissions) => [\n            <Resource\n              name='museumObject'\n              list={ExponateList}\n              edit={ExponateEdit}\n              create={ExponateCreate}\n              icon={AccountBalanceIcon}\n              options={{ label: 'Exponate' }}\n            />,\n            <Resource\n              name='tour'\n              list={TourenList}\n              edit={TourenEdit}\n              create={TourenCreate}\n              icon={NavigationIcon}\n              options={{ label: 'Touren' }}\n            />,\n            <Resource\n              name='Benutzer_overview'\n              icon={SupervisorAccountIcon}\n              options={{ label: 'Benutzer*innen', isMenuParent: true }}\n            />,\n            permissions === 'admin' ? (\n              <Resource\n                name='user'\n                list={UserList}\n                edit={AccountEdit}\n                create={UserCreate}\n                icon={ListIcon}\n                options={{\n                  label: 'Übersicht',\n                  menuParent: 'Benutzer_overview',\n                }}\n              />\n            ) : null,\n            permissions === 'admin' ? (\n              <Resource\n                name='code'\n                list={CodeList}\n                create={CodeCreate}\n                icon={CreateIcon}\n                options={{\n                  label: 'Code Erstellen',\n                  menuParent: 'Benutzer_overview',\n                }}\n              />\n            ) : null,\n            <Resource\n              name='Bilder_overview'\n              icon={AddPhotoAlternateIcon}\n              options={{ label: 'Bildverknüpfungen', isMenuParent: true }}\n            />,\n            <Resource\n              name='badge'\n              list={AbzeichenList}\n              edit={AbzeichenEdit}\n              create={AbzeichenCreate}\n              icon={PhotoFilterIcon}\n              options={{ label: 'Abzeichen', menuParent: 'Bilder_overview' }}\n            />,\n            <Resource\n              name='ProfilePicture'\n              list={PictureList}\n              edit={PictureEdit}\n              create={PictureCreate}\n              icon={AddPhotoAlternateIcon}\n              options={{ label: 'Profilbilder', menuParent: 'Bilder_overview' }}\n            />,\n            <Resource\n              name='Feedback'\n              list={FeedbackList}\n              edit={FeedbackEdit}\n              icon={RateReviewIcon}\n              options={{ label: 'Feedback' }}\n            />,\n            <Resource\n              name='faq'\n              list={FeedbackList}\n              icon={HelpIcon}\n              options={{ label: 'FAQ' }}\n            />,\n          ]}\n        </Admin>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/CustomRoutes.js",["201"],"import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {ProfileEdit} from './MyProfile/Profile.js';\nimport SimpleAccordion from './Faq/Faq.js';\n\nexport default [\n  <Route\n  key=\"my-profile\"\n  path=\"/my-profile\"\n  render={() => <ProfileEdit />}\n/>,\n<Route\n  key=\"faq\"\n  path=\"/faq\"\n  render={() => <SimpleAccordion />}\n/>\n\n\n];","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyLayout.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Footer.js",["202","203"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport mint from '../data/images/mint_logo.png';\nimport bm from '../data/images/bm_logo.png';\n\nconst useStyles = makeStyles({\n  wrapper: {\n    textAlign: 'center',\n  },\n  imgFooter: {\n    width: '100%',\n    heigth: 100,\n    margin: 'auto',\n    textAlign: 'center',\n    padding: 10,\n  },\n  image: {\n    width: '15%',\n    height: 'auto',\n    display: 'inline-block',\n    vertical: 'middle',\n  },\n  text: {\n    color: 'textSecondary'\n  }\n});\n\nconst Footer = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n        <div className={classes.imgFooter}>\n        <img src={bm} className={classes.image} />\n        <img src={mint} className={classes.image} />\n        </div>\n      <h6 className={classes.text} >\n        Das Projekt MINTplus<sup>2</sup>: Systematischer und vernetzter\n        Kompetenzaufbau in der Lehrerbildung im Umgang mit Digitalisierung und\n        Heterogenität wird im Rahmen der gemeinsamen „Qualitätsoffensive\n        Lehrerbildung“ von Bund und Ländern aus Mitteln des Bundesministeriums\n        für Bildung und Forschung gefördert\n      </h6>\n    </div>\n  );\n};\n\nexport default Footer;\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyTheme.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/initialState.js",["204"],"/**\nconst initialState = {\n    theme: 'dark',\n    grid: 5,\n};\n*/\nconst initialState = () => ({\n    theme: localStorage.getItem('theme'),\n    grid: localStorage.getItem('grid'),\n});\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js",["205"],"import React from 'react';\nimport {\n  Edit,\n  Toolbar,\n  SaveButton,\n  SimpleShowLayout,\n  //Forms\n  TabbedForm,\n  FormTab,\n  //Inputs\n  TextInput,\n  ImageInput,\n  ReferenceInput,\n  TextField,\n  ImageField,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport { makeStyles } from '@material-ui/core';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveButton label='Speichern' />\n  </Toolbar>\n);\n\nconst DeleteConfirmContent = (props) => {\n  return (\n    <SimpleShowLayout {...props}>\n      <TextField source='_id' label='Objekt ID' />\n      <TextField source='title' label='Titel' />\n      <TextField source='category' label='Kategorie' />\n      <TextField source='year' label='Jahr' />\n      <TextField source='art_type' label='Kunsttyp' />\n      <TextField source='creator' label='Ersteller' />\n    </SimpleShowLayout>\n  );\n};\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\n// edit an exhibit\nexport const ExponateEdit = (props) => {\n  const classes = useStyles();\n  return (\n    <Edit {...props} title='Bearbeite Exponate'>\n      <TabbedForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n        <FormTab label='Übersicht'>\n          <TextInput source='_id' label='ObjektID' fullWidth />\n          <TextInput source='title' label='Titel' fullWidth />\n          <RichTextInput source='description' label='Beschreibung' fullWidth />\n          <TextInput\n            source='additionfal_inf'\n            label='Weitere Informationen'\n            fullWidth\n          />\n          <TextInput source='category' label='Kategorie' fullWidth />\n          <TextInput source='sub_category' label='Subkategorie' fullWidth />\n          <TextInput\n            source='interdisciplinary_context'\n            label='Interdisziplinäre Bezüge'\n            fullWidth\n          />\n        </FormTab>\n        <FormTab label='Eckdaten'>\n          <TextInput source='year' label='Jahr' fullWidth />\n          <TextInput source='art_type' label='Kunsttyp' fullWidth />\n          <TextInput source='creator' label='Ersteller' fullWidth />\n          <TextInput source='material' label='Material' fullWidth />\n          <TextInput\n            source='size_'\n            label='Größe'\n            formClassName={classes.inlineBlock}\n          />\n          <TextInput\n            source='location'\n            label='Ort'\n            formClassName={classes.inlineBlock}\n          />\n        </FormTab>\n        <FormTab label='Bildverknüpfungen'>\n          {/* <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n              <ImageInput source='picture' placeholder={<p>Klicke hier, um ein Bild von dem Exponat hinzuzufügen, oder das vorhandene Bild zu ändern</p>} fullWidth />\n            </ReferenceInput>  */}\n          {/* for user study */}\n          <ImageInput\n            source='img'\n            label='Bild'\n            placeholder={\n              <p>\n                Klicke hier, um ein Bild von dem Exponat hinzuzufügen, oder das\n                vorhandene Bild zu ändern\n              </p>\n            }\n            fullWidth\n          >\n            <ImageField source='picture' />\n          </ImageInput>\n\n          <ImageField source='img' label='aktuelle Bildverknüpfung' />\n          <TextField source='img' label='' />\n        </FormTab>\n        <DeleteWithCustomConfirmButton\n          title={'Sind Sie sicher, dass Sie dieses Exponat löschen wollen?'}\n          content={DeleteConfirmContent}\n          label='Löschen'\n          cancel='Abbrechen'\n        />\n      </TabbedForm>\n    </Edit>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js",["206"],"import React from 'react';\nimport {\n  List,\n  SingleFieldList,\n  Datagrid,\n  EditButton,\n  //Shows\n  SimpleShowLayout,\n  Show,\n  //Fields\n  TextField,\n  ImageField,\n  ReferenceArrayField,\n} from 'react-admin';\nimport { FilterSidebar } from './ExponateFilterSidebar.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CustomListActions } from '../../containers/CustomActions/CustomListActions.js';\nimport { CustomBulkActions } from '../../containers/CustomActions/CustomBulkActions.js';\n\nconst useStyles = makeStyles({\n  field: {\n    maxWidth: 1200,\n  },\n  rowCell: {\n    padding: '0px',\n  },\n});\n\n// change each second row to light blue\nconst postRowStyle = (record, index) => ({\n  backgroundColor: index % 2 ? 1 : '#e4edf8',\n});\n\n// edit expand component\nconst ImageShow = (props) => {\n  const classes = useStyles(props);\n  return (\n    <Show\n      {...props}\n      title=' ' /* disable the app title change when shown */\n      actions={false}\n    >\n      <SimpleShowLayout>\n        <TextField source='art_type' label='Kunsttyp' />\n        <TextField\n          source='interdisciplinary_context'\n          label='Interdisziplinäre Bezüge'\n        />\n        <TextField\n          source='description'\n          label='Beschreibung'\n          className={classes.field}\n        />\n        <TextField source='additionfal_inf' label='Weitere Informationen' />\n        <ImageField source='img' label='Bild' />\n        {/* add new table with images and reference them here*/}\n        <ReferenceArrayField\n          label='Bildverknüpfungen'\n          reference='Pictures'\n          source='picture.$oid'\n        >\n          <SingleFieldList>\n            <ImageField source='picture.$oid' />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <TextField source='year' label='Jahr' />\n        <TextField source='material' label='Material' />\n        <TextField source='size_' label='Größe' />\n        <TextField source='location' label='Ort' />\n      </SimpleShowLayout>\n    </Show>\n  );\n};\n\n// list the exhibits\nexport const ExponateList = (props) => {\n  const classes = useStyles(props);\n  return (\n    <List\n      {...props}\n      title='Exponate'\n      aside={<FilterSidebar />}\n      actions={<CustomListActions />}\n      bulkActionButtons={<CustomBulkActions />}\n    >\n      <Datagrid\n        rowClick='expand'\n        expand={<ImageShow />}\n        rowStyle={postRowStyle}\n      >\n        {/* todo: use ObjectID as primary key \n        instead of <TextField source='ID' /> */}\n        <TextField source='_id' label='ObjektID' />\n        <TextField source='title' label='Titel' />\n        <TextField source='creator' label='Ersteller' />\n        <TextField source='category' label='Kategorie' />\n        <TextField source='sub_category' label='Subkategorie' />\n        {/*TODO: remove direct fields after user study */}\n        <TextField source='img' label='Bild' />\n        {/* should be true if there is an linked picture \n        <ReferenceField\n          label='Bildverknüpfung'\n          source='picture'\n          reference='Pictures'\n        >\n          <BooleanField source='picture' />\n        </ReferenceField>*/}\n        <EditButton label='Editieren' />\n      </Datagrid>\n    </List>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js",["207","208","209"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SingleFieldList,\n  //options\n  EditButton,\n  Show,\n  SimpleShowLayout,\n  //fields\n  TextField,\n  DateField,\n  NumberField,\n  ChipField,\n  ArrayField,\n} from 'react-admin';\nimport {\n  QuestionField,\n  AnswerField,\n  MultipleChoiceQuestionField,\n  MultipleChoiceAnswerField,\n} from './Stationen';\nimport { FilterBar } from './TourenFilter';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CustomListActions } from '../CustomListActions.js';\nimport { CustomBulkActions } from '../../containers/CustomActions/CustomBulkActions.js';\n\n//edit expand component\n//TODO: get information about stations (from the video) and model them\nconst StationShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=''\n    actions={false}\n  >\n    <SimpleShowLayout>\n      <ArrayField source='Stationen'>\n        <Datagrid>\n          <QuestionField />\n        </Datagrid>\n      </ArrayField>\n    </SimpleShowLayout>\n  </Show>\n);\n\n// margin to divide filterBar from list\nconst useStyles = makeStyles({\n  main: {\n    marginTop: 20,\n  },\n});\n\n// change each second row to light blue\nconst postRowStyle = (record, index) => ({\n  backgroundColor: index % 2 ? 1 : '#e4edf8',\n});\n\n// list existing tours\nexport const TourenList = (props) => {\n  const classes = useStyles(props);\n  return (\n    <List\n      {...props}\n      title='Touren'\n      filters={<FilterBar />}\n      actions={<CustomListActions />}\n      bulkActionButtons={<CustomBulkActions />}\n      classes={{ main: classes.main }}\n    >\n      <Datagrid\n        rowClick='expand'\n        expand={<StationShow />}\n        rowStyle={postRowStyle}\n      >\n        {/* TODO: Whats the primaery key? replace Titel for pk or use built in  \n        dont show id for user study \n        <TextField source='_id' label='ID' />*/}\n        <TextField source='name' label='Titel' />\n        <TextField source='description' label='Beschreibung' />\n        {/* <ReferenceArrayField\n          label='Benutzer'\n          reference='Benutzer'\n          source='user.username'\n        >\n          <SingleFieldList>\n            <ChipField source='username' />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <ReferenceField source='owner' reference='Benutzer' label='Ersteller'>\n          <ChipField source='username' />\n        </ReferenceField> */}\n        {/* created fields for user study */}\n        <TextField source='owner.username' label='Ersteller' />\n        <ArrayField source='user' label='beteiligte Benutzer'>\n          <SingleFieldList>\n            <ChipField source='username' />\n          </SingleFieldList>\n        </ArrayField>\n        {/* end of created fields for user study */}\n        <TextField source='search_id' label='Touren Code' />\n        <TextField source='session_id' label='Passwort' />\n        <DateField\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberField source='difficulty' label='Schwierigkeitsgrad' />\n        <ChipField source='status' label='Status' />\n        <EditButton label='Editieren' />\n      </Datagrid>\n    </List>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js",["210"],"import React from 'react';\nimport {\n  Create,\n  SimpleForm,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //options\n  SimpleFormIterator,\n  //fields\n  TextField,\n  //inputs\n  SelectInput,\n  ImageInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  ReferenceInput,\n  NumberInput,\n  ArrayInput,\n  BooleanInput,\n  DateInput,\n  TextInput,\n} from 'react-admin';\n\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// create a new tour\n// todo: ID should not be created manually but automatically (distinct id)\nexport const TourenCreate = (props) => (\n    <Create title='Erstelle Touren' {...props}>\n      <SimpleForm warnWhenUnsavedChanges>\n        <TextInput disabled source='ID' label = 'ID' fullWidth/>\n        <TextInput source='name' label='Titel' fullWidth/>\n        <TextInput source='description' label='Beschreibung' fullWidth />\n        <ReferenceInput source='user' reference='Benutzer' label='Ersteller' fullWidth>\n          <SelectInput optionText='username' />\n        </ReferenceInput>\n        <ReferenceArrayInput source='user' reference='Benutzer' fullWidth>\n          <SelectArrayInput optionText='username' />\n        </ReferenceArrayInput>\n        <TextInput source='search_id' label='Touren Code' fullWidth/>\n        <TextInput source='session_id' label='Passwort' fullWidth/>\n        <DateInput\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberInput\n          source='difficulty'\n          label='Schwierigkeitsgrad'\n          validate={validateDifficulty}\n        />\n        <SelectInput\n          source='Status'\n          choices={[\n            { id: 'freigegeben', name: 'freigegeben' },\n            { id: 'ausstehend', name: 'ausstehend' },\n            { id: 'privat', name: 'privat' },\n          ]}\n        />\n        {/*  TODO: model the different stations and translate them into edit Inputs*/}\n        <ArrayInput source='Stationen'>\n          <SimpleFormIterator>\n            <TextField source='Objekt' />\n            <BooleanInput source='Foto' />\n            <BooleanInput source='Text' />\n            <BooleanInput source='Details' />\n            <TextInput source='Textfeld' />\n            <ArrayInput source='Fragen'>\n              <SimpleFormIterator>\n                <TextInput source='Antwort' />\n                <BooleanInput source='Antwort' fullWidth />\n              </SimpleFormIterator>\n            </ArrayInput>\n            <ImageInput source='Bild' fullWidth />\n          </SimpleFormIterator>\n        </ArrayInput>\n      </SimpleForm>\n    </Create>\n  );\n  ","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js",["211","212","213","214","215"],"import React from 'react';\nimport {\n  Edit,\n  TabbedForm,\n  FormTab,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //fields\n  TextField,\n  //inputs\n  SelectInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  ReferenceInput,\n  NumberInput,\n  DateInput,\n  TextInput,\n  Toolbar,\n  SimpleShowLayout,\n  // custom buttons\n  SaveButton,\n} from 'react-admin';\nimport {\n  QuestionInput,\n  AnswerInput,\n  MultipleChoiceQuestionInput,\n  MultipleChoiceAnswerInput,\n} from './Stationen';\nimport { QuestionField } from './Stationen.js';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle =\n  'Sind Sie sicher, dass Sie diese Tour löschen wollen?';\n\nconst DeleteConfirmContent = (props) => {\n  return (\n    <SimpleShowLayout {...props}>\n      <TextField disabled source='ID' label='ID' fullWidth />\n      <TextField source='name' label='Titel' fullWidth />\n      <TextField source='description' label='Beschreibung' fullWidth />\n      <TextField source='search_id' label='Touren Code' fullWidth />\n    </SimpleShowLayout>\n  );\n};\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [\n  number(),\n  minValue(1, 'Bitte wähle eine Zahl zwischen 1 und 5'),\n  maxValue(5, 'Bitte wähle eine Zahl zwischen 1 und 5'),\n];\n\n// edit a tour\nexport const TourenEdit = (props) => (\n  <Edit title='Bearbeite Touren' {...props} successMessage=\"Die Änderungen wurden gespeichert\" >\n    <TabbedForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n      <FormTab label='Informationen'>\n        <TextInput disabled source='ID' label='ID' fullWidth />\n        <TextInput source='name' label='Titel' fullWidth />\n        <TextInput source='description' label='Beschreibung' fullWidth />\n        <ReferenceInput\n          disabled\n          source='user'\n          reference='Benutzer'\n          label='Ersteller'\n          fullWidth\n        >\n          <SelectInput optionText='username' />\n        </ReferenceInput>\n        <ReferenceArrayInput\n          disabled\n          source='user'\n          reference='Benutzer'\n          fullWidth\n        >\n          <SelectArrayInput optionText='username' />\n        </ReferenceArrayInput>\n        <TextInput source='search_id' label='Touren Code' fullWidth />\n        <TextInput source='session_id' label='Passwort' fullWidth />\n        <DateInput\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberInput\n          source='difficulty'\n          label='Schwierigkeitsgrad'\n          validate={validateDifficulty}\n        />\n        <SelectInput\n          source='Status'\n          choices={[\n            { id: 'freigegeben', name: 'freigegeben' },\n            { id: 'ausstehend', name: 'ausstehend' },\n            { id: 'privat', name: 'privat' },\n          ]}\n        />\n      </FormTab>\n      <FormTab label='Stationen'>\n      </FormTab>\n      <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}\n          content={DeleteConfirmContent}\n          label='Löschen'\n          cancel='Abbrechen'\n        />\n    </TabbedForm>\n  </Edit>\n);\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserList.js",["216"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SingleFieldList,\n  EditButton,\n  ChipField,\n  FunctionField,\n  BooleanField,\n  ReferenceManyField,\n} from 'react-admin';\n// material UI imports\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CustomListActions } from '../CustomListActions.js';\nimport { CustomBulkActions } from '../CustomBulkActions.js';\nimport { UserFilterBar } from './UserFilter';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst CustomerField = ({ record }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Avatar\n        className={classes.avatar}\n        record={record}\n        style={{ width: 25, height: 25 }}\n      />\n      {record.username}\n    </div>\n  );\n};\n\n// change each second row to light blue\nconst postRowStyle = (record, index) => ({\n  backgroundColor: index % 2 ? 1 : '#e4edf8',\n});\n\n// show eixsting users\nexport const UserList = (props) => (\n  <List\n    {...props}\n    title='Benutzer*innen'\n    filters={<UserFilterBar />}\n    actions={<CustomListActions />}\n    bulkActionButtons={<CustomBulkActions />}\n  >\n    <Datagrid rowStyle={postRowStyle}>\n      {/*  TODO: get real primary key of user ID (username?) \n      dont show id for user study\n      <TextField source='id' label='ID' /> */}\n      <CustomerField source='username' label='Benutzername' />\n      <FunctionField\n        source='password'\n        label='Passwort'\n        render={(record) => '********'}\n      />\n      <BooleanField\n        source='Adminrechte'\n        label='Adminrechte'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <ReferenceManyField\n        label='Erstellte Touren'\n        reference='Touren'\n        source='username'\n        target='owner.username'\n      >\n        <SingleFieldList>\n          <ChipField source='name' />\n        </SingleFieldList>\n      </ReferenceManyField>\n      <EditButton label=\"Editieren\"/>\n    </Datagrid>\n  </List>\n);\n\nconst optionRenderer = (choice) => `${choice.picture}`;\n\n// edit password with user rights first try\n/* export const AccountEdit = ({ permissions, ...props }) => (\n  <Edit title='Accountdaten ändern' {...props}>\n    <TabbedForm initialValues={{ role: 'user' }}>\n      <FormTab label='user.form.summary'>\n        {permissions === 'admin' && <TextInput disabled source='id' />}\n        <TextInput source='username' label='Username' validate={required()} />\n      </FormTab>\n      {permissions === 'admin' && (\n        <FormTab label='user.form.security'>\n          <TextInput source='email' label='Email' validate={required()} />\n          <PasswordInput\n            source='password'\n            label='Passwort'\n            validate={required()}\n          />\n          <BooleanInput\n            source='Adminrechte'\n            label='Adminrechte erlauben?'\n            validate={required()}\n          />\n        </FormTab>\n      )}\n    </TabbedForm>\n  </Edit>\n); */\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/LoginPage.js",["217","218","219","220","221","222"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Field, Form } from 'react-final-form';\nimport { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { useLogin } from 'react-admin';\n\n// site components\nimport authProvider from \"./authProvider\";\nimport './LoginPage.css';\n\nconst FakeLogin = (props) => {\n  const login = useLogin();\n  const handleSubmit = auth => {\n    login(auth);\n  };\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <div className='App'>\n            <header className='App-header'>\n              <div className='Login'>\n                <Button>\n                  <LockIcon color='primary' fontSize='large' />\n                </Button>\n                <Field\n                  variant='standard'\n                  label='Benutzername'\n                  margin='normal'\n                />\n                <Field\n                  variant='standard'\n                  label='Passwort'\n                  margin='normal'\n                  type='password'\n                />\n\n                <div className='Button'>\n                  <Button\n                    variant='contained'\n                    type='submit'\n                    color='primary'\n                    onClick={() => {}}\n                  >\n                    ANMELDEN\n                  </Button>\n                </div>\n              </div>\n            </header>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n      open: false,\n    };\n  }\n\n  setUsername = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  setPassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <div className='Login'>\n            <Button>\n              <LockIcon color='primary' fontSize='large' />\n            </Button>\n            <TextField\n              variant='standard'\n              label='Benutzername'\n              margin='normal'\n              onChange={this.setUsername}\n              value={this.state.username}\n            />\n            <TextField\n              variant='standard'\n              label='Passwort'\n              margin='normal'\n              type='password'\n              onChange={this.setPassword}\n              value={this.state.password}\n            />\n\n            <div className='Button'>\n              \n              <Button variant='contained' color='primary' onClick={() => {}}>\n                ANMELDEN\n              </Button>\n             \n            </div>\n          </div>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n          >\n            <DialogTitle id='alert-dialog-title'></DialogTitle>\n            <DialogContent>\n              <DialogContentText id='alert-dialog-description'>\n                {this.state.message}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color='primary'> \n                Okay\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Login;","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/authProvider.js",["223"],"/**\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\n\nexport default (type, params) => {\n    // called when the user attempts to log in\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        if (username === 'login' && password === 'password') {\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n        }\n    }\n    // called when the user clicks on the logout button\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    // called when the API returns an error\n    if (type === AUTH_ERROR) {\n        const { status } = params;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n    // called when the user navigates to a new location\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unknown method');\n};\n*/\n\nexport default {\n  login: ({ username, password }) => {\n      if (username === 'admin' && password === 'password') {\n          localStorage.removeItem('not_authenticated');\n          localStorage.setItem('role', 'admin');\n          localStorage.setItem('login', username);\n          localStorage.setItem('user', username);\n          return Promise.resolve();\n      }\n      if (username === 'user' && password === 'password') {\n          localStorage.setItem('role', 'user');\n          localStorage.removeItem('not_authenticated');\n          localStorage.setItem('login', username);\n          localStorage.setItem('user', username);\n          return Promise.resolve();\n      }\n      if (username === 'Simone' && password === 'password') {\n          localStorage.setItem('role', 'admin');\n          localStorage.removeItem('not_authenticated');\n          localStorage.setItem('login', username);\n          localStorage.setItem('user', username);\n          return Promise.resolve();\n      }\n      localStorage.setItem('not_authenticated', true);\n      return Promise.reject();\n  },\n  logout: () => {\n      localStorage.setItem('not_authenticated', true);\n      localStorage.removeItem('role');\n      localStorage.removeItem('login');\n      localStorage.removeItem('user');\n      return Promise.resolve();\n  },\n  checkError: ({ status }) => {\n      return status === 401 || status === 403\n          ? Promise.reject()\n          : Promise.resolve();\n  },\n  checkAuth: () => {\n      return localStorage.getItem('not_authenticated')\n          ? Promise.reject()\n          : Promise.resolve();\n  },\n  getPermissions: () => {\n      const role = localStorage.getItem('role');\n      return Promise.resolve(role);\n  },\n  getIdentity: () => {\n      return {\n          id: localStorage.getItem('login'),\n          fullName: localStorage.getItem('user'),\n      };\n  },\n};","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js",["224","225","226"],"\nimport React from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  PasswordInput,\n  TextInput,\n  BooleanInput,\n  SimpleShowLayout,\n  TextField,\n  BooleanField,\n  ReferenceInput,\n  SelectInput,\n  Toolbar,\n  SaveButton\n} from 'react-admin';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle = 'Sind Sie sicher, dass Sie diesen Account löschen wollen?';\n\nconst DeleteConfirmContent = props => {\n  return (\n    <SimpleShowLayout {...props} >\n      <TextField source='id' label='ID' />\n      <TextField source='username' label='Benutzername' />\n      <BooleanField source='Adminrechte' label='Adminrechte' />\n    </SimpleShowLayout>\n  );\n};\n\n// TODO: edit password should be restricted to users with admin status \nexport const AccountEdit = (props) => (\n    <Edit title='Accountdaten ändern' {...props}>\n      <SimpleForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n        <TextInput disabled source='id' label='ID' fullWidth />\n        <TextInput source='username' label='Benutzername' fullWidth/>\n        <PasswordInput source='password' label='Passwort' fullWidth/>\n        <BooleanInput source='Adminrechte' label='Adminrechte erlauben?' />\n        <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}      \n          content={DeleteConfirmContent}  \n          label='Löschen'                 \n          cancel='Abbrechen'                 \n        />\n      </SimpleForm>\n    </Edit>\n  );\n  \n  ","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["227"],"import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'react-admin';\n//material UI imports\nimport Card from '@material-ui/core/Card';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport badges from '../data/images/Badges.png';\nimport exponate from '../data/images/Exponate.png';\nimport tours from '../data/images/Tours.png';\nimport user from '../data/images/User.png';\n\n// style for the cards\nconst useCardStyles = makeStyles(() => ({\n  card: {\n    maxWidth: '100%',\n    margin: 'auto',\n    transition: '0.3s',\n    color: '#000',\n    backgroundColor: 'transparent',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    marginLeft: '50%',\n    margin: 'auto',\n    display: 'flex',\n    objectFit: 'contain',\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    textAlign: 'left',\n  },\n  heading: {\n    fontWeight: 'bold',\n  },\n  subheading: {\n    lineHeight: 1.8,\n  },\n  root: {\n    minWidth: '90%',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n// style for the grid\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\n  gridContainer: {\n    maxWidth: '100%',\n    margin: 'auto',\n    position: 'relative',\n  },\n}));\n\n// card components for different links\nconst CustomCard = ({ classes, image, title, subtitle, path }) => {\n  const cardStyles = useCardStyles();\n  return (\n    <Card className={classes.card}>\n      <div className={classes.con}>\n        <CardContent className={classes.content}>\n          <div\n            style={{\n              position: 'relative',\n            }}\n          >\n            <CardMedia className={classes.media} image={image} />\n            <div\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n              }}\n            >\n              <Typography\n                className={classes.title}\n                variant={'h4'}\n                component={'h4'}\n              >\n                {title}\n              </Typography>\n              <Typography className={classes.subtitle}>{subtitle}</Typography>\n              <CardActions>\n                <Link to={path}>\n                  <Button  color='secondary' variant='contained' renderAs='button'>\n                    Klicke hier\n                  </Button>\n                </Link>\n              </CardActions>\n            </div>\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\n//Copyright\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link to='/' color='inherit'>\n        Projekt Geschichte vernetzt\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n// place the card on a grid\nexport default function Dashboard() {\n  const cardStyles = useCardStyles();\n  const gridStyles = useGridStyles();\n\n  return (\n    <Container>\n      <Grid\n        container\n        spacing={0}\n        className={gridStyles.gridContainer}\n        justify='center'\n      >\n        <Title title='Geschichte vernetzt - Vergangenes interdisziplinär erforschen und vermitteln | TU Darmstadt' />\n        <Grid item md>\n          <CustomCard\n            classes={cardStyles}\n            title={'Benutzer*innen'}\n            subtitle={'Verwalte Benutzer*innen'}\n            image={user}\n            path='/Benutzer'\n          />\n          <CustomCard\n            classes={cardStyles}\n            title={'Touren'}\n            subtitle={'Erstelle Touren'}\n            image={tours}\n            path='/Touren'\n          />\n        </Grid>\n        <Grid item md>\n          <CustomCard\n            classes={cardStyles}\n            title={'Exponate'}\n            subtitle={'Bearbeite Exponate'}\n            image={exponate}\n            path='/Exponate'\n          />\n          <CustomCard\n            classes={cardStyles}\n            title={'Bildverknüpfungen'}\n            subtitle={'Füge neue Bildverknüpfungen hinzu'}\n            image={badges}\n            path='/Abzeichen'\n          />\n        </Grid>\n      </Grid>\n      <Copyright />\n    </Container>\n  );\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyProfile/Profile.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Faq/Faq.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateFilterSidebar.js",["228","229","230"],"import React from 'react';\nimport {\n  useListContext,\n  FilterList,\n  FilterListItem,\n  FilterLiveSearch,\n} from 'react-admin';\n// material UI styling\nimport { Card as MuiCard, CardContent, withStyles } from '@material-ui/core';\n//icons\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ClassIcon from '@material-ui/icons/Class';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SchoolIcon from '@material-ui/icons/School';\nimport ArtTrackIcon from '@material-ui/icons/ArtTrack';\n\n// filter sidebar styling\nconst Card = withStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      order: -1, // display on the left rather than on the right of the list\n      width: '15em',\n      minWidth: 250,\n      marginRight: '1em',\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n}))(MuiCard);\n\n// check if picture object is not empty (create boolean)\nconst HasImageFilter = () => (\n  <FilterList label='Bildverknüpfung' icon={<ImageSearchIcon />}>\n    <FilterListItem label='vorhanden' value={{ pic: true }} />\n    <FilterListItem label='nicht vorhanden' value={{ pic: false }} />\n  </FilterList>\n);\n\nconst MapSubCategoryFilter = () => {\n  const { ids, data } = useListContext();\n  return (\n    <FilterList label='Subkategorie' icon={<ClassIcon />}>\n      {ids.map((id) => (\n        <FilterListItem\n          label={data[id].sub_category}\n          key={data[id]._id}\n          value={{ sub_category: data[id].sub_category }}\n        />\n      ))}\n    </FilterList>\n  );\n};\n\n// manual\n{\n  /**const MapSubCategoryFilter = () => {\n    return (\n      <FilterList label='Subkategorie' icon={<ClassIcon />}>\n          <FilterListItem\n            label = \"Archäologie/Vor- und Frühgeschichte\"\n            value = {{ sub_category : \"Archäologie/Vor- und Frühgeschichte\" }}\n          />\n          <FilterListItem\n            label = \"Gotik\"\n            value = {{ sub_category : \"Gotik\" }}\n          />\n          <FilterListItem\n            label = \"Expressionsimus\"\n            value = {{ sub_category : \"Expressionsimus\" }}\n          />\n          <FilterListItem\n            label = \"Realismus\"\n            value = {{ sub_category : \"Realismus\" }}\n          />\n          <FilterListItem\n            label = \"Symbolismus\"\n            value = {{ sub_category : \"Symbolismus\" }}\n          />\n      </FilterList>\n    );\n  };**/\n}\n\nconst MapCreatorFilter = () => {\n  const { ids, data } = useListContext();\n  return (\n    <FilterList label='Ersteller' icon={<PersonIcon />}>\n      {ids.map((id) => (\n        <FilterListItem\n          label={data[id].creator}\n          key={data[id]._id}\n          value={{ creator: data[id].creator }}\n        />\n      ))}\n    </FilterList>\n  );\n};\n\n//problem: same art type is displayed more than once\n{\n  /**const MapArtTypeFilter = () => {\n    const { ids, data } = useListContext();\n    return (\n      <FilterList label='Kunsttyp' icon={<ArtTrackIcon />}>\n        {ids.map((id) => (\n          <FilterListItem\n            label={data[id].art_type}\n            key={data[id]._id}\n            value={{ art_type: data[id].art_type }}\n          />\n        ))}\n      </FilterList>\n    );\n  }; **/\n}\n\nconst MapArtTypeFilter = () => {\n  return (\n    <FilterList label='Kunsttyp' icon={<ArtTrackIcon />}>\n      <FilterListItem label='Gemälde' value={{ art_type: 'Gemälde' }} />\n      <FilterListItem\n        label='Kunsthandwerk; Fibel'\n        value={{ art_type: 'Kunsthandwerk; Fibel' }}\n      />\n    </FilterList>\n  );\n};\n\nconst MapContextFilter = () => {\n  const { ids, data } = useListContext();\n  return (\n    <FilterList label='Interdisziplinäre Bezüge' icon={<SchoolIcon />}>\n      {ids\n        .map((id) => (\n          <FilterListItem\n            label={data[id].interdisciplinary_context.split('Themen:')}\n            value={data[id]._id}\n          />\n        ))\n        .filter((a, b) => ids.indexOf(a) === b)}\n    </FilterList>\n  );\n};\n\n// sidebar functionality\nexport const FilterSidebar = () => {\n  return (\n    <Card>\n      <CardContent>\n        <FilterLiveSearch />\n        <HasImageFilter />\n        <MapArtTypeFilter />\n        <MapSubCategoryFilter />\n        <MapCreatorFilter />\n      </CardContent>\n    </Card>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/TourenFilter.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/Stationen.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/ProfilePictureGrid.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserFilter.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/customGraphQLProvider.js",["231"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/customQueryBuilder.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/CustomActions/CustomBulkActions.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/CustomActions/CustomListActions.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/NOTUSEDtestmethods/testQueries.js",["232","233"],"import { gql, useQuery, useMutation } from '@apollo/client';\n\nexport const SIGNUP = gql`\n  mutation createAdmin($username: String!, $password: String!) {\n    createAdmin(username: $username, password: $password) {\n        user {\n          username\n        }\n        ok\n    }\n  }\n`;\n\nexport const AUTH = gql`\n  mutation auth($username: String!, $password: String!) {\n    auth(username: $username, password: $password) {\n        accessToken\n    }\n  }\n`;\n\nexport const REFRESH = gql`\n  mutation refresh($refreshToken: String!) {\n    refresh(refreshToken: $refreshToken) {\n        id\n        newToken \n    }\n  }\n`;\n\nexport const GET_ALL_OBJECTS = gql`\n  mutation allObjects($token: String!) {\n    allObjects(token: $token) {\n        object_id\n        category\n        sub_category\n        title\n        time_range\n        year\n        picture {\n          id\n        }\n        art_type\n        creator\n        material\n        size_\n        location\n        description\n        additionalInformation\n        interdisciplinaryContext\n    }\n  }\n`;\n\n// get object by id \nexport const GET_OBJECT = gql`\n  mutation museumobject($token: String!, $objectId: String!) {\n    museumObject(token: $token, objectId: $objectId) {\n        object_id\n        category\n        sub_category\n        title\n        time_range\n        year\n        picture {\n          id\n        }\n        art_type\n        creator\n        material\n        size_\n        location\n        description\n        additionalInformation\n        interdisciplinaryContext\n    }\n  }\n`;","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Feedback/TourenFeedback.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Feedback/FeedbackGrid.js",["234"],"import React from 'react';\nimport {\n  TextField,\n  ReferenceField,\n  RichTextField,\n  NumberField,\n  useListContext,\n  EditButton,\n} from 'react-admin';\nimport { linkToRecord } from 'ra-core';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardHeader, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/icons/Stars';\n\nconst useStyles = makeStyles({\n  div: {\n    margin: '1em', // spacing between cards\n  },\n  // card styles\n  card: {\n    width: 300,\n    height: 350,\n    margin: '0.5em',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    textDecoration: 'none',\n  },\n  actions: {\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n  },\n\n  // styling for custom star field\n  icon: {\n    opacity: 0.87,\n    width: 20,\n    height: 20,\n  },\n});\n\nconst StarRatingField = ({ record }) => {\n  const classes = useStyles();\n  return (\n    <span>\n      {Array(record.rating)\n        .fill(true)\n        .map((_, i) => (\n          <Icon key={i} className={classes.icon} />\n        ))}\n    </span>\n  );\n};\n\nexport const FeedbackGrid = () => {\n  const { ids, data, basePath } = useListContext();\n  const classes = useStyles();\n  return (\n    <div className={classes.div}>\n      {ids.map((id) => (\n        <Card key={id} className={classes.card}>\n          <CardHeader\n            title={\n              <ReferenceField\n                source='tour.$oid'\n                reference='Touren'\n                label='Tourname'\n              >\n                <TextField source='name' />\n              </ReferenceField>\n            }\n            title='Tour Referenz'\n          />\n          <CardContent>\n            Bewertung:&nbsp;\n            <NumberField record={data[id]} source='rating' label='Bewertung' />\n            /10 <br />\n            <StarRatingField\n              record={data[id]}\n              source='rating'\n              label='Bewertung'\n            />\n          </CardContent>\n          {/* <CardContent>\n              TestRef:&nbsp;\n              <ReferenceField record={data[id]} source='tour.$oid' reference='Touren' label='Tourname'>\n                  <TextField source='name' />\n                </ReferenceField> \n            </CardContent> */}\n          <CardContent>\n            Feedback:&nbsp;\n            <RichTextField\n              record={data[id]}\n              source='review'\n              label='Rezension'\n            />\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <EditButton\n              label = 'Editieren'\n              to={linkToRecord(basePath, data[id].id)}\n              component={Link}\n              variant='outlined'\n              color='primary'\n            />\n          </CardActions>\n        </Card>\n      ))}\n    </div>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/NOTUSEDrefreshAuth.js",["235","236"],"import decodeJwt from 'jwt-decode';\nimport {AUTH} from './NOTUSEDtestmethods/testQueries.js';\n\n// authetification with jwt token \nexport default {\n    login: ({ username, password }) => {\n        const request = new Request('http://127.0.0.1:5000/web', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                const decodedToken = decodeJwt(token);\n                localStorage.setItem('token', token);\n                localStorage.setItem('permissions', decodedToken.permissions);\n            });\n    },\n    checkError: (error) => { /* ... */ },\n    checkAuth: () => {\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    },\n    logout: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('permissions');\n        return Promise.resolve();\n    },\n    getIdentity: () => { /* ... */ },\n    getPermissions: () => {\n        const role = localStorage.getItem('permissions');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n};",{"ruleId":"237","severity":1,"message":"238","line":7,"column":27,"nodeType":"239","messageId":"240","endLine":7,"endColumn":33},{"ruleId":"237","severity":1,"message":"241","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":19},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"237","severity":1,"message":"246","line":47,"column":8,"nodeType":"239","messageId":"240","endLine":47,"endColumn":17},{"ruleId":"237","severity":1,"message":"247","line":54,"column":8,"nodeType":"239","messageId":"240","endLine":54,"endColumn":19},{"ruleId":"237","severity":1,"message":"248","line":55,"column":8,"nodeType":"239","messageId":"240","endLine":55,"endColumn":15},{"ruleId":"249","severity":1,"message":"250","line":6,"column":1,"nodeType":"251","endLine":19,"endColumn":3},{"ruleId":"252","severity":1,"message":"253","line":68,"column":11,"nodeType":"254","endLine":68,"endColumn":53},{"ruleId":"252","severity":1,"message":"253","line":69,"column":11,"nodeType":"254","endLine":69,"endColumn":55},{"ruleId":"237","severity":1,"message":"255","line":7,"column":7,"nodeType":"239","messageId":"240","endLine":7,"endColumn":19},{"ruleId":"237","severity":1,"message":"256","line":13,"column":3,"nodeType":"239","messageId":"240","endLine":13,"endColumn":17},{"ruleId":"237","severity":1,"message":"257","line":77,"column":9,"nodeType":"239","messageId":"240","endLine":77,"endColumn":16},{"ruleId":"237","severity":1,"message":"258","line":19,"column":3,"nodeType":"239","messageId":"240","endLine":19,"endColumn":14},{"ruleId":"237","severity":1,"message":"259","line":20,"column":3,"nodeType":"239","messageId":"240","endLine":20,"endColumn":30},{"ruleId":"237","severity":1,"message":"260","line":21,"column":3,"nodeType":"239","messageId":"240","endLine":21,"endColumn":28},{"ruleId":"237","severity":1,"message":"261","line":16,"column":3,"nodeType":"239","messageId":"240","endLine":16,"endColumn":13},{"ruleId":"237","severity":1,"message":"262","line":26,"column":3,"nodeType":"239","messageId":"240","endLine":26,"endColumn":16},{"ruleId":"237","severity":1,"message":"263","line":27,"column":3,"nodeType":"239","messageId":"240","endLine":27,"endColumn":14},{"ruleId":"237","severity":1,"message":"264","line":28,"column":3,"nodeType":"239","messageId":"240","endLine":28,"endColumn":30},{"ruleId":"237","severity":1,"message":"265","line":29,"column":3,"nodeType":"239","messageId":"240","endLine":29,"endColumn":28},{"ruleId":"237","severity":1,"message":"266","line":31,"column":10,"nodeType":"239","messageId":"240","endLine":31,"endColumn":23},{"ruleId":"237","severity":1,"message":"267","line":91,"column":7,"nodeType":"239","messageId":"240","endLine":91,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":3,"column":27,"nodeType":"239","messageId":"240","endLine":3,"endColumn":33},{"ruleId":"237","severity":1,"message":"268","line":3,"column":35,"nodeType":"239","messageId":"240","endLine":3,"endColumn":40},{"ruleId":"237","severity":1,"message":"269","line":3,"column":42,"nodeType":"239","messageId":"240","endLine":3,"endColumn":48},{"ruleId":"237","severity":1,"message":"270","line":3,"column":50,"nodeType":"239","messageId":"240","endLine":3,"endColumn":54},{"ruleId":"237","severity":1,"message":"271","line":17,"column":8,"nodeType":"239","messageId":"240","endLine":17,"endColumn":20},{"ruleId":"237","severity":1,"message":"272","line":20,"column":7,"nodeType":"239","messageId":"240","endLine":20,"endColumn":16},{"ruleId":"249","severity":1,"message":"273","line":38,"column":1,"nodeType":"251","endLine":91,"endColumn":3},{"ruleId":"237","severity":1,"message":"274","line":6,"column":3,"nodeType":"239","messageId":"240","endLine":6,"endColumn":16},{"ruleId":"237","severity":1,"message":"256","line":12,"column":3,"nodeType":"239","messageId":"240","endLine":12,"endColumn":17},{"ruleId":"237","severity":1,"message":"275","line":13,"column":3,"nodeType":"239","messageId":"240","endLine":13,"endColumn":14},{"ruleId":"237","severity":1,"message":"276","line":65,"column":9,"nodeType":"239","messageId":"240","endLine":65,"endColumn":19},{"ruleId":"277","severity":1,"message":"278","line":56,"column":1,"nodeType":"279","messageId":"280","endLine":83,"endColumn":2},{"ruleId":"277","severity":1,"message":"278","line":101,"column":1,"nodeType":"279","messageId":"280","endLine":116,"endColumn":2},{"ruleId":"237","severity":1,"message":"281","line":130,"column":7,"nodeType":"239","messageId":"240","endLine":130,"endColumn":23},{"ruleId":"237","severity":1,"message":"282","line":14,"column":25,"nodeType":"239","messageId":"240","endLine":14,"endColumn":28},{"ruleId":"237","severity":1,"message":"283","line":1,"column":15,"nodeType":"239","messageId":"240","endLine":1,"endColumn":23},{"ruleId":"237","severity":1,"message":"284","line":1,"column":25,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"285","severity":1,"message":"286","line":72,"column":13,"nodeType":"287","endLine":72,"endColumn":34},{"ruleId":"237","severity":1,"message":"288","line":2,"column":9,"nodeType":"239","messageId":"240","endLine":2,"endColumn":13},{"ruleId":"249","severity":1,"message":"273","line":5,"column":1,"nodeType":"251","endLine":39,"endColumn":3},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["289"],"no-negated-in-lhs",["290"],"'LoginPage' is defined but never used.","'refreshAuth' is defined but never used.","'authNew' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'initialState' is assigned a value but never used.","'ReferenceInput' is defined but never used.","'classes' is assigned a value but never used.","'AnswerField' is defined but never used.","'MultipleChoiceQuestionField' is defined but never used.","'MultipleChoiceAnswerField' is defined but never used.","'ImageInput' is defined but never used.","'QuestionInput' is defined but never used.","'AnswerInput' is defined but never used.","'MultipleChoiceQuestionInput' is defined but never used.","'MultipleChoiceAnswerInput' is defined but never used.","'QuestionField' is defined but never used.","'optionRenderer' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'authProvider' is defined but never used.","'FakeLogin' is assigned a value but never used.","Assign object to a variable before exporting as module default","'PasswordInput' is defined but never used.","'SelectInput' is defined but never used.","'cardStyles' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'MapContextFilter' is assigned a value but never used.","'gql' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AUTH' is defined but never used.","no-global-assign","no-unsafe-negation"]