[{"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/index.js":"1","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/App.js":"2","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/reportWebVitals.js":"3","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"4","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js":"5","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js":"6","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js":"7","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js":"8","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js":"9","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js":"10","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js":"11","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserCreate.js":"12","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserList.js":"13","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js":"14","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js":"15","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js":"16","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js":"17","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js":"18","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js":"19","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js":"20","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js":"21","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Login/LoginPage.js":"22","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/TourenFeedback.js":"23","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateFilterSidebar.js":"24","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/Stationen.js":"25","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/TourenFilter.js":"26","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/CustomRoutes.js":"27","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/MyTheme.js":"28","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/MyLayout.js":"29","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Login/authProvider.js":"30","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/data/fakeDataProvider.js":"31","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/CustomBulkActions.js":"32","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/CustomListActions.js":"33","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/MyProfile/Profile.js":"34","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Faq/Faq.js":"35","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/ProfilePictureGrid.js":"36","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserFilter.js":"37","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/FeedbackGrid.js":"38","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Login/initialState.js":"39","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Footer.js":"40"},{"size":620,"mtime":1612545537953,"results":"41","hashOfConfig":"42"},{"size":5936,"mtime":1614893283298,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1609756755796,"results":"44","hashOfConfig":"42"},{"size":4378,"mtime":1614882184348,"results":"45","hashOfConfig":"42"},{"size":3516,"mtime":1614881552314,"results":"46","hashOfConfig":"42"},{"size":3413,"mtime":1614882184348,"results":"47","hashOfConfig":"42"},{"size":3194,"mtime":1614882184348,"results":"48","hashOfConfig":"42"},{"size":3186,"mtime":1614882184348,"results":"49","hashOfConfig":"42"},{"size":2664,"mtime":1612530549612,"results":"50","hashOfConfig":"42"},{"size":3301,"mtime":1614882184348,"results":"51","hashOfConfig":"42"},{"size":1570,"mtime":1614893181522,"results":"52","hashOfConfig":"42"},{"size":510,"mtime":1614893181526,"results":"53","hashOfConfig":"42"},{"size":3222,"mtime":1614893181526,"results":"54","hashOfConfig":"42"},{"size":1192,"mtime":1614882184348,"results":"55","hashOfConfig":"42"},{"size":652,"mtime":1614881552318,"results":"56","hashOfConfig":"42"},{"size":2371,"mtime":1614882184344,"results":"57","hashOfConfig":"42"},{"size":2177,"mtime":1614882184344,"results":"58","hashOfConfig":"42"},{"size":1355,"mtime":1614881552314,"results":"59","hashOfConfig":"42"},{"size":1169,"mtime":1614882184348,"results":"60","hashOfConfig":"42"},{"size":1432,"mtime":1614881552318,"results":"61","hashOfConfig":"42"},{"size":607,"mtime":1614881552314,"results":"62","hashOfConfig":"42"},{"size":4103,"mtime":1614893078353,"results":"63","hashOfConfig":"42"},{"size":1699,"mtime":1614893181522,"results":"64","hashOfConfig":"42"},{"size":2884,"mtime":1614880171064,"results":"65","hashOfConfig":"42"},{"size":5766,"mtime":1614880171064,"results":"66","hashOfConfig":"42"},{"size":1620,"mtime":1614882184348,"results":"67","hashOfConfig":"42"},{"size":346,"mtime":1614882184348,"results":"68","hashOfConfig":"42"},{"size":353,"mtime":1614893181526,"results":"69","hashOfConfig":"42"},{"size":683,"mtime":1614893181526,"results":"70","hashOfConfig":"42"},{"size":3148,"mtime":1614893078353,"results":"71","hashOfConfig":"42"},{"size":10453,"mtime":1614882308034,"results":"72","hashOfConfig":"42"},{"size":422,"mtime":1614882184348,"results":"73","hashOfConfig":"42"},{"size":1401,"mtime":1614893181522,"results":"74","hashOfConfig":"42"},{"size":3027,"mtime":1614882269731,"results":"75","hashOfConfig":"42"},{"size":10204,"mtime":1614893051321,"results":"76","hashOfConfig":"42"},{"size":1956,"mtime":1614882184348,"results":"77","hashOfConfig":"42"},{"size":773,"mtime":1614882184348,"results":"78","hashOfConfig":"42"},{"size":2825,"mtime":1614882184348,"results":"79","hashOfConfig":"42"},{"size":180,"mtime":1614893078353,"results":"80","hashOfConfig":"42"},{"size":1241,"mtime":1614893181526,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"munf79",{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"85"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"85"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"85"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"85"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"85"},"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/index.js",["180","181"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["182","183"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/App.js",["184","185","186","187"],"import React, { Component } from 'react';\nimport { Admin, Resource, Delete, Login} from 'react-admin';\nimport buildGraphQLProvider from 'ra-data-graphql-simple';\n//components\n//Exponate\nimport {ExponateCreate} from './app/components/Exponate/ExponateCreate.js';\nimport {ExponateEdit} from './app/components/Exponate/ExponateEdit.js';\nimport {ExponateList} from './app/components/Exponate/ExponateList.js';\n//Touren\nimport {TourenList} from './app/components/Touren/ListTouren.js';\nimport {TourenCreate} from './app/components/Touren/CreateTouren.js';\nimport {TourenEdit} from './app/components/Touren/EditTouren.js';\nimport {FeedbackList, FeedbackEdit} from './app/components/Touren/TourenFeedback.js';\n//Benutzer\nimport {UserList} from './app/components/User/UserList.js';\nimport {UserCreate} from './app/components/User/UserCreate.js';\nimport {AccountEdit} from './app/components/User/AccountEdit.js';\nimport {CodeList} from './app/components/User/Code/CodeList.js';\nimport {CodeCreate} from './app/components/User/Code/CodeCreate.js';\n//Bildverknüpfungen-Abzeichen\nimport {AbzeichenList} from './app/components/Abzeichen/AbzeichenList.js';\nimport {AbzeichenEdit} from './app/components/Abzeichen/AbzeichenEdit.js';\nimport {AbzeichenCreate} from './app/components/Abzeichen/AbzeichenCreate.js';\n//Bildverknüpfungen-Profilbilder\nimport {PictureList} from './app/components/Profilbilder/PictureList.js';\nimport {PictureEdit} from './app/components/Profilbilder/PictureEdit.js';\nimport {PictureCreate} from './app/components/Profilbilder/PictureCreate.js';\n//pages\nimport Dashboard from './app/containers/Dashboard';\nimport CustomRoutesProfile from './app/containers/CustomRoutes.js';\nimport MyLayout from './app/containers/MyLayout.js';\nimport Footer from './app/containers/Footer.js';\nimport {MyTheme} from './app/containers/MyTheme.js';\nimport LoginPage from './app/containers/Login/LoginPage.js';\nimport authProvider from './app/containers/Login/authProvider.js';\nimport dataProvider from './app/data/fakeDataProvider.js';\nimport initialState from './app/containers/Login/initialState.js';\n\n//icons\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PhotoFilterIcon from '@material-ui/icons/PhotoFilter';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport ListIcon from '@material-ui/icons/List';\nimport CreateIcon from '@material-ui/icons/Create';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MyLoginPage = () => (\n  <Login\n      backgroundImage=\"https://www.hlmd.de/fileadmin/user_upload/haupthalle_enthuellung.jpg\"\n      style={{\n        backgroundPosition: 'center',\n      }\n      }\n  />\n); \n\n\n\nclass App extends Component {\n  /* constructor() {\n      super();\n      this.state = { dataProvider: null };\n  }\n\n  componentDidMount() {\n      buildGraphQLProvider({ clientOptions: { uri: 'localhost:5000/web' }})\n          .then(dataProvider => this.setState({ dataProvider }));\n  } */\n\n  render() {\n    /* const { dataProvider } = this.state;\n\n        if (!dataProvider) {\n            return <div>Loading</div>;\n        } */\n  return (\n    <div>\n      <Admin\n       // title='Hessisches Landesmuseum'\n        // todo: User authentification\n        authProdiver={authProvider}\n        //can be replaced with the real data provider\n        dataProvider={dataProvider}\n        //loginPage={LoginPage}\n        dashboard={Dashboard}\n        theme={MyTheme} \n        layout={MyLayout}\n        customRoutes={CustomRoutesProfile}\n        initial={initialState}\n      >\n        <Resource\n          name='Exponate'\n          list={ExponateList}\n          edit={ExponateEdit}\n          create={ExponateCreate}\n          icon={AccountBalanceIcon}\n          options={{ label: 'Exponate' }}\n        />\n        <Resource\n          name='Touren'\n          list={TourenList}\n          edit={TourenEdit}\n          create={TourenCreate}\n          icon={NavigationIcon}\n          options={{ label: 'Touren' }}\n        />\n        <Resource\n          name='Benutzer_overview'\n          icon={SupervisorAccountIcon}\n          options={{ label: 'Benutzer*innen', isMenuParent: true }}\n        />\n        <Resource\n          name='Benutzer'\n          list={UserList}\n          edit={AccountEdit}\n          create={UserCreate}\n          icon={ListIcon}\n          options={{ label: 'Übersicht', menuParent: 'Benutzer_overview' }}\n        />\n        <Resource\n          name='Codes'\n          list={CodeList}\n          create={CodeCreate}\n          icon={CreateIcon}\n          options={{\n            label: 'Code Erstellen',\n            menuParent: 'Benutzer_overview',\n          }}\n        />\n        <Resource\n          name='Bilder_overview'\n          icon={AddPhotoAlternateIcon}\n          options={{ label: 'Bildverknüpfungen', isMenuParent: true }}\n        />\n        <Resource\n          name='Abzeichen'\n          list={AbzeichenList}\n          edit={AbzeichenEdit}\n          create={AbzeichenCreate}\n          icon={PhotoFilterIcon}\n          options={{ label: 'Abzeichen', menuParent: 'Bilder_overview' }}\n        />\n        <Resource\n          name='ProfilePicture'\n          list={PictureList}\n          edit={PictureEdit}\n          create={PictureCreate}\n          icon={AddPhotoAlternateIcon}\n          options={{ label: 'Profilbilder', menuParent: 'Bilder_overview' }}\n        />\n        <Resource\n          name='Feedback'\n          list={FeedbackList}\n          edit={FeedbackEdit}\n          icon={RateReviewIcon}\n          options={{ label: 'Feedback' }}\n        />\n         <Resource\n          name='faq'\n          list={FeedbackList}\n          icon={HelpIcon}\n          options={{ label: 'FAQ' }}\n        />\n      </Admin>\n      <Footer/>\n    </div>\n  );\n}\n}\nexport default App;\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["188","189","190"],"import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'react-admin';\n//material UI imports\nimport Card from '@material-ui/core/Card';\nimport { Container, Grid, Paper, Typography} from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { ContactMail } from '@material-ui/icons';\n\nimport badges from './images/Badges.png'\nimport exponate from './images/Exponate.png'\nimport tours from './images/Tours.png'\nimport user from './images/User.png'\n\n\n// style for the cards\nconst useStyles = makeStyles(() => ({\n  card: {\n    maxWidth: '100%',\n    margin: 'auto',\n    transition: '0.3s',\n    color: '#000',\n    backgroundColor: 'transparent',\n    //   boxShadow: 'none',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    marginLeft: '50%',\n    margin: 'auto',\n    display: 'flex',\n    objectFit: 'contain',\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    textAlign: 'left',\n  },\n  heading: {\n    fontWeight: 'bold',\n  },\n  subheading: {\n    lineHeight: 1.8,\n  },\n  root: {\n    minWidth: '90%',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n// style for the grid\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\n  gridContainer: {\n    maxWidth: '100%',\n    //   paddingLeft: '40px',\n    //   paddingRight: '40px',\n    //  paddingTop: '0px',\n    margin: 'auto',\n    position: 'relative',\n  },\n}));\n\n// card components for different links\nconst CustomCard = ({ classes, image, title, subtitle, path }) => {\n  const cardStyles = useStyles();\n  return (\n    <Card className={classes.card}>\n      <div className={classes.con}>\n        <CardContent className={classes.content}>\n          <div\n            style={{\n              position: 'relative',\n            }}\n          >\n            <CardMedia className={classes.media} image={image} />\n            <div\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                //  transform: 'translateX(25%)'\n              }}\n            >\n              <Typography\n                className={classes.title}\n                variant={'h4'}\n                component={'h4'}\n              >\n                {title}\n              </Typography>\n              <Typography className={classes.subtitle}>{subtitle}</Typography>\n              <CardActions>\n                <Link to={path}>\n                  <Button variant=\"contained\" color=\"primary\" renderAs='button'>Klicke hier</Button>\n                </Link>\n              </CardActions>\n            </div>\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\n//Copyright\nfunction Copyright() {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"textSecondary\"\n      align=\"center\"\n    >\n      {\"Copyright © \"}\n      <Link to=\"/\" color=\"inherit\" >\n      Projekt Geschichte vernetzt\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n// place the card on a grid\nexport default function Dashboard() {\n  const cardStyles = useStyles();\n  const gridStyles = useGridStyles();\n\n  return (\n    <Container>\n    <Grid\n      container\n      //  direction=\"row\"\n      spacing={0}\n      className={gridStyles.gridContainer}\n      justify='center'\n     \n      \n    >\n      <Title title='Geschichte vernetzt - Vergangenes interdisziplinär erforschen und vermitteln | TU Darmstadt' />\n      <Grid item md>\n        <CustomCard\n          classes={cardStyles}\n          title={'Benutzer*innen'}\n          subtitle={'Verwalte Benutzer*innen'}\n          image={user}\n          path='/Benutzer'\n        />\n        <CustomCard\n          classes={cardStyles}\n          title={'Touren'}\n          subtitle={'Erstelle Touren'}\n          image={tours}\n          path='/Touren'\n        />\n      </Grid>\n      <Grid item md>\n        <CustomCard\n          classes={cardStyles}\n          title={'Exponate'}\n          subtitle={'Bearbeite Exponate'}\n          image={exponate}\n          path='/Exponate'\n        />\n        <CustomCard\n          classes={cardStyles}\n          title={'Bildverknüpfungen'}\n          subtitle={'Füge neue Bildverknüpfungen hinzu'}\n          image={badges}\n          path='/Abzeichen'\n        />\n      </Grid>\n    </Grid>\n    <Copyright/>\n    </Container>\n  );\n}","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js",["191"],"import React from 'react';\nimport {\n  Create,\n  //Forms\n  TabbedForm,\n  FormTab,\n  //Inputs\n  TextInput,\n  ImageInput,\n  ReferenceInput,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport {\n  Card as MuiCard,\n  makeStyles,\n} from '@material-ui/core';\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\n\n// create a new exhibit\n// todo: ID should not be created manually but automacially (distinct id)\nexport const ExponateCreate = (props) => {\n  const classes = useStyles();\n  return (\n    <Create title='Erstelle Exponate' {...props}>\n      <TabbedForm warnWhenUnsavedChanges>\n        <FormTab label='Übersicht'>\n          <TextInput source='_id' label='ObjektID' fullWidth />\n          <TextInput source='title' label='Titel' fullWidth />\n          <RichTextInput source='description' label='Beschreibung' fullWidth />\n          <TextInput\n            source='additionfal_inf'\n            label='Weitere Informationen'\n            fullWidth\n          />\n          <TextInput source='category' label='Kategorie' fullWidth />\n          <TextInput source='sub_category' label='Subkategorie' fullWidth />\n          <TextInput\n            source='interdisciplinary_context'\n            label='Interdisziplinärkontext'\n            fullWidth\n          />\n        </FormTab>\n        <FormTab label='Eckdaten'>\n          <TextInput source='year' label='Jahr' fullWidth />\n          <TextInput source='art_type' label='Kunsttyp' fullWidth />\n          <TextInput source='creator' label='Ersteller' fullWidth />\n          <TextInput source='material' label='Material' fullWidth />\n          <TextInput\n            source='size_'\n            label='Größe'\n            formClassName={classes.inlineBlock}\n          />\n          <TextInput\n            source='location'\n            label='Ort'\n            formClassName={classes.inlineBlock}\n          />\n          <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n            <ImageInput source='picture' fullWidth />\n          </ReferenceInput>\n        </FormTab>\n      </TabbedForm>\n    </Create>\n  );\n};\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js",["192"],"import React from 'react';\nimport {\n  Edit,\n  //Forms\n  TabbedForm,\n  FormTab,\n  //Inputs\n  TextInput,\n  ImageInput,\n  ReferenceInput,\n<<<<<<< HEAD\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport {\n  Card as MuiCard,\n  makeStyles,\n} from '@material-ui/core';\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n    inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n  });\n  \n  // edit an exhibit\n  export const ExponateEdit = (props) => {\n    const classes = useStyles();\n  \n    return (\n      <Edit {...props} title='Bearbeite Exponate'>\n        <TabbedForm warnWhenUnsavedChanges>\n          <FormTab label='Übersicht'>\n            <TextInput source='_id' label='ObjektID' fullWidth />\n            <TextInput source='title' label='Titel' fullWidth />\n            <RichTextInput source='description' label='Beschreibung' fullWidth />\n            <TextInput\n              source='additionfal_inf'\n              label='Weitere Informationen'\n              fullWidth\n            />\n            <TextInput source='category' label='Kategorie' fullWidth />\n            <TextInput source='sub_category' label='Subkategorie' fullWidth />\n            <TextInput\n              source='interdisciplinary_context'\n              label='Interdisziplinärkontext'\n              fullWidth\n            />\n          </FormTab>\n          <FormTab label='Eckdaten'>\n            <TextInput source='year' label='Jahr' fullWidth />\n            <TextInput source='art_type' label='Kunsttyp' fullWidth />\n            <TextInput source='creator' label='Ersteller' fullWidth />\n            <TextInput source='material' label='Material' fullWidth />\n            <TextInput\n              source='size_'\n              label='Größe'\n              formClassName={classes.inlineBlock}\n            />\n            <TextInput\n              source='location'\n              label='Ort'\n              formClassName={classes.inlineBlock}\n            />\n            <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n              <ImageInput source='picture' fullWidth />\n            </ReferenceInput>\n          </FormTab>\n        </TabbedForm>\n      </Edit>\n    );\n  };\n=======\n  SelectInput,\n  Toolbar,\n  SaveButton,\n  SimpleShowLayout,\n  TextField,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport { makeStyles } from '@material-ui/core';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmContent = (props) => {\n  return (\n    <SimpleShowLayout {...props}>\n      <TextField source='_id' label='Objekt ID' />\n      <TextField source='title' label='Titel' />\n      <TextField source='category' label='Kategorie' />\n      <TextField source='year' label='Jahr' />\n      <TextField source='art_type' label='Kunsttyp' />\n      <TextField source='creator' label='Ersteller' />\n    </SimpleShowLayout>\n  );\n};\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\n// edit an exhibit\nexport const ExponateEdit = (props) => {\n  const classes = useStyles();\n  return (\n    <Edit {...props} title='Bearbeite Exponate'>\n      <TabbedForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n        <FormTab label='Übersicht'>\n          <TextInput source='_id' label='ObjektID' fullWidth />\n          <TextInput source='title' label='Titel' fullWidth />\n          <RichTextInput source='description' label='Beschreibung' fullWidth />\n          <TextInput\n            source='additionfal_inf'\n            label='Weitere Informationen'\n            fullWidth\n          />\n          <TextInput source='category' label='Kategorie' fullWidth />\n          <TextInput source='sub_category' label='Subkategorie' fullWidth />\n          <TextInput\n            source='interdisciplinary_context'\n            label='Interdisziplinäre Bezüge'\n            fullWidth\n          />\n        </FormTab>\n        <FormTab label='Eckdaten'>\n          <TextInput source='year' label='Jahr' fullWidth />\n          <TextInput source='art_type' label='Kunsttyp' fullWidth />\n          <TextInput source='creator' label='Ersteller' fullWidth />\n          <TextInput source='material' label='Material' fullWidth />\n          <TextInput\n            source='size_'\n            label='Größe'\n            formClassName={classes.inlineBlock}\n          />\n          <TextInput\n            source='location'\n            label='Ort'\n            formClassName={classes.inlineBlock}\n          />\n        </FormTab>\n        <FormTab label='Bildverknüpfungen'>\n          {/* <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n              <ImageInput source='picture' placeholder={<p>Klicke hier, um ein Bild von dem Exponat hinzuzufügen, oder das vorhandene Bild zu ändern</p>} fullWidth />\n            </ReferenceInput>  */}\n            {/* for user study */}\n            <ImageInput source='img' placeholder={<p>Klicke hier, um ein Bild von dem Exponat hinzuzufügen, oder das vorhandene Bild zu ändern</p>} fullWidth />\n        </FormTab>\n        <DeleteWithCustomConfirmButton\n          title={ 'Sind Sie sicher, dass Sie dieses Exponat löschen wollen?'}\n          content={DeleteConfirmContent}\n          label='Löschen'\n          cancel='Abbrechen'\n        />\n      </TabbedForm>\n    </Edit>\n  );\n};\n>>>>>>> anna_dev\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js",["193"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SingleFieldList,\n  //options\n  Filter,\n  EditButton,\n  Show,\n  SimpleShowLayout,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //actions\n  useListContext,\n  TopToolbar,\n  CreateButton,\n  ExportButton,\n  sanitizeListRestProps,\n  //fields\n  TextField,\n  ReferenceField,\n  ReferenceArrayField,\n  DateField,\n  NumberField,\n  ChipField,\n  ArrayField,\n  BooleanField,\n  UrlField,\n  //inputs\n  SelectInput,\n  SearchInput,\n  ReferenceInput,\n  NumberInput,\n  DateInput,\n} from 'react-admin';\n// material UI styles\nimport { Button } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// filter the tours (search for text)\n// TODO: filter Ersteller der Tour\n// filter for featured tours (todo, not working yet)\nconst FilterBar = (props) => (\n  <div>\n    <Filter {...props}>\n      <SearchInput source='q' alwaysOn />\n      <SelectInput\n        source='status'\n        choices={[\n          { id: 'freigegeben', name: 'freigegeben' },\n          { id: 'ausstehend', name: 'ausstehend' },\n          { id: 'privat', name: 'privat' },\n        ]}\n        alwaysOn\n      />\n      <ReferenceInput\n        source='user'\n        reference='Benutzer'\n        label='Ersteller'\n        alwaysOn\n      >\n        <SelectInput optionText='username' />\n      </ReferenceInput>\n      <NumberInput\n        source='difficulty'\n        label='Schwierigkeitsgrad'\n        validate={validateDifficulty}\n        alwaysOn\n      />\n      <DateInput\n        source='lastEdit'\n        label='letzte Bearbeitung'\n        options={{ format: 'DD/MM/YYYY' }}\n        alwaysOn\n      />\n    </Filter>\n    <Button\n      variant='contained'\n      size='small'\n      startIcon={<DeleteIcon />}\n      onClick={() => props.setFilters({})}\n    >\n      Alle Filter zurücksetzen\n    </Button>\n  </div>\n);\n\n//solution for removing reset button from action bar (doesnt have functionality there)\nconst ListActions = (props) => {\n  const { className, exporter, filters, maxResults, ...rest } = props;\n  const {\n    currentSort,\n    resource,\n    filterValues,\n    basePath,\n    total,\n  } = useListContext();\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      <CreateButton basePath={basePath} />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filterValues={filterValues}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\n//edit expand component\n//TODO: get information about stations (from the video) and model them\nconst StationShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <ArrayField source='Stationen'>\n        <Datagrid>\n          {/*  if no object is there it is an individual slide and foto, text, details should be deactivated */}\n          <TextField source='Objekt' />\n          <TextField source='Foto' />\n          <TextField source='Text' />\n          <TextField source='Details' />\n          <TextField source='Textfeld' />\n          <UrlField source='Bild' />\n          {/*  model a question */}\n          <ArrayField source='???' label='Fragen'>\n            <Datagrid>\n              <TextField source='question' label='Frage' />\n              <ReferenceArrayField\n                label='verlinkte Objekte'\n                reference='Exponate'\n                source='linked_objects'\n              >\n                <SingleFieldList>\n                  <ChipField source='title' label='Name' />\n                </SingleFieldList>\n              </ReferenceArrayField>\n            </Datagrid>\n          </ArrayField>\n          {/*  model an answer */}\n          <ArrayField source='???' label='Antworten'>\n            <Datagrid>\n              <TextField source='answer' label='Antwort' />\n              <ReferenceArrayField\n                label='verlinkte User'\n                reference='User'\n                source='user'\n              >\n                <SingleFieldList>\n                  <ChipField source='username' label='Benutzer' />\n                </SingleFieldList>\n              </ReferenceArrayField>\n            </Datagrid>\n          </ArrayField>\n        </Datagrid>\n      </ArrayField>\n    </SimpleShowLayout>\n  </Show>\n);\n\n// TODO: create border to devide the component from the filters (spacing)\nconst useStyles = makeStyles({\n  main: {\n    marginTop: 20,\n  },\n});\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// list existing tours\nexport const TourenList = (props) => {\n  const classes = useStyles(props);\n  return (\n    <List\n      {...props}\n      title='Touren'\n      filters={<FilterBar />}\n      actions={<ListActions />}\n      classes={{ main: classes.main }}\n    >\n      <Datagrid expand={<StationShow />}>\n        {/* TODO: Whats the primaery key? replace Titel for pk or use built in  */}\n        <TextField source='_id' label='ID' />\n        <TextField source='name' label='Titel' />\n        <TextField source='description' label='Beschreibung' />\n        {/* refField: source=field in this table, reference=Name of reference Table  */}\n        <ReferenceField source='owner' reference='Benutzer' label='Ersteller'>\n          <ChipField source='username' />\n        </ReferenceField>\n        <ReferenceArrayField\n          label='Benutzer'\n          reference='Benutzer'\n          source='user'\n        >\n          <SingleFieldList>\n            <ChipField source='username' />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <TextField source='search_id' label='Touren Code' />\n        <TextField source='session_id' label='Passwort' />\n        <DateField\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberField source='difficulty' label='Schwierigkeitsgrad' />\n        <ChipField source='status' label='Status' />\n        <EditButton />\n      </Datagrid>\n    </List>\n  );\n};\n\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js",["194"],"import React from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  //options\n  SimpleFormIterator,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //fields\n  TextField,\n  //inputs\n  SelectInput,\n  ImageInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  ReferenceInput,\n  NumberInput,\n  ArrayInput,\n  BooleanInput,\n  DateInput,\n  TextInput,\n\n  Toolbar,\n  SaveButton,\n  SimpleShowLayout,\n  BooleanField,\n} from 'react-admin';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle = 'Sind Sie sicher, dass Sie diese Tour löschen wollen?';\n\nconst DeleteConfirmContent = props => {\n  return (\n    <SimpleShowLayout {...props} >\n      <TextField disabled source='ID' label='ID' fullWidth/>\n      <TextField source='name' label='Titel' fullWidth/>\n      <TextField source='description' label='Beschreibung' fullWidth/>\n      <TextField source='search_id' label='Touren Code' fullWidth/>\n    </SimpleShowLayout>\n  );\n};\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// edit a tour\nexport const TourenEdit = (props) => (\n    <Edit title='Bearbeite Touren' {...props}>\n      <SimpleForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n        <TextInput disabled source='ID' label='ID' fullWidth/>\n        <TextInput source='name' label='Titel' fullWidth/>\n        <TextInput source='description' label='Beschreibung' fullWidth/>\n        <ReferenceInput source='user' reference='Benutzer' label='Ersteller' fullWidth>\n          <SelectInput optionText='username' />\n        </ReferenceInput>\n        <ReferenceArrayInput source='user' reference='Benutzer' fullWidth>\n          <SelectArrayInput optionText='username' />\n        </ReferenceArrayInput>\n        <TextInput source='search_id' label='Touren Code' fullWidth/>\n        <TextInput source='session_id' label='Passwort' fullWidth/>\n        <DateInput\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberInput\n          source='difficulty'\n          label='Schwierigkeitsgrad'\n          validate={validateDifficulty}\n        />\n        <SelectInput\n          source='Status'\n          choices={[\n            { id: 'freigegeben', name: 'freigegeben' },\n            { id: 'ausstehend', name: 'ausstehend' },\n            { id: 'privat', name: 'privat' },\n          ]}\n        />\n        {/*  TODO: model the different stations and translate them into edit Inputs*/}\n        <ArrayInput source='Stationen' fullWidth>\n          <SimpleFormIterator>\n            <TextField source='Objekt' />\n            <BooleanInput source='Foto' />\n            <BooleanInput source='Text' />\n            <BooleanInput source='Details' />\n            <TextInput source='Textfeld' />\n            <ArrayInput source='Fragen'>\n              <SimpleFormIterator>\n                <TextInput source='Antwort' />\n                <BooleanInput source='Antwort' />\n              </SimpleFormIterator>\n            </ArrayInput>\n            <ImageInput source='Bild' />\n          </SimpleFormIterator>\n        </ArrayInput>\n        <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}      \n          content={DeleteConfirmContent}  \n          label='Löschen'                 \n          cancel='Abbrechen'                 \n        />\n      </SimpleForm>\n    </Edit>\n  );\n  ","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserCreate.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserList.js",["195"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SingleFieldList,\n  EditButton,\n  TextField,\n  ChipField,\n  FunctionField,\n  BooleanField,\n  ReferenceManyField,\n} from 'react-admin';\n// material UI imports\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n// show eixsting users\nexport const UserList = (props) => (\n  <List {...props} title='Benutzer*innen'>\n    <Datagrid>\n      {/*  TODO: get real primary key of user ID (username?) */}\n      <TextField source='id' label='ID' />\n      <TextField source='username' label='Benutzername' />\n      <FunctionField\n        source='password'\n        label='Passwort'\n        render={(record) => `**********`}\n      />\n      <BooleanField\n        source='Adminrechte'\n        label='Adminrechte'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <ReferenceManyField\n        label='Erstellte Touren'\n        reference='Touren'\n        // match user.username with Touren.owner.username\n        source='username'\n        target='owner.username'\n      >\n        <SingleFieldList>\n          <ChipField \n          // display the name of the tour\n          source='name' />\n        </SingleFieldList>\n      </ReferenceManyField> \n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nconst optionRenderer = (choice) => `${choice.picture}`;\n\n// edit password with user rights first try\n/* export const AccountEdit = ({ permissions, ...props }) => (\n  <Edit title='Accountdaten ändern' {...props}>\n    <TabbedForm initialValues={{ role: 'user' }}>\n      <FormTab label='user.form.summary'>\n        {permissions === 'admin' && <TextInput disabled source='id' />}\n        <TextInput source='username' label='Username' validate={required()} />\n      </FormTab>\n      {permissions === 'admin' && (\n        <FormTab label='user.form.security'>\n          <TextInput source='email' label='Email' validate={required()} />\n          <PasswordInput\n            source='password'\n            label='Passwort'\n            validate={required()}\n          />\n          <BooleanInput\n            source='Adminrechte'\n            label='Adminrechte erlauben?'\n            validate={required()}\n          />\n        </FormTab>\n      )}\n    </TabbedForm>\n  </Edit>\n); */","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Login/LoginPage.js",["196","197","198","199","200","201"],"\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Field, Form } from 'react-final-form';\nimport { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { useLogin } from 'react-admin';\n\n// site components\nimport authProvider from \"./authProvider\";\nimport './LoginPage.css';\n\nconst FakeLogin = (props) => {\n  const login = useLogin();\n  const handleSubmit = auth => {\n    login(auth);\n  };\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <div className='App'>\n            <header className='App-header'>\n              <div className='Login'>\n                <Button>\n                  <LockIcon color='primary' fontSize='large' />\n                </Button>\n                <Field\n                  variant='standard'\n                  label='Benutzername'\n                  margin='normal'\n                />\n                <Field\n                  variant='standard'\n                  label='Passwort'\n                  margin='normal'\n                  type='password'\n                />\n\n                <div className='Button'>\n                  <Button\n                    variant='contained'\n                    type='submit'\n                    color='primary'\n                    onClick={() => {}}\n                  >\n                    ANMELDEN\n                  </Button>\n                </div>\n              </div>\n            </header>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n      open: false,\n    };\n  }\n\n  setUsername = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  setPassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <div className='Login'>\n            <Button>\n              <LockIcon color='primary' fontSize='large' />\n            </Button>\n            <TextField\n              variant='standard'\n              label='Benutzername'\n              margin='normal'\n              onChange={this.setUsername}\n              value={this.state.username}\n            />\n            <TextField\n              variant='standard'\n              label='Passwort'\n              margin='normal'\n              type='password'\n              onChange={this.setPassword}\n              value={this.state.password}\n            />\n\n            <div className='Button'>\n              \n              <Button variant='contained' color='primary' onClick={() => {}}>\n                ANMELDEN\n              </Button>\n             \n            </div>\n          </div>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n          >\n            <DialogTitle id='alert-dialog-title'></DialogTitle>\n            <DialogContent>\n              <DialogContentText id='alert-dialog-description'>\n                {this.state.message}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color='primary'>\n                Okay\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/TourenFeedback.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateFilterSidebar.js",["202"],"import React from 'react';\nimport {\n  useListContext,\n  FilterList,\n  FilterListItem,\n  FilterLiveSearch,\n} from 'react-admin';\n// material UI styling\nimport { Card as MuiCard, CardContent, withStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n//icons\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ClassIcon from '@material-ui/icons/Class';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SchoolIcon from '@material-ui/icons/School';\n\n// filter sidebar styling\nconst Card = withStyles((theme) => ({\n    root: {\n      [theme.breakpoints.up('sm')]: {\n        order: -1, // display on the left rather than on the right of the list\n        width: '15em',\n        minWidth: 250,\n        marginRight: '1em',\n      },\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n  }))(MuiCard);\n  \n\n  // check if picture object is not empty (create boolean)\n  const HasImageFilter = () => (\n    <FilterList label='Bildverknüpfung' icon={<ImageSearchIcon />}>\n      <FilterListItem label='vorhanden' value={{ img: true }} />\n      <FilterListItem label='nicht vorhanden' value={{ img: null }} />\n    </FilterList>\n  );\n  \n  const MapSubCategoryFilter = () => {\n    const { ids, data } = useListContext();\n    return (\n      <FilterList label='Subkategorie' icon={<ClassIcon />}>\n        {ids.map((id) => (\n          <FilterListItem\n            label={data[id].sub_category}\n            key={data[id]._id}\n            value={{ groups: data[id]._id }}\n          />\n        ))}\n      </FilterList>\n    );\n  };\n  \n  const MapCreatorFilter = () => {\n    const { ids, data } = useListContext();\n    return (\n      <FilterList label='Ersteller' icon={<PersonIcon />}>\n        {ids.map((id) => (\n          <FilterListItem\n            label={data[id].creator}\n            key={data[id]._id}\n            value={{ groups: data[id]._id }}\n          />\n        ))}\n      </FilterList>\n    );\n  };\n  \n  const MapContextFilter = () => {\n    const { ids, data } = useListContext();\n    return (\n      <FilterList label='Interdisziplinäre Bezüge' icon={<SchoolIcon />}>\n        {ids\n          .map((id) => (\n            <FilterListItem\n              label={data[id].interdisciplinary_context.split('Themen:')}\n              value={data[id]._id}\n            />\n          ))\n          .filter((a, b) => ids.indexOf(a) === b)}\n      </FilterList>\n    );\n  };\n  \n  // sidebar functionality\n  export const FilterSidebar = () => {\n    return (\n      <Card>\n        <CardContent>\n          <FilterLiveSearch />\n          <Typography variant='subtitle1' color='error' gutterBottom>\n            Entwurf: Bitte klicke auf keine von den unteren Kategorien\n          </Typography>\n          <HasImageFilter />\n          <MapSubCategoryFilter />\n          <MapCreatorFilter />\n        </CardContent>\n      </Card>\n    );\n  };","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/Stationen.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/TourenFilter.js",[],["203","204"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/CustomRoutes.js",["205"],"import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {ProfileEdit} from './MyProfile/Profile.js';\nimport SimpleAccordion from './Faq/Faq.js';\n\nexport default [\n  <Route\n  key=\"my-profile\"\n  path=\"/my-profile\"\n  render={() => <ProfileEdit />}\n/>,\n<Route\n  key=\"faq\"\n  path=\"/faq\"\n  render={() => <SimpleAccordion />}\n/>\n\n\n];","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/MyTheme.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/MyLayout.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Login/authProvider.js",["206"],"/**\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\n\nexport default (type, params) => {\n    // called when the user attempts to log in\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        if (username === 'login' && password === 'password') {\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n        }\n    }\n    // called when the user clicks on the logout button\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    // called when the API returns an error\n    if (type === AUTH_ERROR) {\n        const { status } = params;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n    // called when the user navigates to a new location\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unknown method');\n};\n*/\n\nexport default {\n    login: ({ username, password }) => {\n        if (username === 'admin' && password === 'password') {\n            localStorage.removeItem('not_authenticated');\n            localStorage.setItem('role', 'admin');\n            localStorage.setItem('login', username);\n            localStorage.setItem('user', username);\n            return Promise.resolve();\n        }\n        if (username === 'user' && password === 'password') {\n            localStorage.setItem('role', 'user');\n            localStorage.removeItem('not_authenticated');\n            localStorage.setItem('login', username);\n            localStorage.setItem('user', username);\n            return Promise.resolve();\n        }\n        if (username === 'Simone' && password === 'password') {\n            localStorage.setItem('role', 'admin');\n            localStorage.removeItem('not_authenticated');\n            localStorage.setItem('login', username);\n            localStorage.setItem('user', username);\n            return Promise.resolve();\n        }\n        localStorage.setItem('not_authenticated', true);\n        return Promise.reject();\n    },\n    logout: () => {\n        localStorage.setItem('not_authenticated', true);\n        localStorage.removeItem('role');\n        localStorage.removeItem('login');\n        localStorage.removeItem('user');\n        return Promise.resolve();\n    },\n    checkError: ({ status }) => {\n        return status === 401 || status === 403\n            ? Promise.reject()\n            : Promise.resolve();\n    },\n    checkAuth: () => {\n        return localStorage.getItem('not_authenticated')\n            ? Promise.reject()\n            : Promise.resolve();\n    },\n    getPermissions: () => {\n        const role = localStorage.getItem('role');\n        return Promise.resolve(role);\n    },\n    getIdentity: () => {\n        return {\n            id: localStorage.getItem('login'),\n            fullName: localStorage.getItem('user'),\n        };\n    },\n};\n\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/data/fakeDataProvider.js",["207","208","209","210","211"],"import fakeDataProvider from 'ra-data-fakerest';\n\n// images for user study\n//objetcs\nimport goldfibel from './fake_data/pictures/38-image0.jpg';\nimport ortenberger from './fake_data/pictures/127-image0.jpg';\nimport morgensonne from './fake_data/pictures/163-image0.jpg';\nimport gestade from './fake_data/pictures/161-image0.jpg';\n//badges\nimport tour_silver from './fake_data/badges/Erstellte_Rundgaenge_silber.jpg';\nimport object_bronze from './fake_data/badges/Betrachtete_Artefakte_bronze.jpg';\n//profile pictures\nimport joseph from './fake_data/profilepictures/free/Joseph.jpg';\nimport iphigenie from './fake_data/profilepictures/free/Iphigenie.jpg';\nimport reward_tour_silver from './fake_data/profilepictures/locked/Erstellte_Rundgaenge_silber.jpg';\nimport reward_object_bronze from './fake_data/profilepictures/locked/Betrachtete_Artefakte_bronze.jpg';\n\n// fake data base for testing\nconst dataProvider = fakeDataProvider({\n  Exponate: [\n    {\n      _id: 'Kg 31:21',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Archäologie/Vor- und Frühgeschichte',\n      title: 'Goldfibel von Mölsheim',\n      // inserted img for user study\n      img: goldfibel,\n      picture: [\n        {\n          $oid: '5ff98892ccd2776f571d6c1a',\n        },\n      ],\n      description:\n        'Stilistisch datieren vor allem die Goldfiligranarbeiten in den Flächen der Vierpassform die Prunkfibel in die Zeit um 630/640–680 n. Chr. und legen eine Herstellung im westfränkischen Raum (Burgund?) nahe. Der zentral angebrachte Kameo – ein erhaben geschnittener Achat in Form eines Gorgonenhauptes – wurde von dem Goldschmiedemeister sicherlich in dem Wissen, dass es sich hierbei um ein antikes Kleinod aus hellenistischer Zeit handelte, wiederverwendet. Heute scheint es sehr wahrscheinlich, dass er aus derselben alexandrinischen Steinschneidewerkstatt stammt, aus der als bestes Vergleichsstück die bekannte Tazza Farnese, heute im Museo Archeologico Nationale in Neapel, mit einem ebenso ausgezeichnet geschnittenen Kameo hervorgegangen ist. (A. Z.)',\n      additional_information:\n        'Ein Landwirt fand die heute weltweit bekannte Filigranscheibenfibel im Jahr 1930 beim Anlegen eines Weinbergs ohne Grabkontext und damit ohne Hinweis darauf, welche adelige Frau sie getragen, geschweige denn, wo und von wem sie hergestellt wurde. Motiviert durch den sensationellen Fund unternahm das Hessische Landesmuseum Darmstadt in den Jahren 1931 und 1935 Grabungen, die einen frühmittelalterlichen Reihengräberfriedhof zutage brachten.',\n      interdisciplinary_context: 'Themen: Kunsthandwerk',\n      year: 'Fibel: um 630/40–680, Kameo:\\nspätes\\n2. Jahrhundert v. Chr.',\n      art_type: 'Kunsthandwerk; Fibel',\n      creator: 'unbekannt',\n      material:\n        'Fibel: Gold, Bronze, Perlen, Glas- und Edelsteine; \\nKameo: Achat',\n      size_: 'Durchmesser: 8,3 cm',\n      location: 'Fundort: Landkreis Alzey-Worms',\n    },\n    {\n      _id: 'Kg 42:67',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Gotik',\n      title: 'Ortenberger Altar - Heilige Sippe',\n      img: ortenberger,\n      picture: [\n        {\n          $oid: '5ff95692dcf3447f57146c1s',\n        },\n      ],\n      description: 'Tafelmalerei auf Tannenholz, mit Blattgold',\n      additional_information: '',\n      interdisciplinary_context: 'Themen: Kunsthandwerk',\n      year: 'um 1430',\n      art_type: 'Gemälde',\n      creator: 'Meister des Ortenberger Altars',\n      material: 'Tannenholz, Leinwand, Tempera, Blattgold',\n      size_: '100,5 cm x 162,5 cm',\n      location: 'Ortenberg',\n    },\n    {\n      _id: 'Kg 2:95',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Expressionsimus',\n      title: 'Morgensonne',\n      img: morgensonne,\n      picture: [\n        {\n          $oid: '5ffe569ssd2dcf3447f5714561s',\n        },\n      ],\n      description: 'Gemälde',\n      additional_information: 'Öl auf Leinwand',\n      interdisciplinary_context: 'Themen: Gemälde',\n      year: '1910',\n      art_type: 'Gemälde',\n      creator: 'Lovis Corinth',\n      material: 'Öl, Leinwand',\n      size_: '68,5 cm x 80,5 cm',\n      location: 'Ortenberg',\n    },\n    {\n      _id: 'Kg 34:12',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Realismus',\n      title: 'Abendstimmung in der Campagna',\n      img: null,\n      picture: [\n        {\n          $oid: '5ffe569ssfesrsd447f5714561s',\n        },\n      ],\n      description: 'Gemälde',\n      additional_information: 'Öl auf Leinwand',\n      interdisciplinary_context: 'Themen: Gemälde',\n      year: '1850',\n      art_type: 'Gemälde',\n      creator: 'Oswald Achenbach',\n      material: 'Öl, Leinwand',\n      size_: '98 cm x 134 cm',\n      location: 'Düsseldorf',\n    },\n    {\n      _id: 'Kg 8:27',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Symbolismus',\n      title: 'Gestade der Vergessenheit',\n      img: gestade,\n      picture: [\n        {\n          $oid: '8sd95564dcf3675f57146gaw',\n        },\n      ],\n      description:\n        'Gestade der Vergessenheit (meist mit Artikel „Das…“, seltener „Die…“) ist ein Gemälde von Eugen Bracht. Zwischen 1889 und 1916 entstanden acht Fassungen. Von diesen sind mindestens zwei museal erhalten und werden permanent ausgestellt. Neben Arnold Böcklins Toteninsel gilt es als eines der bekanntesten Werke des Symbolismus.',\n      additional_information: 'Urversion',\n      interdisciplinary_context: 'Themen: Gemälde',\n      year: '1889',\n      art_type: 'Gemälde',\n      creator: 'Eugen Bracht',\n      material: 'Öl, Leinwand',\n      size_: '139 cm x 257 cm',\n      location: 'Hessen',\n    },\n  ],\n  Touren: [\n    {\n      _id: 0,\n      name: 'Tour1',\n      name: 'Amphibien Tour',\n      search_id: 'xxxxx',\n      description: 'This is such an awesome tour',\n      description:\n        'Die Tour führt entlang der interessanter Exponate rund um Amphibien.',\n      session_id: 420,\n      owner: {\n        username: 'Anna',\n      },\n      user: [\n        {\n          username: 'Vilja',\n          username: 'Tom',\n        },\n        {\n          username: 'Cosima',\n          username: 'Lena',\n        },\n      ],\n      difficulty: 5,\n      status: 'privat',\n      lastEdit: '2020-01-01',\n      lastEdit: '2021-01-01',\n    },\n    {\n      _id: {\n        $oid: '600024333c67891h7831f659',\n      },\n      name: 'Zoologie Tour - Australien',\n      search_id: 'xxxxx',\n      description:\n        'Die Tiere aus Down Under lassen sich in dieser Tour bestaunen.',\n      session_id: 435,\n      owner: {\n        username: 'Lena',\n      },\n      user: [\n        {\n          username: 'Lukas',\n        },\n        {\n          username: 'Franziska',\n        },\n        {\n          username: 'Tom',\n        },\n      ],\n      difficulty: 2,\n      status: 'freigegeben',\n      lastEdit: '2020-10-11',\n    },\n    {\n      _id: {\n        $oid: '660024555c67891l6731f789',\n      },\n      name: 'Urpferd 2.0',\n      search_id: 'xxxxx',\n      description:\n        'Diese Tour dreht sich um das »Wappentier« der Grube Messel, das Messeler Urpferd ',\n      session_id: 375,\n      owner: {\n        username: 'Frank',\n      },\n      user: [\n        {\n          username: 'Lukas',\n        },\n        {\n          username: 'Franziska',\n        },\n        {\n          username: 'Tobias',\n        },\n      ],\n      difficulty: 4,\n      status: 'ausstehend',\n      lastEdit: '2020-08-18',\n    },\n  ],\n  Benutzer: [\n    {\n      username: 'Frank',\n      password: 'passwort',\n      Adminrechte: true,\n    },\n    {\n      username: 'Sabine',\n      password: 'MyPassword',\n      Adminrechte: false,\n    },\n    {\n      username: 'Simone',\n      password: 'hallo',\n      Adminrechte: false,\n    },\n    {\n      username: 'Carlo',\n      password: 'meinPasswort',\n      Adminrechte: false,\n    },\n    {\n      username: 'Tobias',\n      password: '4567',\n      Adminrechte: false,\n    },\n    {\n      username: 'Markus',\n      password: 'hihi',\n      Adminrechte: false,\n    },\n    {\n      username: 'Andreas',\n      password: 'hallsao',\n      Adminrechte: false,\n    },\n    {\n      username: 'Lena',\n      password: 'geschichte',\n      Adminrechte: false,\n    },\n  ],\n\n  Abzeichen: [\n    {\n      _id: 'Erstellte_Rundgaenge_silber',\n      name: 'Erstellte Rundgaenge silber',\n      picture: tour_silver,\n      unlocked_picture: reward_tour_silver,\n      /*  picture: {\n        $oid: '5ff98919cdd36137740fc368',\n      },       \n      unlocked_picture: {\n        $oid: '5ff98919cdd36137740fc367',\n      },*/\n      cost: 10,\n    },\n    {\n      _id: 'Betrachtete_Artefakte_bronze',\n      name: 'Betrachtete Artefakte bronze',\n      picture: object_bronze,\n      unlocked_picture: reward_object_bronze,\n      /*  picture: {\n        $oid: '5ff98919cdd36137740fc36d',\n      },\n      unlocked_picture: {\n        $oid: '5ff98919cdd36137740fc36c',\n      }, */\n      cost: 3,\n    },\n  ],\n  /* ProfilePicture: [\n    {\n      _id: {\n        $oid: '5ff9889f4028d9e0ea9cc52d',\n      },\n      picture: {\n        $oid: '5ff9889f4028d9e0ea9cc52a',\n      },\n      locked: false,\n    },\n  ], */\n  // only for testing\n  ProfilePicture: [\n    {\n      picture: iphigenie,\n      locked: false,\n    },\n    {\n      picture: joseph,\n      locked: false,\n    },\n    {\n      picture: reward_object_bronze,\n      locked: true,\n    },\n    {\n      picture: reward_tour_silver,\n      locked: true,\n    },\n  ],\n  Pictures: [\n    {\n      $oid: '5ff98892ccd2776f571d6c1a',\n      picture: goldfibel,\n    },\n    {\n      $oid: '5ff95692dcf3447f57146c1s',\n      picture: ortenberger,\n    },\n    {\n      $oid: '5ffe569ssd2dcf3447f5714561s',\n      picture: morgensonne,\n    },\n    {\n      $oid: '8sd95564dcf3675f57146gaw',\n      picture: gestade,\n    },\n  ],\n  Codes: [\n    {\n      code: 'abh5k',\n      username: 4,\n    },\n  ],\n  Feedback: [\n    {\n      _id: 0,\n      tour: {\n        $oid: 0,\n      },\n      rating: 8,\n      review:\n        'Mir hat diese Tour sehr gut gefallen! Ich würde sie besonders Leuten mit Kindern weiterempfehlen, da die Inhalte spielerisch vermittelt werden',\n    },\n    {\n      _id: 1,\n      tour: {\n        $oid: '600024333c43791d7831f306',\n      },\n      rating: 6,\n      review:\n        'Die Tour war an sich ganz okay, für einen kurzen Museumsbesuch dauert sie allerdings etwas zu lange. Wenn man also nur einen kurzen Besuch geplant hat, sollte man vielleicht eine andere Tour wählen',\n    },\n  ],\n});\nexport default dataProvider;\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/CustomBulkActions.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/CustomListActions.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/MyProfile/Profile.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Faq/Faq.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/ProfilePictureGrid.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserFilter.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/FeedbackGrid.js",["212"],"import React from 'react';\nimport {\n  TextField,\n  ReferenceField,\n  RichTextField,\n  NumberField,\n  useListContext,\n  EditButton,\n} from 'react-admin';\nimport { linkToRecord } from 'ra-core';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardHeader, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/icons/Stars';\n\nconst useStyles = makeStyles({\n  div: {\n    margin: '1em', // spacing between cards\n  },\n  // card styles\n  card: {\n    width: 300,\n    height: 350,\n    margin: '0.5em',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    textDecoration: 'none',\n  },\n  actions: {\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n  },\n\n  // styling for custom star field\n  icon: {\n    opacity: 0.87,\n    width: 20,\n    height: 20,\n  },\n});\n\nconst StarRatingField = ({ record }) => {\n  const classes = useStyles();\n  return (\n    <span>\n      {Array(record.rating)\n        .fill(true)\n        .map((_, i) => (\n          <Icon key={i} className={classes.icon} />\n        ))}\n    </span>\n  );\n};\n\nexport const FeedbackGrid = () => {\n  const { ids, data, basePath } = useListContext();\n  const classes = useStyles();\n  return (\n    <div className={classes.div}>\n      {ids.map((id) => (\n        <Card key={id} className={classes.card}>\n          <CardHeader\n            title={\n              <ReferenceField\n                source='tour.$oid'\n                reference='Touren'\n                label='Tourname'\n              >\n                <TextField source='name' />\n              </ReferenceField>\n            }\n            title='Tour Referenz'\n          />\n          <CardContent>\n            Bewertung:&nbsp;\n            <NumberField record={data[id]} source='rating' label='Bewertung' />\n            /10 <br />\n            <StarRatingField\n              record={data[id]}\n              source='rating'\n              label='Bewertung'\n            />\n          </CardContent>\n          {/* <CardContent>\n              TestRef:&nbsp;\n              <ReferenceField record={data[id]} source='tour.$oid' reference='Touren' label='Tourname'>\n                  <TextField source='name' />\n                </ReferenceField> \n            </CardContent> */}\n          <CardContent>\n            Feedback:&nbsp;\n            <RichTextField\n              record={data[id]}\n              source='review'\n              label='Rezension'\n            />\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <EditButton\n              label = 'Editieren'\n              to={linkToRecord(basePath, data[id].id)}\n              component={Link}\n              variant='outlined'\n              color='primary'\n            />\n          </CardActions>\n        </Card>\n      ))}\n    </div>\n  );\n};\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Login/initialState.js",["213"],"/**\nconst initialState = {\n    theme: 'dark',\n    grid: 5,\n};\n*/\nconst initialState = () => ({\n    theme: localStorage.getItem('theme'),\n    grid: localStorage.getItem('grid'),\n});","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Footer.js",["214","215"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport mint from '../data/images/mint_logo.png';\nimport bm from '../data/images/bm_logo.png';\n\nconst useStyles = makeStyles({\n  wrapper: {\n    textAlign: 'center',\n  },\n  imgFooter: {\n    width: '100%',\n    heigth: 100,\n    margin: 'auto',\n    textAlign: 'center',\n    padding: 10,\n  },\n  image: {\n    width: '15%',\n    height: 'auto',\n    display: 'inline-block',\n    vertical: 'middle',\n  },\n  text: {\n    color: 'textSecondary'\n  }\n});\n\nconst Footer = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n        <div className={classes.imgFooter}>\n        <img src={bm} className={classes.image} />\n        <img src={mint} className={classes.image} />\n        </div>\n      <h6 className={classes.text} >\n        Das Projekt MINTplus<sup>2</sup>: Systematischer und vernetzter\n        Kompetenzaufbau in der Lehrerbildung im Umgang mit Digitalisierung und\n        Heterogenität wird im Rahmen der gemeinsamen „Qualitätsoffensive\n        Lehrerbildung“ von Bund und Ländern aus Mitteln des Bundesministeriums\n        für Bildung und Forschung gefördert\n      </h6>\n    </div>\n  );\n};\n\nexport default Footer;\n",{"ruleId":"216","severity":1,"message":"217","line":7,"column":27,"nodeType":"218","messageId":"219","endLine":7,"endColumn":33},{"ruleId":"216","severity":1,"message":"220","line":8,"column":8,"nodeType":"218","messageId":"219","endLine":8,"endColumn":19},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"216","severity":1,"message":"225","line":2,"column":27,"nodeType":"218","messageId":"219","endLine":2,"endColumn":33},{"ruleId":"216","severity":1,"message":"226","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":28},{"ruleId":"216","severity":1,"message":"227","line":34,"column":8,"nodeType":"218","messageId":"219","endLine":34,"endColumn":17},{"ruleId":"216","severity":1,"message":"228","line":50,"column":7,"nodeType":"218","messageId":"219","endLine":50,"endColumn":18},{"ruleId":"216","severity":1,"message":"229","line":6,"column":27,"nodeType":"218","messageId":"219","endLine":6,"endColumn":32},{"ruleId":"216","severity":1,"message":"230","line":12,"column":10,"nodeType":"218","messageId":"219","endLine":12,"endColumn":21},{"ruleId":"216","severity":1,"message":"231","line":71,"column":9,"nodeType":"218","messageId":"219","endLine":71,"endColumn":19},{"ruleId":"216","severity":1,"message":"232","line":15,"column":11,"nodeType":"218","messageId":"219","endLine":15,"endColumn":18},{"ruleId":"216","severity":1,"message":"232","line":15,"column":11,"nodeType":"218","messageId":"219","endLine":15,"endColumn":18},{"ruleId":"216","severity":1,"message":"233","line":29,"column":3,"nodeType":"218","messageId":"219","endLine":29,"endColumn":15},{"ruleId":"216","severity":1,"message":"233","line":28,"column":3,"nodeType":"218","messageId":"219","endLine":28,"endColumn":15},{"ruleId":"216","severity":1,"message":"234","line":53,"column":7,"nodeType":"218","messageId":"219","endLine":53,"endColumn":21},{"ruleId":"216","severity":1,"message":"217","line":3,"column":27,"nodeType":"218","messageId":"219","endLine":3,"endColumn":33},{"ruleId":"216","severity":1,"message":"235","line":3,"column":35,"nodeType":"218","messageId":"219","endLine":3,"endColumn":40},{"ruleId":"216","severity":1,"message":"236","line":3,"column":42,"nodeType":"218","messageId":"219","endLine":3,"endColumn":48},{"ruleId":"216","severity":1,"message":"237","line":3,"column":50,"nodeType":"218","messageId":"219","endLine":3,"endColumn":54},{"ruleId":"216","severity":1,"message":"238","line":17,"column":8,"nodeType":"218","messageId":"219","endLine":17,"endColumn":20},{"ruleId":"216","severity":1,"message":"239","line":20,"column":7,"nodeType":"218","messageId":"219","endLine":20,"endColumn":16},{"ruleId":"216","severity":1,"message":"240","line":71,"column":9,"nodeType":"218","messageId":"219","endLine":71,"endColumn":25},{"ruleId":"221","replacedBy":"241"},{"ruleId":"223","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":6,"column":1,"nodeType":"245","endLine":19,"endColumn":3},{"ruleId":"243","severity":1,"message":"246","line":38,"column":1,"nodeType":"245","endLine":91,"endColumn":3},{"ruleId":"247","severity":1,"message":"248","line":136,"column":7,"nodeType":"249","messageId":"250","endLine":136,"endColumn":11},{"ruleId":"247","severity":1,"message":"251","line":139,"column":7,"nodeType":"249","messageId":"250","endLine":139,"endColumn":18},{"ruleId":"247","severity":1,"message":"252","line":148,"column":11,"nodeType":"249","messageId":"250","endLine":148,"endColumn":19},{"ruleId":"247","severity":1,"message":"252","line":152,"column":11,"nodeType":"249","messageId":"250","endLine":152,"endColumn":19},{"ruleId":"247","severity":1,"message":"253","line":158,"column":7,"nodeType":"249","messageId":"250","endLine":158,"endColumn":15},{"ruleId":"254","severity":1,"message":"255","line":72,"column":13,"nodeType":"256","endLine":72,"endColumn":34},{"ruleId":"216","severity":1,"message":"257","line":7,"column":7,"nodeType":"218","messageId":"219","endLine":7,"endColumn":19},{"ruleId":"258","severity":1,"message":"259","line":33,"column":9,"nodeType":"260","endLine":33,"endColumn":51},{"ruleId":"258","severity":1,"message":"259","line":34,"column":9,"nodeType":"260","endLine":34,"endColumn":53},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["261"],"no-negated-in-lhs",["262"],"'Delete' is defined but never used.","'buildGraphQLProvider' is defined but never used.","'LoginPage' is defined but never used.","'MyLoginPage' is assigned a value but never used.","'Paper' is defined but never used.","'ContactMail' is defined but never used.","'cardStyles' is assigned a value but never used.","'MuiCard' is defined but never used.","'BooleanField' is defined but never used.","'optionRenderer' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'authProvider' is defined but never used.","'FakeLogin' is assigned a value but never used.","'MapContextFilter' is assigned a value but never used.",["261"],["262"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-dupe-keys","Duplicate key 'name'.","ObjectExpression","unexpected","Duplicate key 'description'.","Duplicate key 'username'.","Duplicate key 'lastEdit'.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'initialState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]