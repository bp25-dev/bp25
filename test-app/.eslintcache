[{"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/index.js":"1","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/App.js":"2","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/reportWebVitals.js":"3","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate.js":"4","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren.js":"5","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Codes.js":"6","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/ProfilePicutre.js":"7","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User.js":"8","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen.js":"9","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Style/Theme.js":"10","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/dataProvider.js":"11","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"12"},{"size":620,"mtime":1609756755796,"results":"13","hashOfConfig":"14"},{"size":3883,"mtime":1611135537372,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609756755796,"results":"16","hashOfConfig":"14"},{"size":6823,"mtime":1611154494503,"results":"17","hashOfConfig":"14"},{"size":10149,"mtime":1611157030778,"results":"18","hashOfConfig":"14"},{"size":516,"mtime":1611135537372,"results":"19","hashOfConfig":"14"},{"size":1660,"mtime":1611159095559,"results":"20","hashOfConfig":"14"},{"size":2657,"mtime":1611135537372,"results":"21","hashOfConfig":"14"},{"size":3196,"mtime":1611158717380,"results":"22","hashOfConfig":"14"},{"size":472,"mtime":1610464763255,"results":"23","hashOfConfig":"14"},{"size":4584,"mtime":1611158438420,"results":"24","hashOfConfig":"14"},{"size":4711,"mtime":1611154901626,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"8d2lr6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/index.js",["56","57"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["58","59"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/App.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate.js",["60","61","62","63","64","65","66"],"import React from 'react';\nimport {\n  TabbedForm,\n  FormTab,\n  List,\n  Datagrid,\n  TextField,\n  ImageField,\n  BooleanField,\n  EditButton,\n  Edit,\n  SimpleForm,\n  TextInput,\n  ImageInput,\n  Create,\n  FilterList,\n  FilterListItem,\n  FilterLiveSearch,\n  SimpleShowLayout,\n  ReferenceField,\n  Show,\n  Filter,\n  SearchInput,\n  SelectInput,\n  BooleanInput,\n\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { makeStyles } from '@material-ui/core/styles';\n//icons\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ClassIcon from '@material-ui/icons/Class';\nimport { Card as MuiCard, CardContent, withStyles } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { Category } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\n// filter sidebar styling\nconst Card = withStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      order: -1, // display on the left rather than on the right of the list\n      width: '15em',\n      marginRight: '1em',\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n}))(MuiCard);\n\n// check if picture object is not empty (create boolean)\nconst HasImageFilter = () => (\n  <FilterList label='Bildverknüpfung' icon={<ImageSearchIcon />}>\n    <FilterListItem label='vorhanden' value={{picture: true }} />\n    <FilterListItem label='nicht vorhanden' value={{ picture: null }} />\n  </FilterList>\n);\n\n\n// TODO: map each existing category into a Filter List Item Label\nconst KategorieFilter = () => (\n  <FilterList label='Kategorie' icon={<ClassIcon />}>\n   {/* {  {category.map(category => (\n          <FilterListItem\n              label={category.name}\n              key={category.name}\n          />\n   )) } }*/}\n  </FilterList>\n);\n\n\n//TODO: more filters.. Subkategorie Mapping, Timeframes, Material, ...? \n\n// sidebar functionality\nconst FilterSidebar = () => (\n  <Card>\n    <CardContent>\n      <FilterLiveSearch />\n      <HasImageFilter />\n      <KategorieFilter />\n    </CardContent>\n  </Card>\n);\n\n// edit expand component\nconst ImageShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <TextField source='art_type' label='Kunsttyp' />\n      <TextField source='description' label='Beschreibung' />\n      <TextField source='additionfal_inf' label='Weitere Informationen' />\n      {/* add new table with images and reference them here*/}\n      <ReferenceField label='Bildverknüpfung' source='' reference='Pictures'>\n        <ImageField source='picture' />\n      </ReferenceField>\n      <TextField source='year' label='Jahr' />\n      <TextField source='material' label='Material' />\n      <TextField source='size_' label='Größe' />\n      <TextField source='location' label='Ort' />\n    </SimpleShowLayout>\n  </Show>\n);\n\n\n\n// list the exhibits\nexport const ExponateList = (props) => (\n  <List {...props} title='Exponate' aside={<FilterSidebar />}>\n    <Datagrid expand={<ImageShow />}>\n      {/* todo: use ObjectID as primary key \n      instead of <TextField source='ID' /> */}\n      <TextField source='_id' label='ObjektID' />\n      <TextField source='title' label='Titel' />\n      <TextField source='creator' label='Ersteller' />\n      <TextField source='category' label='Kategorie' />\n      <TextField source='sub_category' label='Subkategorie' />\n      <TextField\n        source='interdisciplinary_context'\n        label='Interdisziplinärkontext'\n      />\n      {/* should be true if there is an linked picture */}\n      <ReferenceField label='Bildverknüpfung' source='' reference='Pictures'>\n        <BooleanField source='picture' />\n      </ReferenceField>\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\n// edit an exhibit\nexport const ExponateEdit = props => {\n  const classes = useStyles();\n  return(\n  <Edit {...props} title='Bearbeite Exponate' >\n    <TabbedForm warnWhenUnsavedChanges>\n      <FormTab label=\"Übersicht\">\n        <TextInput source='_id' label='ObjektID' fullWidth/>\n        <TextInput source='title' label='Titel' fullWidth/>\n        <RichTextInput source='description' label='Beschreibung' fullWidth/>\n        <TextInput source='additionfal_inf' label='Weitere Informationen' fullWidth/>\n        <TextInput source='category' label='Kategorie' fullWidth/>\n        <TextInput source='sub_category' label='Subkategorie' fullWidth/>\n        <TextInput\n          source='interdisciplinary_context'\n          label='Interdisziplinärkontext'\n          fullWidth\n        />\n      </FormTab>\n      {/* <TextInput disabled source='ID' /> */}\n     <FormTab label = \"Eckdaten\">\n        <TextInput source='year' label='Jahr' fullWidth/>\n        <TextInput source='picture' label='Bild' fullWidth/>\n        <TextInput source='art_type' label='Kunsttyp' fullWidth/>\n        <TextInput source='creator' label='Ersteller' fullWidth/>\n        <TextInput source='material' label='Material' fullWidth/>\n        <TextInput source='size_' label='Größe' formClassName={classes.inlineBlock}/>\n        <TextInput source='location' label='Ort'  formClassName={classes.inlineBlock}/>\n        <ImageInput source='picture' fullWidth/>\n     </FormTab>\n    </TabbedForm>\n  </Edit>\n  )\n};\n\n// create a new exhibit\n// todo: ID should not be created manually but automacially (distinct id)\nexport const ExponateCreate = props => {\n  const classes = useStyles();\n  return(\n  <Create title='Erstelle Exponate' {...props}>\n    <TabbedForm warnWhenUnsavedChanges>\n      <FormTab label=\"Übersicht\">\n        <TextInput source='_id' label='ObjektID' fullWidth/>\n        <TextInput source='title' label='Titel' fullWidth/>\n        <RichTextInput source='description' label='Beschreibung' fullWidth/>\n        <TextInput source='additionfal_inf' label='Weitere Informationen' fullWidth/>\n        <TextInput source='category' label='Kategorie' fullWidth/>\n        <TextInput source='sub_category' label='Subkategorie' fullWidth/>\n        <TextInput\n          source='interdisciplinary_context'\n          label='Interdisziplinärkontext'\n          fullWidth\n        />\n      </FormTab>\n        <FormTab label = \"Eckdaten\">\n        <TextInput source='year' label='Jahr' fullWidth/>\n        <TextInput source='picture' label='Bild' fullWidth/>\n        <TextInput source='art_type' label='Kunsttyp' fullWidth/>\n        <TextInput source='creator' label='Ersteller' fullWidth/>\n        <TextInput source='material' label='Material' fullWidth/>\n        <TextInput source='size_' label='Größe' formClassName={classes.inlineBlock}/>\n        <TextInput source='location' label='Ort' formClassName={classes.inlineBlock} />\n        <ImageInput source='picture' fullWidth/>\n      </FormTab>\n    </TabbedForm>\n  </Create>\n  )\n  };\n\n  ","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Codes.js",["67"],"import React from 'react';\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SimpleForm,\n  TextField,\n  TextInput,\n} from 'react-admin';\n\nexport const CodeList = (props) => (\n\n    <List {...props} title='Ersteller Codes'>\n      <Datagrid>\n        <TextField source='id' label='ID' />\\\n        <TextField source='Code' />\n      </Datagrid>\n    </List>\n  );\n  \n  export const CodeCreate = (props) => (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput source='Code' />\n      </SimpleForm>\n    </Create>\n  );","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/ProfilePicutre.js",["68"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User.js",["69"],"import React from 'react';\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SingleFieldList,\n  SimpleForm,\n  EditButton,\n  TextField,\n  ChipField,\n  ReferenceField,\n  EmailField,\n  ArrayField,\n  FunctionField,\n  BooleanField,\n  PasswordInput,\n  TextInput,\n  BooleanInput,\n} from 'react-admin';\n// material UI imports\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n// show eixsting users\nexport const UserList = (props) => (\n  <List {...props} title='Benutzer'>\n    <Datagrid>\n     {/*  TODO: get real primary key of user ID (username?) */}\n      <TextField source='id' label='ID' />\n      <TextField source='username' label='Benutzername' />\n      <EmailField source='email' label='Email' />\n      <FunctionField\n        source='password'\n        label='Passwort'\n        render={(record) => `**********`}\n      />\n      <BooleanField\n        source='producer'\n        label='Ersteller'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <BooleanField\n        source='Adminrechte'\n        label='Adminrechte'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <ArrayField source='badges' label='Abzeichen'>\n        <SingleFieldList>\n          <ReferenceField label='Abzeichen' source='_id' reference='Abzeichen'>\n            <ChipField source='name' />\n          </ReferenceField>\n        </SingleFieldList>\n      </ArrayField>\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nconst optionRenderer = (choice) => `${choice.picture}`;\n\n// edit paasword\nexport const AccountEdit = (props) => (\n  <Edit title='Accountdaten ändern' {...props}>\n    <SimpleForm>\n      <TextInput disabled source='id' label='ID' />\n      <TextInput source='username' label='Benutzername' />\n      <TextInput source='email' label='Email' />\n      <PasswordInput source='password' label='Passwort' />\n      <BooleanInput source='producer' label='Ersteller Status erteilen?' />\n      <BooleanInput source='Adminrechte' label='Adminrechte erlauben?' />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new user\nexport const UserCreate = (props) => (\n  <Create title='Erstelle Admin' {...props}>\n    <SimpleForm>\n      <TextInput source='username' label='Benutzername' />\n      <TextInput source='email' label='Email' />\n      <PasswordInput source='password' label='Passwort' />\n      <BooleanInput source='producer' label='Ersteller Status erteilen?' />\n      <BooleanInput source='Adminrechte' label='Adminrechte erlauben?' />\n    </SimpleForm>\n  </Create>\n);\n\n// to do: missing functions are to be embedded on the site\n// look up how to show different tables/ resources on one single page","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen.js",["70"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Style/Theme.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/dataProvider.js",["71","72"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["73","74","75"],"import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'react-admin';\n//material UI imports\nimport Card from '@material-ui/core/Card';\nimport { Container, Grid, Paper, Typography} from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { ContactMail } from '@material-ui/icons';\n\n// style for the cards\nconst useStyles = makeStyles(() => ({\n  card: {\n    maxWidth: '100%',\n    margin: 'auto',\n    transition: '0.3s',\n    color: '#000',\n    backgroundColor: 'transparent',\n    //   boxShadow: 'none',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    marginLeft: '50%',\n    margin: 'auto',\n    display: 'flex',\n    objectFit: 'contain',\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    textAlign: 'left',\n  },\n  heading: {\n    fontWeight: 'bold',\n  },\n  subheading: {\n    lineHeight: 1.8,\n  },\n  root: {\n    minWidth: '90%',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n// style for the grid\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\n  gridContainer: {\n    maxWidth: '100%',\n    //   paddingLeft: '40px',\n    //   paddingRight: '40px',\n    //  paddingTop: '0px',\n    margin: 'auto',\n    position: 'relative',\n  },\n}));\n\n// card components for different links\nconst CustomCard = ({ classes, image, title, subtitle, path }) => {\n  const cardStyles = useStyles();\n  return (\n    <Card className={classes.card}>\n      <div className={classes.con}>\n        <CardContent className={classes.content}>\n          <div\n            style={{\n              position: 'relative',\n            }}\n          >\n            <CardMedia className={classes.media} image={image} />\n            <div\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                //  transform: 'translateX(25%)'\n              }}\n            >\n              <Typography\n                className={classes.title}\n                variant={'h4'}\n                component={'h4'}\n              >\n                {title}\n              </Typography>\n              <Typography className={classes.subtitle}>{subtitle}</Typography>\n              <CardActions>\n                <Link to={path}>\n                  <Button renderAs='button'>Klicke hier</Button>\n                </Link>\n              </CardActions>\n            </div>\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\n//Copyright\nfunction Copyright() {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"textSecondary\"\n      align=\"center\"\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" >\n      Projekt Geschichte vernetzt\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n// place the card on a grid\nexport default function Dashboard() {\n  const cardStyles = useStyles();\n  const gridStyles = useGridStyles();\n\n  return (\n    <Container>\n    <Grid\n      container\n      //  direction=\"row\"\n      spacing={0}\n      className={gridStyles.gridContainer}\n      justify='center'\n    >\n      <Title title='Hessisches Landesmusuem' />\n      <Grid item md>\n        <CustomCard\n          classes={cardStyles}\n          title={'Benutzer'}\n          subtitle={'Verwalte Benutzer*innen'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/01_1180x0.png'\n          }\n          path='/Benutzer'\n        />\n        <CustomCard\n          classes={cardStyles}\n          title={'Touren'}\n          subtitle={'Erstelle Touren'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/02_376x376.png'\n          }\n          path='/Touren'\n        />\n      </Grid>\n      <Grid item md>\n        <CustomCard\n          classes={cardStyles}\n          title={'Exponate'}\n          subtitle={'Bearbeite Exponate'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/05_versionKlein_376x376.png'\n          }\n          path='/Exponate'\n        />\n        <CustomCard\n          classes={cardStyles}\n          title={'Abzeichen'}\n          subtitle={'Füge neue Abzeichen hinzu'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/03_376x376.png'\n          }\n          path='/Abzeichen'\n        />\n      </Grid>\n    </Grid>\n    <Copyright/>\n    </Container>\n  );\n}",{"ruleId":"76","severity":1,"message":"77","line":7,"column":27,"nodeType":"78","messageId":"79","endLine":7,"endColumn":33},{"ruleId":"76","severity":1,"message":"80","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":19},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"76","severity":1,"message":"85","line":12,"column":3,"nodeType":"78","messageId":"79","endLine":12,"endColumn":13},{"ruleId":"76","severity":1,"message":"86","line":22,"column":3,"nodeType":"78","messageId":"79","endLine":22,"endColumn":9},{"ruleId":"76","severity":1,"message":"87","line":23,"column":3,"nodeType":"78","messageId":"79","endLine":23,"endColumn":14},{"ruleId":"76","severity":1,"message":"88","line":24,"column":3,"nodeType":"78","messageId":"79","endLine":24,"endColumn":14},{"ruleId":"76","severity":1,"message":"89","line":25,"column":3,"nodeType":"78","messageId":"79","endLine":25,"endColumn":15},{"ruleId":"76","severity":1,"message":"90","line":36,"column":8,"nodeType":"78","messageId":"79","endLine":36,"endColumn":18},{"ruleId":"76","severity":1,"message":"91","line":37,"column":10,"nodeType":"78","messageId":"79","endLine":37,"endColumn":18},{"ruleId":"76","severity":1,"message":"92","line":4,"column":3,"nodeType":"78","messageId":"79","endLine":4,"endColumn":7},{"ruleId":"76","severity":1,"message":"93","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":18},{"ruleId":"76","severity":1,"message":"94","line":62,"column":7,"nodeType":"78","messageId":"79","endLine":62,"endColumn":21},{"ruleId":"76","severity":1,"message":"95","line":9,"column":3,"nodeType":"78","messageId":"79","endLine":9,"endColumn":17},{"ruleId":"76","severity":1,"message":"96","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"97","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":26},{"ruleId":"76","severity":1,"message":"98","line":6,"column":27,"nodeType":"78","messageId":"79","endLine":6,"endColumn":32},{"ruleId":"76","severity":1,"message":"99","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":21},{"ruleId":"76","severity":1,"message":"100","line":65,"column":9,"nodeType":"78","messageId":"79","endLine":65,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'SimpleForm' is defined but never used.","'Filter' is defined but never used.","'SearchInput' is defined but never used.","'SelectInput' is defined but never used.","'BooleanInput' is defined but never used.","'PersonIcon' is defined but never used.","'Category' is defined but never used.","'Edit' is defined but never used.","'Fragment' is defined but never used.","'optionRenderer' is assigned a value but never used.","'ReferenceField' is defined but never used.","'simpleRestProvider' is defined but never used.","'jsonServerProvider' is defined but never used.","'Paper' is defined but never used.","'ContactMail' is defined but never used.","'cardStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]