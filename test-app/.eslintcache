[{"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js":"1","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js":"2","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js":"3","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Routes.js":"4","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/LogoutStyle.js":"5","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"6","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/Theme.js":"7","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/dataProvider.js":"8","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyLayout.js":"9","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyAppBar.js":"10","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/profile.js":"11","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyUserMenu.js":"12","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/LoginPage.js":"13","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js":"14","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js":"15","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js":"16","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js":"17","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js":"18","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js":"19","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserList.js":"20","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/Tour_Feedback.js":"21","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js":"22","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserCreate.js":"23","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js":"24","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js":"25","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js":"26","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js":"27","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js":"28","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js":"29","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js":"30","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js":"31","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/authProvider.js":"32"},{"size":620,"mtime":1608462829115,"results":"33","hashOfConfig":"34"},{"size":4920,"mtime":1612348110854,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1608462829115,"results":"36","hashOfConfig":"34"},{"size":704,"mtime":1609672701770,"results":"37","hashOfConfig":"34"},{"size":1896,"mtime":1608462829115,"results":"38","hashOfConfig":"34"},{"size":4358,"mtime":1612337520269,"results":"39","hashOfConfig":"34"},{"size":472,"mtime":1610037043118,"results":"40","hashOfConfig":"34"},{"size":9053,"mtime":1612360860499,"results":"41","hashOfConfig":"34"},{"size":349,"mtime":1612173188616,"results":"42","hashOfConfig":"34"},{"size":213,"mtime":1612173188616,"results":"43","hashOfConfig":"34"},{"size":2971,"mtime":1612173188616,"results":"44","hashOfConfig":"34"},{"size":445,"mtime":1612173188616,"results":"45","hashOfConfig":"34"},{"size":4075,"mtime":1612348110854,"results":"46","hashOfConfig":"34"},{"size":3298,"mtime":1612338575221,"results":"47","hashOfConfig":"34"},{"size":2194,"mtime":1612338575221,"results":"48","hashOfConfig":"34"},{"size":4890,"mtime":1612361354646,"results":"49","hashOfConfig":"34"},{"size":6144,"mtime":1612358541023,"results":"50","hashOfConfig":"34"},{"size":2664,"mtime":1612190849000,"results":"51","hashOfConfig":"34"},{"size":3520,"mtime":1612190849000,"results":"52","hashOfConfig":"34"},{"size":2336,"mtime":1612361528760,"results":"53","hashOfConfig":"34"},{"size":2321,"mtime":1612360930128,"results":"54","hashOfConfig":"34"},{"size":1465,"mtime":1612190849000,"results":"55","hashOfConfig":"34"},{"size":495,"mtime":1612190849000,"results":"56","hashOfConfig":"34"},{"size":855,"mtime":1612190849000,"results":"57","hashOfConfig":"34"},{"size":279,"mtime":1612190849000,"results":"58","hashOfConfig":"34"},{"size":1861,"mtime":1612190849000,"results":"59","hashOfConfig":"34"},{"size":992,"mtime":1612190849000,"results":"60","hashOfConfig":"34"},{"size":1882,"mtime":1612190849000,"results":"61","hashOfConfig":"34"},{"size":762,"mtime":1612190849000,"results":"62","hashOfConfig":"34"},{"size":1347,"mtime":1612190849000,"results":"63","hashOfConfig":"34"},{"size":541,"mtime":1612190849000,"results":"64","hashOfConfig":"34"},{"size":552,"mtime":1612345951395,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"zx3xcf",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js",["142","143"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["144","145"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js",["146"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Routes.js",["147","148"],"import React from 'react'\nimport { BrowserRouter as Router,\n    Route, Switch, Link } from \"react-router-dom\";\nimport Admins from './Admins';\nimport Exponate from './Exponate';\nimport Touren from './Touren';\n\n\n\n\nexport default class Routes extends React.Component {\n    render() {\n        return(\n            <div>\n            <Switch>\n           <Route exact path=\"/Touren\" render={() => (\n               <Touren></Touren>\n           )}/>\n              \n         \n          <Route exact path=\"/Exponate\">\n               <Exponate></Exponate>\n          </Route>\n          <Route exact path=\"/User\">\n                <Admins></Admins>\n            </Route>\n        </Switch>\n        </div>\n        )\n    }\n}",["149","150"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/LogoutStyle.js",["151","152","153"],"import React, { Component } from 'react'\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { CssBaseline } from '@material-ui/core';\n\nconst StyledMenu = withStyles()\n  ((props) => (\n    <Menu \n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\"\n      }}\n      {...props}\n    />\n  ));\n\n  const StyledMenuItem = withStyles((theme) => ({\n    root: {\n      \"&:focus\": {\n        backgroundColor: theme.palette.primary.main,\n        \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n          color: theme.palette.common.white\n        }\n      }\n    }\n  }))(MenuItem);\n\nexport default function LogoutStyle() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n      };\n\n    return(\n        <div>\n            <Button onClick={handleClick}>\n                <AccountCircleIcon/>\n            </Button>\n\n            <StyledMenu\n            id=\"customized-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n            >\n                <StyledMenuItem>\n                    <ListItemText primary=\"Abmelden\" onClick={blah}/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>            \n    )    \n}\n\nfunction blah()  {\n    return(\n        alert('Sie sind abgemeldet')\n    )\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["154","155"],"import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'react-admin';\n//material UI imports\nimport Card from '@material-ui/core/Card';\nimport { Container, Grid, Paper, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport badges from './images/Badges.png';\nimport exponate from './images/Exponate.png';\nimport tours from './images/Tours.png';\nimport user from './images/User.png';\n\n// style for the cards\nconst useCardStyles = makeStyles(() => ({\n  card: {\n    maxWidth: '100%',\n    margin: 'auto',\n    transition: '0.3s',\n    color: '#000',\n    backgroundColor: 'transparent',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    marginLeft: '50%',\n    margin: 'auto',\n    display: 'flex',\n    objectFit: 'contain',\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    textAlign: 'left',\n  },\n  heading: {\n    fontWeight: 'bold',\n  },\n  subheading: {\n    lineHeight: 1.8,\n  },\n  root: {\n    minWidth: '90%',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n// style for the grid\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\n  gridContainer: {\n    maxWidth: '100%',\n    margin: 'auto',\n    position: 'relative',\n  },\n}));\n\n// card components for different links\nconst CustomCard = ({ classes, image, title, subtitle, path }) => {\n  const cardStyles = useCardStyles();\n  return (\n    <Card className={classes.card}>\n      <div className={classes.con}>\n        <CardContent className={classes.content}>\n          <div\n            style={{\n              position: 'relative',\n            }}\n          >\n            <CardMedia className={classes.media} image={image} />\n            <div\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n              }}\n            >\n              <Typography\n                className={classes.title}\n                variant={'h4'}\n                component={'h4'}\n              >\n                {title}\n              </Typography>\n              <Typography className={classes.subtitle}>{subtitle}</Typography>\n              <CardActions>\n                <Link to={path}>\n                  <Button variant='contained' color='primary' renderAs='button'>\n                    Klicke hier\n                  </Button>\n                </Link>\n              </CardActions>\n            </div>\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\n//Copyright\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link to='/' color='inherit'>\n        Projekt Geschichte vernetzt\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n// place the card on a grid\nexport default function Dashboard() {\n  const cardStyles = useCardStyles();\n  const gridStyles = useGridStyles();\n\n  return (\n    <Container>\n      <Grid\n        container\n        spacing={0}\n        className={gridStyles.gridContainer}\n        justify='center'\n      >\n        <Title title='Geschichte vernetzt - Vergangenes interdisziplinär erforschen und vermitteln | TU Darmstadt' />\n        <Grid item md>\n          <CustomCard\n            classes={cardStyles}\n            title={'Benutzer*innen'}\n            subtitle={'Verwalte Benutzer*innen'}\n            image={user}\n            path='/Benutzer'\n          />\n          <CustomCard\n            classes={cardStyles}\n            title={'Touren'}\n            subtitle={'Erstelle Touren'}\n            image={tours}\n            path='/Touren'\n          />\n        </Grid>\n        <Grid item md>\n          <CustomCard\n            classes={cardStyles}\n            title={'Exponate'}\n            subtitle={'Bearbeite Exponate'}\n            image={exponate}\n            path='/Exponate'\n          />\n          <CustomCard\n            classes={cardStyles}\n            title={'Bildverknüpfungen'}\n            subtitle={'Füge neue Bildverknüpfungen hinzu'}\n            image={badges}\n            path='/Abzeichen'\n          />\n        </Grid>\n      </Grid>\n      <Copyright />\n    </Container>\n  );\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/Theme.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/dataProvider.js",["156","157","158","159","160","161","162","163"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyLayout.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyAppBar.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/profile.js",["164","165"],"/*\nimport ProfileEdit from './ProfileEdit';\n\nexport default {\n    edit: ProfileEdit\n};\n*/\n\nimport React, {\n    createContext,\n    useState,\n    useCallback,\n    useMemo,\n    useContext\n  } from \"react\";\n  import {\n    TextInput,\n    ImageInput,\n    ImageField,\n    PasswordInput,\n    SimpleForm,\n    required,\n    useDataProvider,\n    useNotify,\n    SaveContextProvider,\n    useGetIdentity\n  } from \"react-admin\";\n  \n  const ProfileContext = createContext();\n  \n  export const ProfileProvider = ({ children }) => {\n    const [profileVersion, setProfileVersion] = useState(0);\n    const context = useMemo(\n      () => ({\n        profileVersion,\n        refreshProfile: () =>\n          setProfileVersion((currentVersion) => currentVersion + 1)\n      }),\n      [profileVersion]\n    );\n  \n    return (\n      <ProfileContext.Provider value={context}>\n        {children}\n      </ProfileContext.Provider>\n    );\n  };\n  \n  export const useProfile = () => useContext(ProfileContext);\n  \n  export const ProfileEdit = ({ staticContext, ...props }) => {\n    console.log(\"ProfileEdit\");\n    const dataProvider = useDataProvider();\n    const notify = useNotify();\n    const [saving, setSaving] = useState();\n    const { refreshProfile } = useProfile();\n  \n    const { loaded, identity } = useGetIdentity();\n  \n    const handleSave = useCallback(\n      (values) => {\n        setSaving(true);\n        dataProvider.updateUserProfile(\n          { data: values },\n          {\n            onSuccess: ({ data }) => {\n              setSaving(false);\n              notify(\"Dein Profil wurde aktualisiert\", \"info\", {\n                _: \"Dein Profil wurde aktualisiert\"\n              });\n              refreshProfile();\n            },\n            onFailure: () => {\n              setSaving(false);\n              notify(\n                \"A technical error occured while updating your profile. Please try later.\",\n                \"warning\",\n                {\n                  _:\n                    \"A technical error occured while updating your profile. Please try later.\"\n                }\n              );\n            }\n          }\n        );\n      },\n      [dataProvider, notify, refreshProfile]\n    );\n  \n    const saveContext = useMemo(\n      () => ({\n        save: handleSave,\n        saving\n      }),\n      [saving, handleSave]\n    );\n  \n    if (!loaded) {\n      return null;\n    }\n  \n    return (\n      <SaveContextProvider value={saveContext}>\n        <SimpleForm save={handleSave} record={identity ? identity : {}}>\n          <TextInput source=\"Benutzername\" validate={required()} fullWidth/>\n          <PasswordInput source=\"altes Passwort\" validate={required()} label=\"altes Passwort\" fullWidth/>\n          <PasswordInput source=\"neues Passwort\" validate={required()} label=\"neues Passwort\" fullWidth/>\n          <PasswordInput source=\"neues Passwort\" validate={required()} label=\"neues Passwort wiederholen\" fullWidth/>\n        </SimpleForm>\n      </SaveContextProvider>\n    );\n  };\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/MyProfile/MyUserMenu.js",["166"],"import React from 'react';\nimport { UserMenu, MenuItemLink} from 'react-admin';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\n\nconst MyUserMenu = (props) => {\n  return (\n    <UserMenu  {...props}>\n      <MenuItemLink\n        to=\"/my-profile\"\n        primaryText=\"Mein Profil\"\n        leftIcon={<SettingsIcon />}\n      />\n    </UserMenu>\n  );\n};\n\nexport default MyUserMenu;\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/LoginPage.js",["167","168","169","170","171"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Field, Form } from 'react-final-form';\nimport { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { useLogin } from 'react-admin';\n\n// site components\n//import authProvider from \"./authProvider\";\nimport './LoginPage.css';\n\nconst FakeLogin = (props) => {\n  const login = useLogin();\n  const handleSubmit = auth => {\n    login(auth);\n  };\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <div className='App'>\n            <header className='App-header'>\n              <div className='Login'>\n                <Button>\n                  <LockIcon color='primary' fontSize='large' />\n                </Button>\n                <Field\n                  variant='standard'\n                  label='Benutzername'\n                  margin='normal'\n                />\n                <Field\n                  variant='standard'\n                  label='Passwort'\n                  margin='normal'\n                  type='password'\n                />\n\n                <div className='Button'>\n                  <Button\n                    variant='contained'\n                    type='submit'\n                    color='primary'\n                    onClick={() => {}}\n                  >\n                    ANMELDEN\n                  </Button>\n                </div>\n              </div>\n            </header>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n      open: false,\n    };\n  }\n\n  setUsername = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  setPassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <div className='Login'>\n            <Button>\n              <LockIcon color='primary' fontSize='large' />\n            </Button>\n            <TextField\n              variant='standard'\n              label='Benutzername'\n              margin='normal'\n              onChange={this.setUsername}\n              value={this.state.username}\n            />\n            <TextField\n              variant='standard'\n              label='Passwort'\n              margin='normal'\n              type='password'\n              onChange={this.setPassword}\n              value={this.state.password}\n            />\n\n            <div className='Button'>\n              <Button variant='contained' color='primary' onClick={() => {}}>\n                ANMELDEN\n              </Button>\n            </div>\n          </div>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n          >\n            <DialogTitle id='alert-dialog-title'></DialogTitle>\n            <DialogContent>\n              <DialogContentText id='alert-dialog-description'>\n                {this.state.message}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color='primary'>\n                Okay\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default FakeLogin;\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js",["172"],"import React from 'react';\nimport {\n  Edit,\n  //Forms\n  TabbedForm,\n  FormTab,\n  //Inputs\n  TextInput,\n  ImageInput,\n  ReferenceInput,\n  Toolbar,\n  SaveButton,\n  SimpleShowLayout,\n  TextField,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport {\n  Card as MuiCard,\n  makeStyles,\n} from '@material-ui/core';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle = 'Sind Sie sicher, dass Sie dieses Exponat löschen wollen?';\n\nconst DeleteConfirmContent = props => {\n  return (\n    <SimpleShowLayout {...props} >\n      <TextField source='_id' label='Objekt ID' />\n      <TextField source='title' label='Titel' />\n      <TextField source='category' label='Kategorie' />\n      <TextField source='year' label='Jahr' />\n      <TextField source='art_type' label='Kunsttyp' />\n      <TextField source='creator' label='Ersteller' />\n    </SimpleShowLayout>\n  );\n};\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n    inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n  });\n  \n  // edit an exhibit\n  export const ExponateEdit = (props) => {\n    const classes = useStyles();\n  \n    return (\n      <Edit {...props} title='Bearbeite Exponate'>\n        <TabbedForm toolbar={<UserEditToolbar />}  warnWhenUnsavedChanges>\n          <FormTab label='Übersicht'>\n            <TextInput source='_id' label='ObjektID' fullWidth />\n            <TextInput source='title' label='Titel' fullWidth />\n            <RichTextInput source='description' label='Beschreibung' fullWidth />\n            <TextInput\n              source='additionfal_inf'\n              label='Weitere Informationen'\n              fullWidth\n            />\n            <TextInput source='category' label='Kategorie' fullWidth />\n            <TextInput source='sub_category' label='Subkategorie' fullWidth />\n            <TextInput\n              source='interdisciplinary_context'\n              label='Interdisziplinärkontext'\n              fullWidth\n            />\n          </FormTab>\n          <FormTab label='Eckdaten'>\n            <TextInput source='year' label='Jahr' fullWidth />\n            <TextInput source='art_type' label='Kunsttyp' fullWidth />\n            <TextInput source='creator' label='Ersteller' fullWidth />\n            <TextInput source='material' label='Material' fullWidth />\n            <TextInput\n              source='size_'\n              label='Größe'\n              formClassName={classes.inlineBlock}\n            />\n            <TextInput\n              source='location'\n              label='Ort'\n              formClassName={classes.inlineBlock}\n            />\n          </FormTab>\n          <FormTab label='Bildverknüpfungen'>\n          <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n              <ImageInput source='picture' fullWidth />\n            </ReferenceInput>\n          </FormTab>\n          <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}      \n          content={DeleteConfirmContent}  \n          label='Löschen'                 \n          cancel='Abbrechen'                 \n        />\n       \n        </TabbedForm>\n      </Edit>\n    );\n  };","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js",["173"],"import React from 'react';\nimport {\n  Create,\n  //Forms\n  TabbedForm,\n  FormTab,\n  //Inputs\n  TextInput,\n  ImageInput,\n  ReferenceInput,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport {\n  Card as MuiCard,\n  makeStyles,\n} from '@material-ui/core';\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\n\n// create a new exhibit\n// todo: ID should not be created manually but automacially (distinct id)\nexport const ExponateCreate = (props) => {\n  const classes = useStyles();\n  return (\n    <Create title='Erstelle Exponate' {...props}>\n      <TabbedForm warnWhenUnsavedChanges>\n        <FormTab label='Übersicht'>\n          <TextInput source='_id' label='ObjektID' fullWidth />\n          <TextInput source='title' label='Titel' fullWidth />\n          <RichTextInput source='description' label='Beschreibung' fullWidth />\n          <TextInput\n            source='additionfal_inf'\n            label='Weitere Informationen'\n            fullWidth\n          />\n          <TextInput source='category' label='Kategorie' fullWidth />\n          <TextInput source='sub_category' label='Subkategorie' fullWidth />\n          <TextInput\n            source='interdisciplinary_context'\n            label='Interdisziplinärkontext'\n            fullWidth\n          />\n        </FormTab>\n        <FormTab label='Eckdaten'>\n          <TextInput source='year' label='Jahr' fullWidth />\n          <TextInput source='art_type' label='Kunsttyp' fullWidth />\n          <TextInput source='creator' label='Ersteller' fullWidth />\n          <TextInput source='material' label='Material' fullWidth />\n          <TextInput\n            source='size_'\n            label='Größe'\n            formClassName={classes.inlineBlock}\n          />\n          <TextInput\n            source='location'\n            label='Ort'\n            formClassName={classes.inlineBlock}\n          />\n          <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n            <ImageInput source='picture' fullWidth />\n          </ReferenceInput>\n        </FormTab>\n      </TabbedForm>\n    </Create>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js",["174"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js",["175","176"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js",["177"],"import React from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  //options\n  SimpleFormIterator,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //fields\n  TextField,\n  //inputs\n  SelectInput,\n  ImageInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  ReferenceInput,\n  NumberInput,\n  ArrayInput,\n  BooleanInput,\n  DateInput,\n  TextInput,\n\n  Toolbar,\n  SaveButton,\n  SimpleShowLayout,\n  BooleanField,\n} from 'react-admin';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle = 'Sind Sie sicher, dass Sie diese Tour löschen wollen?';\n\nconst DeleteConfirmContent = props => {\n  return (\n    <SimpleShowLayout {...props} >\n      <TextField disabled source='ID' label='ID' fullWidth/>\n      <TextField source='name' label='Titel' fullWidth/>\n      <TextField source='description' label='Beschreibung' fullWidth/>\n      <TextField source='search_id' label='Touren Code' fullWidth/>\n    </SimpleShowLayout>\n  );\n};\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// edit a tour\nexport const TourenEdit = (props) => (\n    <Edit title='Bearbeite Touren' {...props}>\n      <SimpleForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n        <TextInput disabled source='ID' label='ID' fullWidth/>\n        <TextInput source='name' label='Titel' fullWidth/>\n        <TextInput source='description' label='Beschreibung' fullWidth/>\n        <ReferenceInput source='user' reference='Benutzer' label='Ersteller' fullWidth>\n          <SelectInput optionText='username' />\n        </ReferenceInput>\n        <ReferenceArrayInput source='user' reference='Benutzer' fullWidth>\n          <SelectArrayInput optionText='username' />\n        </ReferenceArrayInput>\n        <TextInput source='search_id' label='Touren Code' fullWidth/>\n        <TextInput source='session_id' label='Passwort' fullWidth/>\n        <DateInput\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberInput\n          source='difficulty'\n          label='Schwierigkeitsgrad'\n          validate={validateDifficulty}\n        />\n        <SelectInput\n          source='Status'\n          choices={[\n            { id: 'freigegeben', name: 'freigegeben' },\n            { id: 'ausstehend', name: 'ausstehend' },\n            { id: 'privat', name: 'privat' },\n          ]}\n        />\n        {/*  TODO: model the different stations and translate them into edit Inputs*/}\n        <ArrayInput source='Stationen' fullWidth>\n          <SimpleFormIterator>\n            <TextField source='Objekt' />\n            <BooleanInput source='Foto' />\n            <BooleanInput source='Text' />\n            <BooleanInput source='Details' />\n            <TextInput source='Textfeld' />\n            <ArrayInput source='Fragen'>\n              <SimpleFormIterator>\n                <TextInput source='Antwort' />\n                <BooleanInput source='Antwort' />\n              </SimpleFormIterator>\n            </ArrayInput>\n            <ImageInput source='Bild' />\n          </SimpleFormIterator>\n        </ArrayInput>\n        <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}      \n          content={DeleteConfirmContent}  \n          label='Löschen'                 \n          cancel='Abbrechen'                 \n        />\n      </SimpleForm>\n    </Edit>\n  );\n  ","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserList.js",["178","179","180"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/Tour_Feedback.js",["181","182"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/authProvider.js",["183"],{"ruleId":"184","severity":1,"message":"185","line":7,"column":27,"nodeType":"186","messageId":"187","endLine":7,"endColumn":33},{"ruleId":"184","severity":1,"message":"188","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":19},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"184","severity":1,"message":"193","line":2,"column":27,"nodeType":"186","messageId":"187","endLine":2,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":2,"column":27,"nodeType":"186","messageId":"187","endLine":2,"endColumn":33},{"ruleId":"184","severity":1,"message":"194","line":3,"column":20,"nodeType":"186","messageId":"187","endLine":3,"endColumn":24},{"ruleId":"189","replacedBy":"195"},{"ruleId":"191","replacedBy":"196"},{"ruleId":"184","severity":1,"message":"197","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"198","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":18},{"ruleId":"184","severity":1,"message":"188","line":9,"column":10,"nodeType":"186","messageId":"187","endLine":9,"endColumn":21},{"ruleId":"184","severity":1,"message":"199","line":6,"column":27,"nodeType":"186","messageId":"187","endLine":6,"endColumn":32},{"ruleId":"184","severity":1,"message":"200","line":65,"column":9,"nodeType":"186","messageId":"187","endLine":65,"endColumn":19},{"ruleId":"184","severity":1,"message":"201","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"202","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":26},{"ruleId":"203","severity":1,"message":"204","line":130,"column":7,"nodeType":"205","messageId":"206","endLine":130,"endColumn":11},{"ruleId":"203","severity":1,"message":"207","line":133,"column":7,"nodeType":"205","messageId":"206","endLine":133,"endColumn":18},{"ruleId":"203","severity":1,"message":"208","line":137,"column":9,"nodeType":"205","messageId":"206","endLine":137,"endColumn":17},{"ruleId":"203","severity":1,"message":"208","line":142,"column":11,"nodeType":"205","messageId":"206","endLine":142,"endColumn":19},{"ruleId":"203","severity":1,"message":"208","line":146,"column":11,"nodeType":"205","messageId":"206","endLine":146,"endColumn":19},{"ruleId":"203","severity":1,"message":"209","line":152,"column":7,"nodeType":"205","messageId":"206","endLine":152,"endColumn":15},{"ruleId":"184","severity":1,"message":"210","line":18,"column":5,"nodeType":"186","messageId":"187","endLine":18,"endColumn":15},{"ruleId":"184","severity":1,"message":"211","line":19,"column":5,"nodeType":"186","messageId":"187","endLine":19,"endColumn":15},{"ruleId":"184","severity":1,"message":"212","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":2,"column":27,"nodeType":"186","messageId":"187","endLine":2,"endColumn":33},{"ruleId":"184","severity":1,"message":"213","line":2,"column":35,"nodeType":"186","messageId":"187","endLine":2,"endColumn":40},{"ruleId":"184","severity":1,"message":"214","line":2,"column":42,"nodeType":"186","messageId":"187","endLine":2,"endColumn":48},{"ruleId":"184","severity":1,"message":"194","line":2,"column":50,"nodeType":"186","messageId":"187","endLine":2,"endColumn":54},{"ruleId":"184","severity":1,"message":"215","line":19,"column":7,"nodeType":"186","messageId":"187","endLine":19,"endColumn":16},{"ruleId":"184","severity":1,"message":"216","line":19,"column":11,"nodeType":"186","messageId":"187","endLine":19,"endColumn":18},{"ruleId":"184","severity":1,"message":"216","line":15,"column":11,"nodeType":"186","messageId":"187","endLine":15,"endColumn":18},{"ruleId":"184","severity":1,"message":"217","line":77,"column":7,"nodeType":"186","messageId":"187","endLine":77,"endColumn":16},{"ruleId":"184","severity":1,"message":"218","line":25,"column":3,"nodeType":"186","messageId":"187","endLine":25,"endColumn":21},{"ruleId":"184","severity":1,"message":"219","line":30,"column":3,"nodeType":"186","messageId":"187","endLine":30,"endColumn":15},{"ruleId":"184","severity":1,"message":"219","line":28,"column":3,"nodeType":"186","messageId":"187","endLine":28,"endColumn":15},{"ruleId":"184","severity":1,"message":"220","line":6,"column":3,"nodeType":"186","messageId":"187","endLine":6,"endColumn":13},{"ruleId":"184","severity":1,"message":"221","line":12,"column":3,"nodeType":"186","messageId":"187","endLine":12,"endColumn":17},{"ruleId":"184","severity":1,"message":"222","line":56,"column":7,"nodeType":"186","messageId":"187","endLine":56,"endColumn":21},{"ruleId":"184","severity":1,"message":"194","line":8,"column":3,"nodeType":"186","messageId":"187","endLine":8,"endColumn":7},{"ruleId":"184","severity":1,"message":"223","line":33,"column":22,"nodeType":"186","messageId":"187","endLine":33,"endColumn":30},{"ruleId":"184","severity":1,"message":"224","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":22},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["225"],"no-negated-in-lhs",["226"],"'Layout' is defined but never used.","'Link' is defined but never used.",["225"],["226"],"'Component' is defined but never used.","'AcUnitIcon' is defined but never used.","'Paper' is defined but never used.","'cardStyles' is assigned a value but never used.","'simpleRestProvider' is defined but never used.","'jsonServerProvider' is defined but never used.","no-dupe-keys","Duplicate key 'name'.","ObjectExpression","unexpected","Duplicate key 'description'.","Duplicate key 'username'.","Duplicate key 'lastEdit'.","'ImageInput' is defined but never used.","'ImageField' is defined but never used.","'createMuiTheme' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'FakeLogin' is assigned a value but never used.","'MuiCard' is defined but never used.","'MapFilter' is assigned a value but never used.","'ReferenceManyField' is defined but never used.","'BooleanField' is defined but never used.","'EditButton' is defined but never used.","'ReferenceField' is defined but never used.","'optionRenderer' is assigned a value but never used.","'basePath' is assigned a value but never used.","'AuthProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]