[{"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js":"1","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js":"2","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js":"3","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/CustomRoutes.js":"4","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyLayout.js":"5","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Footer.js":"6","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyTheme.js":"7","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/initialState.js":"8","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js":"9","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js":"10","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js":"11","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js":"12","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js":"13","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js":"14","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserList.js":"15","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserCreate.js":"16","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js":"17","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js":"18","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/TourenFeedback.js":"19","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js":"20","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js":"21","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js":"22","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js":"23","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js":"24","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js":"25","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/LoginPage.js":"26","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/authProvider.js":"27","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/fakeDataProvider.js":"28","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js":"29","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"30","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/CustomListActions.js":"31","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/CustomBulkActions.js":"32","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyProfile/Profile.js":"33","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Faq/Faq.js":"34","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateFilterSidebar.js":"35","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/TourenFilter.js":"36","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/Stationen.js":"37","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/ProfilePictureGrid.js":"38","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/FeedbackGrid.js":"39","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserFilter.js":"40","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/customGraphQLProvider.js":"41","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/customQueryBuilder.js":"42","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/refreshAuth.js":"43","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/testmethods/testQueries.js":"44"},{"size":620,"mtime":1608462829115,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1608462829115,"results":"47","hashOfConfig":"46"},{"size":6607,"mtime":1615635783252,"results":"48","hashOfConfig":"46"},{"size":346,"mtime":1615624175645,"results":"49","hashOfConfig":"46"},{"size":683,"mtime":1615624175645,"results":"50","hashOfConfig":"46"},{"size":1241,"mtime":1615624449446,"results":"51","hashOfConfig":"46"},{"size":353,"mtime":1615624175645,"results":"52","hashOfConfig":"46"},{"size":181,"mtime":1615624175645,"results":"53","hashOfConfig":"46"},{"size":3516,"mtime":1615624449442,"results":"54","hashOfConfig":"46"},{"size":3413,"mtime":1615624449442,"results":"55","hashOfConfig":"46"},{"size":3194,"mtime":1615624449442,"results":"56","hashOfConfig":"46"},{"size":3186,"mtime":1615624175641,"results":"57","hashOfConfig":"46"},{"size":2664,"mtime":1615624449446,"results":"58","hashOfConfig":"46"},{"size":3301,"mtime":1615624449446,"results":"59","hashOfConfig":"46"},{"size":3222,"mtime":1615624175645,"results":"60","hashOfConfig":"46"},{"size":510,"mtime":1615624175645,"results":"61","hashOfConfig":"46"},{"size":1192,"mtime":1615624175641,"results":"62","hashOfConfig":"46"},{"size":652,"mtime":1615624175641,"results":"63","hashOfConfig":"46"},{"size":1699,"mtime":1615624449446,"results":"64","hashOfConfig":"46"},{"size":2371,"mtime":1615624449442,"results":"65","hashOfConfig":"46"},{"size":2177,"mtime":1615624449442,"results":"66","hashOfConfig":"46"},{"size":1355,"mtime":1615624449442,"results":"67","hashOfConfig":"46"},{"size":1169,"mtime":1615624175641,"results":"68","hashOfConfig":"46"},{"size":1432,"mtime":1615624175641,"results":"69","hashOfConfig":"46"},{"size":607,"mtime":1615624175641,"results":"70","hashOfConfig":"46"},{"size":4102,"mtime":1615624449446,"results":"71","hashOfConfig":"46"},{"size":3042,"mtime":1615624449446,"results":"72","hashOfConfig":"46"},{"size":10453,"mtime":1615624449446,"results":"73","hashOfConfig":"46"},{"size":1570,"mtime":1615624449446,"results":"74","hashOfConfig":"46"},{"size":4378,"mtime":1615624449446,"results":"75","hashOfConfig":"46"},{"size":1401,"mtime":1615624175637,"results":"76","hashOfConfig":"46"},{"size":422,"mtime":1615624175637,"results":"77","hashOfConfig":"46"},{"size":3027,"mtime":1615624175645,"results":"78","hashOfConfig":"46"},{"size":10204,"mtime":1615624449446,"results":"79","hashOfConfig":"46"},{"size":2884,"mtime":1615624449442,"results":"80","hashOfConfig":"46"},{"size":1620,"mtime":1615624175641,"results":"81","hashOfConfig":"46"},{"size":5766,"mtime":1615624175641,"results":"82","hashOfConfig":"46"},{"size":1956,"mtime":1615624449442,"results":"83","hashOfConfig":"46"},{"size":2825,"mtime":1615624449446,"results":"84","hashOfConfig":"46"},{"size":773,"mtime":1615624175645,"results":"85","hashOfConfig":"46"},{"size":2755,"mtime":1615636385031,"results":"86","hashOfConfig":"46"},{"size":1342,"mtime":1615631106494,"results":"87","hashOfConfig":"46"},{"size":1434,"mtime":1615635118843,"results":"88","hashOfConfig":"46"},{"size":1531,"mtime":1615636014543,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"zx3xcf",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"93"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"93"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"93"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"93"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"93"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"93"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js",["203","204"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["205","206"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js",["207","208","209"],"import React, { Component } from 'react';\nimport { Admin, Resource, Login } from 'react-admin';\n//components\n//Exponate\nimport { ExponateCreate } from './app/components/Exponate/ExponateCreate.js';\nimport { ExponateEdit } from './app/components/Exponate/ExponateEdit.js';\nimport { ExponateList } from './app/components/Exponate/ExponateList.js';\n//Touren\nimport { TourenList } from './app/components/Touren/ListTouren.js';\nimport { TourenCreate } from './app/components/Touren/CreateTouren.js';\nimport { TourenEdit } from './app/components/Touren/EditTouren.js';\nimport {\n  FeedbackList,\n  FeedbackEdit,\n} from './app/components/Touren/TourenFeedback.js';\n//Benutzer\nimport { UserList } from './app/components/User/UserList.js';\nimport { UserCreate } from './app/components/User/UserCreate.js';\nimport { AccountEdit } from './app/components/User/AccountEdit.js';\nimport { CodeList } from './app/components/User/Code/CodeList.js';\nimport { CodeCreate } from './app/components/User/Code/CodeCreate.js';\n//Bildverknüpfungen-Abzeichen\nimport { AbzeichenList } from './app/components/Abzeichen/AbzeichenList.js';\nimport { AbzeichenEdit } from './app/components/Abzeichen/AbzeichenEdit.js';\nimport { AbzeichenCreate } from './app/components/Abzeichen/AbzeichenCreate.js';\n//Bildverknüpfungen-Profilbilder\nimport { PictureList } from './app/components/Profilbilder/PictureList.js';\nimport { PictureEdit } from './app/components/Profilbilder/PictureEdit.js';\nimport { PictureCreate } from './app/components/Profilbilder/PictureCreate.js';\n//pages\nimport Dashboard from './app/containers/Dashboard';\nimport CustomRoutesProfile from './app/containers/CustomRoutes.js';\nimport MyLayout from './app/containers/MyLayout.js';\nimport Footer from './app/containers/Footer.js';\nimport { MyTheme } from './app/containers/MyTheme.js';\nimport LoginPage from './app/containers/Login/LoginPage.js';\nimport authProvider from './app/containers/Login/authProvider.js';\nimport initialState from './app/containers/Login/initialState.js';\n//icons\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PhotoFilterIcon from '@material-ui/icons/PhotoFilter';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport ListIcon from '@material-ui/icons/List';\nimport CreateIcon from '@material-ui/icons/Create';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\nimport HelpIcon from '@material-ui/icons/Help';\n// data\n//import dataProvider from './app/data/fakeDataProvider.js';\nimport gqlDataProvider from './app/data/customGraphQLProvider.js';\nimport refreshAuth from './app/data/refreshAuth.js';\nimport LoginNew from './app/data/refreshAuth.js';\n\n\n\nconst MyLoginPage = () => (\n  <Login\n    backgroundImage='https://www.hlmd.de/fileadmin/user_upload/haupthalle_enthuellung.jpg'\n    style={{\n      backgroundPosition: 'center',\n    }}\n  />\n);\n\nclass App extends Component {\n  // first step: set initial state\n  constructor() {\n    super();\n    this.state = { dataProvider: null };\n  }\n  // second step: build up provider and set set\n  componentDidMount() {\n    /* const dataProvider = dataProviderFactory(\n      process.env.REACT_APP_DATA_PROVIDER);  */\n    const dataProvider = gqlDataProvider;\n    this.setState({ dataProvider });\n  }\n  render() {\n    const { dataProvider } = this.state;\n    if (!dataProvider) {\n      return <div>Loading</div>;\n    }\n    return (\n      <div>\n        <Admin\n          initial={initialState}\n          authProvider={authProvider}\n          dataProvider={dataProvider}\n          loginPage={MyLoginPage}\n          dashboard={Dashboard}\n          theme={MyTheme}\n          layout={MyLayout}\n          customRoutes={CustomRoutesProfile}\n        >\n          {(permissions) => [\n            <Resource\n              name='museumObject'\n              list={ExponateList}\n              edit={ExponateEdit}\n              create={ExponateCreate}\n              icon={AccountBalanceIcon}\n              options={{ label: 'Exponate' }}\n            />,\n            <Resource\n              name='tour'\n              list={TourenList}\n              edit={TourenEdit}\n              create={TourenCreate}\n              icon={NavigationIcon}\n              options={{ label: 'Touren' }}\n            />,\n            <Resource\n              name='Benutzer_overview'\n              icon={SupervisorAccountIcon}\n              options={{ label: 'Benutzer*innen', isMenuParent: true }}\n            />,\n            permissions === 'admin' ? (\n              <Resource\n                name='user'\n                list={UserList}\n                edit={AccountEdit}\n                create={UserCreate}\n                icon={ListIcon}\n                options={{\n                  label: 'Übersicht',\n                  menuParent: 'Benutzer_overview',\n                }}\n              />\n            ) : null,\n            permissions === 'admin' ? (\n              <Resource\n                name='code'\n                list={CodeList}\n                create={CodeCreate}\n                icon={CreateIcon}\n                options={{\n                  label: 'Code Erstellen',\n                  menuParent: 'Benutzer_overview',\n                }}\n              />\n            ) : null,\n            <Resource\n              name='Bilder_overview'\n              icon={AddPhotoAlternateIcon}\n              options={{ label: 'Bildverknüpfungen', isMenuParent: true }}\n            />,\n            <Resource\n              name='badge'\n              list={AbzeichenList}\n              edit={AbzeichenEdit}\n              create={AbzeichenCreate}\n              icon={PhotoFilterIcon}\n              options={{ label: 'Abzeichen', menuParent: 'Bilder_overview' }}\n            />,\n            <Resource\n              name='ProfilePicture'\n              list={PictureList}\n              edit={PictureEdit}\n              create={PictureCreate}\n              icon={AddPhotoAlternateIcon}\n              options={{ label: 'Profilbilder', menuParent: 'Bilder_overview' }}\n            />,\n            <Resource\n              name='Feedback'\n              list={FeedbackList}\n              edit={FeedbackEdit}\n              icon={RateReviewIcon}\n              options={{ label: 'Feedback' }}\n            />,\n            <Resource\n              name='faq'\n              list={FeedbackList}\n              icon={HelpIcon}\n              options={{ label: 'FAQ' }}\n            />,\n          ]}\n        </Admin>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/CustomRoutes.js",["210"],"import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {ProfileEdit} from './MyProfile/Profile.js';\nimport SimpleAccordion from './Faq/Faq.js';\n\nexport default [\n  <Route\n  key=\"my-profile\"\n  path=\"/my-profile\"\n  render={() => <ProfileEdit />}\n/>,\n<Route\n  key=\"faq\"\n  path=\"/faq\"\n  render={() => <SimpleAccordion />}\n/>\n\n\n];","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyLayout.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Footer.js",["211","212"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport mint from '../data/images/mint_logo.png';\nimport bm from '../data/images/bm_logo.png';\n\nconst useStyles = makeStyles({\n  wrapper: {\n    textAlign: 'center',\n  },\n  imgFooter: {\n    width: '100%',\n    heigth: 100,\n    margin: 'auto',\n    textAlign: 'center',\n    padding: 10,\n  },\n  image: {\n    width: '15%',\n    height: 'auto',\n    display: 'inline-block',\n    vertical: 'middle',\n  },\n  text: {\n    color: 'textSecondary'\n  }\n});\n\nconst Footer = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n        <div className={classes.imgFooter}>\n        <img src={bm} className={classes.image} />\n        <img src={mint} className={classes.image} />\n        </div>\n      <h6 className={classes.text} >\n        Das Projekt MINTplus<sup>2</sup>: Systematischer und vernetzter\n        Kompetenzaufbau in der Lehrerbildung im Umgang mit Digitalisierung und\n        Heterogenität wird im Rahmen der gemeinsamen „Qualitätsoffensive\n        Lehrerbildung“ von Bund und Ländern aus Mitteln des Bundesministeriums\n        für Bildung und Forschung gefördert\n      </h6>\n    </div>\n  );\n};\n\nexport default Footer;\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyTheme.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/initialState.js",["213"],"/**\nconst initialState = {\n    theme: 'dark',\n    grid: 5,\n};\n*/\nconst initialState = () => ({\n    theme: localStorage.getItem('theme'),\n    grid: localStorage.getItem('grid'),\n});\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js",["214","215"],"import React from 'react';\nimport {\n  Edit,\n  //Forms\n  TabbedForm,\n  FormTab,\n  //Inputs\n  TextInput,\n  ImageInput,\n  ReferenceInput,\n  SelectInput,\n  Toolbar,\n  SaveButton,\n  SimpleShowLayout,\n  TextField,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport { makeStyles } from '@material-ui/core';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmContent = (props) => {\n  return (\n    <SimpleShowLayout {...props}>\n      <TextField source='_id' label='Objekt ID' />\n      <TextField source='title' label='Titel' />\n      <TextField source='category' label='Kategorie' />\n      <TextField source='year' label='Jahr' />\n      <TextField source='art_type' label='Kunsttyp' />\n      <TextField source='creator' label='Ersteller' />\n    </SimpleShowLayout>\n  );\n};\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\n// edit an exhibit\nexport const ExponateEdit = (props) => {\n  const classes = useStyles();\n  return (\n    <Edit {...props} title='Bearbeite Exponate'>\n      <TabbedForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n        <FormTab label='Übersicht'>\n          <TextInput source='_id' label='ObjektID' fullWidth />\n          <TextInput source='title' label='Titel' fullWidth />\n          <RichTextInput source='description' label='Beschreibung' fullWidth />\n          <TextInput\n            source='additionfal_inf'\n            label='Weitere Informationen'\n            fullWidth\n          />\n          <TextInput source='category' label='Kategorie' fullWidth />\n          <TextInput source='sub_category' label='Subkategorie' fullWidth />\n          <TextInput\n            source='interdisciplinary_context'\n            label='Interdisziplinäre Bezüge'\n            fullWidth\n          />\n        </FormTab>\n        <FormTab label='Eckdaten'>\n          <TextInput source='year' label='Jahr' fullWidth />\n          <TextInput source='art_type' label='Kunsttyp' fullWidth />\n          <TextInput source='creator' label='Ersteller' fullWidth />\n          <TextInput source='material' label='Material' fullWidth />\n          <TextInput\n            source='size_'\n            label='Größe'\n            formClassName={classes.inlineBlock}\n          />\n          <TextInput\n            source='location'\n            label='Ort'\n            formClassName={classes.inlineBlock}\n          />\n        </FormTab>\n        <FormTab label='Bildverknüpfungen'>\n          {/* <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n              <ImageInput source='picture' placeholder={<p>Klicke hier, um ein Bild von dem Exponat hinzuzufügen, oder das vorhandene Bild zu ändern</p>} fullWidth />\n            </ReferenceInput>  */}\n            {/* for user study */}\n            <ImageInput source='img' placeholder={<p>Klicke hier, um ein Bild von dem Exponat hinzuzufügen, oder das vorhandene Bild zu ändern</p>} fullWidth />\n        </FormTab>\n        <DeleteWithCustomConfirmButton\n          title={ 'Sind Sie sicher, dass Sie dieses Exponat löschen wollen?'}\n          content={DeleteConfirmContent}\n          label='Löschen'\n          cancel='Abbrechen'\n        />\n      </TabbedForm>\n    </Edit>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js",["216"],"import React from 'react';\nimport {\n  List,\n  SingleFieldList,\n  Datagrid,\n  EditButton,\n  //Shows\n  SimpleShowLayout,\n  Show,\n  //Fields\n  TextField,\n  ImageField,\n  ReferenceArrayField,\n} from 'react-admin';\nimport { FilterSidebar } from './ExponateFilterSidebar.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {CustomListActions} from '../CustomListActions.js';\nimport { CustomBulkActions } from '../CustomBulkActions.js';\n\nconst useStyles = makeStyles({\n  field: {\n    maxWidth: 1200,\n  },\n  rowCell: {\n    padding: '0px',\n  },\n});\n\n// change each second row to light blue\nconst postRowStyle = (record, index) => ({\n  backgroundColor: index % 2 ? 1 : '#e4edf8',\n});\n\n// edit expand component\nconst ImageShow = (props) => {\n  const classes = useStyles(props);\n  return (\n    <Show\n      {...props}\n      title=' ' /* disable the app title change when shown */\n      actions={false}\n    >\n      <SimpleShowLayout>\n        <TextField source='art_type' label='Kunsttyp' />\n        <TextField\n          source='interdisciplinary_context'\n          label='Interdisziplinäre Bezüge'\n        />\n        <TextField\n          source='description'\n          label='Beschreibung'\n          className={classes.field}\n        />\n        <TextField source='additionfal_inf' label='Weitere Informationen' />\n        <ImageField source='img' label='Bild' />\n        {/* add new table with images and reference them here*/}\n        <ReferenceArrayField\n          label='Bildverknüpfungen'\n          reference='Pictures'\n          source='picture.$oid'\n        >\n          <SingleFieldList>\n            <ImageField source='picture.$oid' />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <TextField source='year' label='Jahr' />\n        <TextField source='material' label='Material' />\n        <TextField source='size_' label='Größe' />\n        <TextField source='location' label='Ort' />\n      </SimpleShowLayout>\n    </Show>\n  );\n};\n\n// list the exhibits\nexport const ExponateList = (props) => {\n  const classes = useStyles(props);\n  return (\n    <List\n      {...props}\n      title='Exponate'\n      aside={<FilterSidebar />}\n      actions={<CustomListActions />}\n      bulkActionButtons={<CustomBulkActions />}\n    >\n      <Datagrid\n        rowClick='expand'\n        expand={<ImageShow />}\n        rowStyle={postRowStyle}\n      >\n        {/* todo: use ObjectID as primary key \n        instead of <TextField source='ID' /> */}\n        <TextField source='_id' label='ObjektID' />\n        <TextField source='title' label='Titel' />\n        <TextField source='creator' label='Ersteller' />\n        <TextField source='category' label='Kategorie' />\n        <TextField source='sub_category' label='Subkategorie' />\n        {/*TODO: remove direct fields after user study */}\n        <TextField source='img' label='Bild' />\n        {/* should be true if there is an linked picture \n        <ReferenceField\n          label='Bildverknüpfung'\n          source='picture.$oid'\n          reference='Pictures'\n        >\n          <BooleanField source='picture.$oid' />\n        </ReferenceField>*/}\n        <EditButton label='Editieren' />\n      </Datagrid>\n    </List>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js",["217","218","219"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SingleFieldList,\n  //options\n  EditButton,\n  Show,\n  SimpleShowLayout,\n  //fields\n  TextField,\n  DateField,\n  NumberField,\n  ChipField,\n  ArrayField,\n} from 'react-admin';\nimport {\n  QuestionField,\n  AnswerField,\n  MultipleChoiceQuestionField,\n  MultipleChoiceAnswerField,\n} from './Stationen';\nimport { FilterBar } from './TourenFilter';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CustomListActions } from '../CustomListActions.js';\nimport { CustomBulkActions } from '../CustomBulkActions.js';\n\n//edit expand component\n//TODO: get information about stations (from the video) and model them\nconst StationShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=''\n    actions={false}\n  >\n    <SimpleShowLayout>\n      <ArrayField source='Stationen'>\n        <Datagrid>\n          <QuestionField />\n        </Datagrid>\n      </ArrayField>\n    </SimpleShowLayout>\n  </Show>\n);\n\n// margin to divide filterBar from list\nconst useStyles = makeStyles({\n  main: {\n    marginTop: 20,\n  },\n});\n\n// change each second row to light blue\nconst postRowStyle = (record, index) => ({\n  backgroundColor: index % 2 ? 1 : '#e4edf8',\n});\n\n// list existing tours\nexport const TourenList = (props) => {\n  const classes = useStyles(props);\n  return (\n    <List\n      {...props}\n      title='Touren'\n      filters={<FilterBar />}\n      actions={<CustomListActions />}\n      bulkActionButtons={<CustomBulkActions />}\n      classes={{ main: classes.main }}\n    >\n      <Datagrid\n        rowClick='expand'\n        expand={<StationShow />}\n        rowStyle={postRowStyle}\n      >\n        {/* TODO: Whats the primaery key? replace Titel for pk or use built in  \n        dont show id for user study \n        <TextField source='_id' label='ID' />*/}\n        <TextField source='name' label='Titel' />\n        <TextField source='description' label='Beschreibung' />\n        {/* <ReferenceArrayField\n          label='Benutzer'\n          reference='Benutzer'\n          source='user.username'\n        >\n          <SingleFieldList>\n            <ChipField source='username' />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <ReferenceField source='owner' reference='Benutzer' label='Ersteller'>\n          <ChipField source='username' />\n        </ReferenceField> */}\n        {/* created fields for user study */}\n        <TextField source='owner.username' label='Ersteller' />\n        <ArrayField source='user' label='beteiligte Benutzer'>\n          <SingleFieldList>\n            <ChipField source='username' />\n          </SingleFieldList>\n        </ArrayField>\n        {/* end of created fields for user study */}\n        <TextField source='search_id' label='Touren Code' />\n        <TextField source='session_id' label='Passwort' />\n        <DateField\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberField source='difficulty' label='Schwierigkeitsgrad' />\n        <ChipField source='status' label='Status' />\n        <EditButton label='Editieren' />\n      </Datagrid>\n    </List>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js",["220"],"import React from 'react';\nimport {\n  Create,\n  SimpleForm,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //options\n  SimpleFormIterator,\n  //fields\n  TextField,\n  //inputs\n  SelectInput,\n  ImageInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  ReferenceInput,\n  NumberInput,\n  ArrayInput,\n  BooleanInput,\n  DateInput,\n  TextInput,\n} from 'react-admin';\n\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// create a new tour\n// todo: ID should not be created manually but automatically (distinct id)\nexport const TourenCreate = (props) => (\n    <Create title='Erstelle Touren' {...props}>\n      <SimpleForm warnWhenUnsavedChanges>\n        <TextInput disabled source='ID' label = 'ID' fullWidth/>\n        <TextInput source='name' label='Titel' fullWidth/>\n        <TextInput source='description' label='Beschreibung' fullWidth />\n        <ReferenceInput source='user' reference='Benutzer' label='Ersteller' fullWidth>\n          <SelectInput optionText='username' />\n        </ReferenceInput>\n        <ReferenceArrayInput source='user' reference='Benutzer' fullWidth>\n          <SelectArrayInput optionText='username' />\n        </ReferenceArrayInput>\n        <TextInput source='search_id' label='Touren Code' fullWidth/>\n        <TextInput source='session_id' label='Passwort' fullWidth/>\n        <DateInput\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberInput\n          source='difficulty'\n          label='Schwierigkeitsgrad'\n          validate={validateDifficulty}\n        />\n        <SelectInput\n          source='Status'\n          choices={[\n            { id: 'freigegeben', name: 'freigegeben' },\n            { id: 'ausstehend', name: 'ausstehend' },\n            { id: 'privat', name: 'privat' },\n          ]}\n        />\n        {/*  TODO: model the different stations and translate them into edit Inputs*/}\n        <ArrayInput source='Stationen'>\n          <SimpleFormIterator>\n            <TextField source='Objekt' />\n            <BooleanInput source='Foto' />\n            <BooleanInput source='Text' />\n            <BooleanInput source='Details' />\n            <TextInput source='Textfeld' />\n            <ArrayInput source='Fragen'>\n              <SimpleFormIterator>\n                <TextInput source='Antwort' />\n                <BooleanInput source='Antwort' fullWidth />\n              </SimpleFormIterator>\n            </ArrayInput>\n            <ImageInput source='Bild' fullWidth />\n          </SimpleFormIterator>\n        </ArrayInput>\n      </SimpleForm>\n    </Create>\n  );\n  ","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js",["221","222","223","224","225","226"],"import React from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  TabbedForm,\n  FormTab,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //fields\n  TextField,\n  //inputs\n  SelectInput,\n  ImageInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  ReferenceInput,\n  NumberInput,\n  ArrayInput,\n  DateInput,\n  TextInput,\n  Toolbar,\n  SimpleShowLayout,\n  // custom buttons\n  SaveButton,\n  EditButton\n} from 'react-admin';\nimport {\n  QuestionInput,\n  AnswerInput,\n  MultipleChoiceQuestionInput,\n  MultipleChoiceAnswerInput,\n} from './Stationen';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\nimport { QuestionField } from './Stationen.js';\n\nconst UserEditToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle =\n  'Sind Sie sicher, dass Sie diese Tour löschen wollen?';\n\nconst DeleteConfirmContent = (props) => {\n  return (\n    <SimpleShowLayout {...props}>\n      <TextField disabled source='ID' label='ID' fullWidth />\n      <TextField source='name' label='Titel' fullWidth />\n      <TextField source='description' label='Beschreibung' fullWidth />\n      <TextField source='search_id' label='Touren Code' fullWidth />\n    </SimpleShowLayout>\n  );\n};\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [\n  number(),\n  minValue(1, 'Bitte wähle eine Zahl zwischen 1 und 5'),\n  maxValue(5, 'Bitte wähle eine Zahl zwischen 1 und 5'),\n];\n\n// edit a tour\nexport const TourenEdit = (props) => (\n  <Edit title='Bearbeite Touren' {...props} successMessage=\"Die Änderungen wurden gespeichert\" >\n    <TabbedForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n      <FormTab label='Informationen'>\n        <TextInput disabled source='ID' label='ID' fullWidth />\n        <TextInput source='name' label='Titel' fullWidth />\n        <TextInput source='description' label='Beschreibung' fullWidth />\n        <ReferenceInput\n          disabled\n          source='user'\n          reference='Benutzer'\n          label='Ersteller'\n          fullWidth\n        >\n          <SelectInput optionText='username' />\n        </ReferenceInput>\n        <ReferenceArrayInput\n          disabled\n          source='user'\n          reference='Benutzer'\n          fullWidth\n        >\n          <SelectArrayInput optionText='username' />\n        </ReferenceArrayInput>\n        <TextInput source='search_id' label='Touren Code' fullWidth />\n        <TextInput source='session_id' label='Passwort' fullWidth />\n        <DateInput\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberInput\n          source='difficulty'\n          label='Schwierigkeitsgrad'\n          validate={validateDifficulty}\n        />\n        <SelectInput\n          source='Status'\n          choices={[\n            { id: 'freigegeben', name: 'freigegeben' },\n            { id: 'ausstehend', name: 'ausstehend' },\n            { id: 'privat', name: 'privat' },\n          ]}\n        />\n      </FormTab>\n      <FormTab label='Stationen'>\n      </FormTab>\n      <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}\n          content={DeleteConfirmContent}\n          label='Löschen'\n          cancel='Abbrechen'\n        />\n    </TabbedForm>\n  </Edit>\n);\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserList.js",["227"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SingleFieldList,\n  EditButton,\n  ChipField,\n  FunctionField,\n  BooleanField,\n  ReferenceManyField,\n} from 'react-admin';\n// material UI imports\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CustomListActions } from '../CustomListActions.js';\nimport { CustomBulkActions } from '../CustomBulkActions.js';\nimport { UserFilterBar } from './UserFilter';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst CustomerField = ({ record }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Avatar\n        className={classes.avatar}\n        record={record}\n        style={{ width: 25, height: 25 }}\n      />\n      {record.username}\n    </div>\n  );\n};\n\n// change each second row to light blue\nconst postRowStyle = (record, index) => ({\n  backgroundColor: index % 2 ? 1 : '#e4edf8',\n});\n\n// show eixsting users\nexport const UserList = (props) => (\n  <List\n    {...props}\n    title='Benutzer*innen'\n    filters={<UserFilterBar />}\n    actions={<CustomListActions />}\n    bulkActionButtons={<CustomBulkActions />}\n  >\n    <Datagrid rowStyle={postRowStyle}>\n      {/*  TODO: get real primary key of user ID (username?) \n      dont show id for user study\n      <TextField source='id' label='ID' /> */}\n      <CustomerField source='username' label='Benutzername' />\n      <FunctionField\n        source='password'\n        label='Passwort'\n        render={(record) => '********'}\n      />\n      <BooleanField\n        source='Adminrechte'\n        label='Adminrechte'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <ReferenceManyField\n        label='Erstellte Touren'\n        reference='Touren'\n        source='username'\n        target='owner.username'\n      >\n        <SingleFieldList>\n          <ChipField source='name' />\n        </SingleFieldList>\n      </ReferenceManyField>\n      <EditButton label=\"Editieren\"/>\n    </Datagrid>\n  </List>\n);\n\nconst optionRenderer = (choice) => `${choice.picture}`;\n\n// edit password with user rights first try\n/* export const AccountEdit = ({ permissions, ...props }) => (\n  <Edit title='Accountdaten ändern' {...props}>\n    <TabbedForm initialValues={{ role: 'user' }}>\n      <FormTab label='user.form.summary'>\n        {permissions === 'admin' && <TextInput disabled source='id' />}\n        <TextInput source='username' label='Username' validate={required()} />\n      </FormTab>\n      {permissions === 'admin' && (\n        <FormTab label='user.form.security'>\n          <TextInput source='email' label='Email' validate={required()} />\n          <PasswordInput\n            source='password'\n            label='Passwort'\n            validate={required()}\n          />\n          <BooleanInput\n            source='Adminrechte'\n            label='Adminrechte erlauben?'\n            validate={required()}\n          />\n        </FormTab>\n      )}\n    </TabbedForm>\n  </Edit>\n); */\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js",["228"],"import React from 'react';\nimport { Create, SimpleForm, TextInput, SelectInput, ReferenceInput } from 'react-admin';\n\nconst randomChoice = [{ code: Math.random().toString(36).substr(2, 5) }];\n\nexport const CodeCreate = (props) => {\n  return (\n    <Create {...props}>\n      <SimpleForm>\n        <SelectInput\n          source='code'\n          label='Code'\n          choices={randomChoice}\n          optionText='code'\n          optionValue='code'\n        />\n        <ReferenceInput label='Benutzer' source='username' reference='Benutzer'>\n          <SelectInput optionText='username' />\n        </ReferenceInput>\n      </SimpleForm>\n    </Create>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/TourenFeedback.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js",["229"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  ImageField,\n  NumberField,\n  EditButton,\n  SimpleShowLayout,\n  Show,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CustomListActions } from '../CustomListActions.js';\nimport { CustomBulkActions } from '../CustomBulkActions.js';\n\nconst useStyles = makeStyles({\n  card: {\n    backgroundColor: '#e4edf8', // background color of container\n  },\n  imgContainer: {\n    '& img': {\n      height: 50,\n      width: 50,\n      objectFit: 'contain',\n    },\n  },\n});\n\n// edit expand component\n/* TODO: Link to actual picture table to display connectes profile pictures \n      show as a list, if there is more than one profile picture for one badge? */\nconst ImageShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n    actions={false}\n  >\n    <SimpleShowLayout>\n      <ImageField\n        source='unlocked_picture'\n        label='freigeschaltete Profilbilder'\n      />\n      {/*viljas change*/}\n      {/*<ImageField source='picture.url' label='Bild' />\n      <UrlField source='picture.url' label='Url' />\n       TODO: Link to actual picture table to display connectes profile pictures \n      show as a list, if there is more than one profile picture for one badge?\n      <ReferenceField\n        label='freigeschaltete Profilbilder'\n        source='unlocked_picture'\n        reference='Profilbild'\n      >\n        <ImageField source='unlocked_picture.url' />\n      </ReferenceField>\n      <ImageField label='freigeschaltetes Bild' source='unlocked_picture.url'/>\n    <UrlField source='unlocked_picture.url' label='Url' />*/}\n    </SimpleShowLayout>\n  </Show>\n);\n\n// list existing badges\nexport const AbzeichenList = (props) => {\n  const classes = useStyles();\n  return (\n    <List\n      {...props}\n      title='Abzeichen'\n      actions={<CustomListActions />}\n      bulkActionButtons={<CustomBulkActions />}\n    >\n      <Datagrid expand={<ImageShow />} rowClick='expand'>\n        <TextField source='id' label='ID' />\n        <TextField source='name' label='Name' />\n        <ImageField\n          className={classes.imgContainer}\n          source='picture'\n          label='Bild'\n        />\n        <NumberField source='cost' label='Kosten' />\n        <EditButton label='Editieren' />\n      </Datagrid>\n    </List>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/LoginPage.js",["230","231","232","233","234","235"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Field, Form } from 'react-final-form';\nimport { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { useLogin } from 'react-admin';\n\n// site components\nimport authProvider from \"./authProvider\";\nimport './LoginPage.css';\n\nconst FakeLogin = (props) => {\n  const login = useLogin();\n  const handleSubmit = auth => {\n    login(auth);\n  };\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <div className='App'>\n            <header className='App-header'>\n              <div className='Login'>\n                <Button>\n                  <LockIcon color='primary' fontSize='large' />\n                </Button>\n                <Field\n                  variant='standard'\n                  label='Benutzername'\n                  margin='normal'\n                />\n                <Field\n                  variant='standard'\n                  label='Passwort'\n                  margin='normal'\n                  type='password'\n                />\n\n                <div className='Button'>\n                  <Button\n                    variant='contained'\n                    type='submit'\n                    color='primary'\n                    onClick={() => {}}\n                  >\n                    ANMELDEN\n                  </Button>\n                </div>\n              </div>\n            </header>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n      open: false,\n    };\n  }\n\n  setUsername = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  setPassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <div className='Login'>\n            <Button>\n              <LockIcon color='primary' fontSize='large' />\n            </Button>\n            <TextField\n              variant='standard'\n              label='Benutzername'\n              margin='normal'\n              onChange={this.setUsername}\n              value={this.state.username}\n            />\n            <TextField\n              variant='standard'\n              label='Passwort'\n              margin='normal'\n              type='password'\n              onChange={this.setPassword}\n              value={this.state.password}\n            />\n\n            <div className='Button'>\n              \n              <Button variant='contained' color='primary' onClick={() => {}}>\n                ANMELDEN\n              </Button>\n             \n            </div>\n          </div>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n          >\n            <DialogTitle id='alert-dialog-title'></DialogTitle>\n            <DialogContent>\n              <DialogContentText id='alert-dialog-description'>\n                {this.state.message}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color='primary'> \n                Okay\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Login;","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Login/authProvider.js",["236"],"/**\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\n\nexport default (type, params) => {\n    // called when the user attempts to log in\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        if (username === 'login' && password === 'password') {\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n        }\n    }\n    // called when the user clicks on the logout button\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    // called when the API returns an error\n    if (type === AUTH_ERROR) {\n        const { status } = params;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n    // called when the user navigates to a new location\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unknown method');\n};\n*/\n\nexport default {\n  login: ({ username, password }) => {\n      if (username === 'admin' && password === 'password') {\n          localStorage.removeItem('not_authenticated');\n          localStorage.setItem('role', 'admin');\n          localStorage.setItem('login', username);\n          localStorage.setItem('user', username);\n          return Promise.resolve();\n      }\n      if (username === 'user' && password === 'password') {\n          localStorage.setItem('role', 'user');\n          localStorage.removeItem('not_authenticated');\n          localStorage.setItem('login', username);\n          localStorage.setItem('user', username);\n          return Promise.resolve();\n      }\n      if (username === 'Simone' && password === 'password') {\n          localStorage.setItem('role', 'admin');\n          localStorage.removeItem('not_authenticated');\n          localStorage.setItem('login', username);\n          localStorage.setItem('user', username);\n          return Promise.resolve();\n      }\n      localStorage.setItem('not_authenticated', true);\n      return Promise.reject();\n  },\n  logout: () => {\n      localStorage.setItem('not_authenticated', true);\n      localStorage.removeItem('role');\n      localStorage.removeItem('login');\n      localStorage.removeItem('user');\n      return Promise.resolve();\n  },\n  checkError: ({ status }) => {\n      return status === 401 || status === 403\n          ? Promise.reject()\n          : Promise.resolve();\n  },\n  checkAuth: () => {\n      return localStorage.getItem('not_authenticated')\n          ? Promise.reject()\n          : Promise.resolve();\n  },\n  getPermissions: () => {\n      const role = localStorage.getItem('role');\n      return Promise.resolve(role);\n  },\n  getIdentity: () => {\n      return {\n          id: localStorage.getItem('login'),\n          fullName: localStorage.getItem('user'),\n      };\n  },\n};","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/fakeDataProvider.js",["237","238","239","240","241"],"import fakeDataProvider from 'ra-data-fakerest';\n\n// images for user study\n//objetcs\nimport goldfibel from './fake_data/pictures/38-image0.jpg';\nimport ortenberger from './fake_data/pictures/127-image0.jpg';\nimport morgensonne from './fake_data/pictures/163-image0.jpg';\nimport gestade from './fake_data/pictures/161-image0.jpg';\n//badges\nimport tour_silver from './fake_data/badges/Erstellte_Rundgaenge_silber.jpg';\nimport object_bronze from './fake_data/badges/Betrachtete_Artefakte_bronze.jpg';\n//profile pictures\nimport joseph from './fake_data/profilepictures/free/Joseph.jpg';\nimport iphigenie from './fake_data/profilepictures/free/Iphigenie.jpg';\nimport reward_tour_silver from './fake_data/profilepictures/locked/Erstellte_Rundgaenge_silber.jpg';\nimport reward_object_bronze from './fake_data/profilepictures/locked/Betrachtete_Artefakte_bronze.jpg';\n\n// fake data base for testing\nconst dataProvider = fakeDataProvider({\n  Exponate: [\n    {\n      _id: 'Kg 31:21',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Archäologie/Vor- und Frühgeschichte',\n      title: 'Goldfibel von Mölsheim',\n      // inserted img for user study\n      img: goldfibel,\n      picture: [\n        {\n          $oid: '5ff98892ccd2776f571d6c1a',\n        },\n      ],\n      description:\n        'Stilistisch datieren vor allem die Goldfiligranarbeiten in den Flächen der Vierpassform die Prunkfibel in die Zeit um 630/640–680 n. Chr. und legen eine Herstellung im westfränkischen Raum (Burgund?) nahe. Der zentral angebrachte Kameo – ein erhaben geschnittener Achat in Form eines Gorgonenhauptes – wurde von dem Goldschmiedemeister sicherlich in dem Wissen, dass es sich hierbei um ein antikes Kleinod aus hellenistischer Zeit handelte, wiederverwendet. Heute scheint es sehr wahrscheinlich, dass er aus derselben alexandrinischen Steinschneidewerkstatt stammt, aus der als bestes Vergleichsstück die bekannte Tazza Farnese, heute im Museo Archeologico Nationale in Neapel, mit einem ebenso ausgezeichnet geschnittenen Kameo hervorgegangen ist. (A. Z.)',\n      additional_information:\n        'Ein Landwirt fand die heute weltweit bekannte Filigranscheibenfibel im Jahr 1930 beim Anlegen eines Weinbergs ohne Grabkontext und damit ohne Hinweis darauf, welche adelige Frau sie getragen, geschweige denn, wo und von wem sie hergestellt wurde. Motiviert durch den sensationellen Fund unternahm das Hessische Landesmuseum Darmstadt in den Jahren 1931 und 1935 Grabungen, die einen frühmittelalterlichen Reihengräberfriedhof zutage brachten.',\n      interdisciplinary_context: 'Themen: Kunsthandwerk',\n      year: 'Fibel: um 630/40–680, Kameo:\\nspätes\\n2. Jahrhundert v. Chr.',\n      art_type: 'Kunsthandwerk; Fibel',\n      creator: 'unbekannt',\n      material:\n        'Fibel: Gold, Bronze, Perlen, Glas- und Edelsteine; \\nKameo: Achat',\n      size_: 'Durchmesser: 8,3 cm',\n      location: 'Fundort: Landkreis Alzey-Worms',\n    },\n    {\n      _id: 'Kg 42:67',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Gotik',\n      title: 'Ortenberger Altar - Heilige Sippe',\n      img: ortenberger,\n      picture: [\n        {\n          $oid: '5ff95692dcf3447f57146c1s',\n        },\n      ],\n      description: 'Tafelmalerei auf Tannenholz, mit Blattgold',\n      additional_information: '',\n      interdisciplinary_context: 'Themen: Kunsthandwerk',\n      year: 'um 1430',\n      art_type: 'Gemälde',\n      creator: 'Meister des Ortenberger Altars',\n      material: 'Tannenholz, Leinwand, Tempera, Blattgold',\n      size_: '100,5 cm x 162,5 cm',\n      location: 'Ortenberg',\n    },\n    {\n      _id: 'Kg 2:95',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Expressionsimus',\n      title: 'Morgensonne',\n      img: morgensonne,\n      picture: [\n        {\n          $oid: '5ffe569ssd2dcf3447f5714561s',\n        },\n      ],\n      description: 'Gemälde',\n      additional_information: 'Öl auf Leinwand',\n      interdisciplinary_context: 'Themen: Gemälde',\n      year: '1910',\n      art_type: 'Gemälde',\n      creator: 'Lovis Corinth',\n      material: 'Öl, Leinwand',\n      size_: '68,5 cm x 80,5 cm',\n      location: 'Ortenberg',\n    },\n    {\n      _id: 'Kg 34:12',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Realismus',\n      title: 'Abendstimmung in der Campagna',\n      img: null,\n      picture: [\n        {\n          $oid: '5ffe569ssfesrsd447f5714561s',\n        },\n      ],\n      description: 'Gemälde',\n      additional_information: 'Öl auf Leinwand',\n      interdisciplinary_context: 'Themen: Gemälde',\n      year: '1850',\n      art_type: 'Gemälde',\n      creator: 'Oswald Achenbach',\n      material: 'Öl, Leinwand',\n      size_: '98 cm x 134 cm',\n      location: 'Düsseldorf',\n    },\n    {\n      _id: 'Kg 8:27',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Symbolismus',\n      title: 'Gestade der Vergessenheit',\n      img: gestade,\n      picture: [\n        {\n          $oid: '8sd95564dcf3675f57146gaw',\n        },\n      ],\n      description:\n        'Gestade der Vergessenheit (meist mit Artikel „Das…“, seltener „Die…“) ist ein Gemälde von Eugen Bracht. Zwischen 1889 und 1916 entstanden acht Fassungen. Von diesen sind mindestens zwei museal erhalten und werden permanent ausgestellt. Neben Arnold Böcklins Toteninsel gilt es als eines der bekanntesten Werke des Symbolismus.',\n      additional_information: 'Urversion',\n      interdisciplinary_context: 'Themen: Gemälde',\n      year: '1889',\n      art_type: 'Gemälde',\n      creator: 'Eugen Bracht',\n      material: 'Öl, Leinwand',\n      size_: '139 cm x 257 cm',\n      location: 'Hessen',\n    },\n  ],\n  Touren: [\n    {\n      _id: 0,\n      name: 'Tour1',\n      name: 'Amphibien Tour',\n      search_id: 'xxxxx',\n      description: 'This is such an awesome tour',\n      description:\n        'Die Tour führt entlang der interessanter Exponate rund um Amphibien.',\n      session_id: 420,\n      owner: {\n        username: 'Anna',\n      },\n      user: [\n        {\n          username: 'Vilja',\n          username: 'Tom',\n        },\n        {\n          username: 'Cosima',\n          username: 'Lena',\n        },\n      ],\n      difficulty: 5,\n      status: 'privat',\n      lastEdit: '2020-01-01',\n      lastEdit: '2021-01-01',\n    },\n    {\n      _id: {\n        $oid: '600024333c67891h7831f659',\n      },\n      name: 'Zoologie Tour - Australien',\n      search_id: 'xxxxx',\n      description:\n        'Die Tiere aus Down Under lassen sich in dieser Tour bestaunen.',\n      session_id: 435,\n      owner: {\n        username: 'Lena',\n      },\n      user: [\n        {\n          username: 'Lukas',\n        },\n        {\n          username: 'Franziska',\n        },\n        {\n          username: 'Tom',\n        },\n      ],\n      difficulty: 2,\n      status: 'freigegeben',\n      lastEdit: '2020-10-11',\n    },\n    {\n      _id: {\n        $oid: '660024555c67891l6731f789',\n      },\n      name: 'Urpferd 2.0',\n      search_id: 'xxxxx',\n      description:\n        'Diese Tour dreht sich um das »Wappentier« der Grube Messel, das Messeler Urpferd ',\n      session_id: 375,\n      owner: {\n        username: 'Frank',\n      },\n      user: [\n        {\n          username: 'Lukas',\n        },\n        {\n          username: 'Franziska',\n        },\n        {\n          username: 'Tobias',\n        },\n      ],\n      difficulty: 4,\n      status: 'ausstehend',\n      lastEdit: '2020-08-18',\n    },\n  ],\n  Benutzer: [\n    {\n      username: 'Frank',\n      password: 'passwort',\n      Adminrechte: true,\n    },\n    {\n      username: 'Sabine',\n      password: 'MyPassword',\n      Adminrechte: false,\n    },\n    {\n      username: 'Simone',\n      password: 'hallo',\n      Adminrechte: false,\n    },\n    {\n      username: 'Carlo',\n      password: 'meinPasswort',\n      Adminrechte: false,\n    },\n    {\n      username: 'Tobias',\n      password: '4567',\n      Adminrechte: false,\n    },\n    {\n      username: 'Markus',\n      password: 'hihi',\n      Adminrechte: false,\n    },\n    {\n      username: 'Andreas',\n      password: 'hallsao',\n      Adminrechte: false,\n    },\n    {\n      username: 'Lena',\n      password: 'geschichte',\n      Adminrechte: false,\n    },\n  ],\n\n  Abzeichen: [\n    {\n      _id: 'Erstellte_Rundgaenge_silber',\n      name: 'Erstellte Rundgaenge silber',\n      picture: tour_silver,\n      unlocked_picture: reward_tour_silver,\n      /*  picture: {\n        $oid: '5ff98919cdd36137740fc368',\n      },       \n      unlocked_picture: {\n        $oid: '5ff98919cdd36137740fc367',\n      },*/\n      cost: 10,\n    },\n    {\n      _id: 'Betrachtete_Artefakte_bronze',\n      name: 'Betrachtete Artefakte bronze',\n      picture: object_bronze,\n      unlocked_picture: reward_object_bronze,\n      /*  picture: {\n        $oid: '5ff98919cdd36137740fc36d',\n      },\n      unlocked_picture: {\n        $oid: '5ff98919cdd36137740fc36c',\n      }, */\n      cost: 3,\n    },\n  ],\n  /* ProfilePicture: [\n    {\n      _id: {\n        $oid: '5ff9889f4028d9e0ea9cc52d',\n      },\n      picture: {\n        $oid: '5ff9889f4028d9e0ea9cc52a',\n      },\n      locked: false,\n    },\n  ], */\n  // only for testing\n  ProfilePicture: [\n    {\n      picture: iphigenie,\n      locked: false,\n    },\n    {\n      picture: joseph,\n      locked: false,\n    },\n    {\n      picture: reward_object_bronze,\n      locked: true,\n    },\n    {\n      picture: reward_tour_silver,\n      locked: true,\n    },\n  ],\n  Pictures: [\n    {\n      $oid: '5ff98892ccd2776f571d6c1a',\n      picture: goldfibel,\n    },\n    {\n      $oid: '5ff95692dcf3447f57146c1s',\n      picture: ortenberger,\n    },\n    {\n      $oid: '5ffe569ssd2dcf3447f5714561s',\n      picture: morgensonne,\n    },\n    {\n      $oid: '8sd95564dcf3675f57146gaw',\n      picture: gestade,\n    },\n  ],\n  Codes: [\n    {\n      code: 'abh5k',\n      username: 4,\n    },\n  ],\n  Feedback: [\n    {\n      _id: 0,\n      tour: {\n        $oid: 0,\n      },\n      rating: 8,\n      review:\n        'Mir hat diese Tour sehr gut gefallen! Ich würde sie besonders Leuten mit Kindern weiterempfehlen, da die Inhalte spielerisch vermittelt werden',\n    },\n    {\n      _id: 1,\n      tour: {\n        $oid: '600024333c43791d7831f306',\n      },\n      rating: 6,\n      review:\n        'Die Tour war an sich ganz okay, für einen kurzen Museumsbesuch dauert sie allerdings etwas zu lange. Wenn man also nur einen kurzen Besuch geplant hat, sollte man vielleicht eine andere Tour wählen',\n    },\n  ],\n});\nexport default dataProvider;\n",["242","243"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js",["244","245","246"],"\nimport React from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  PasswordInput,\n  TextInput,\n  BooleanInput,\n  SimpleShowLayout,\n  TextField,\n  BooleanField,\n  ReferenceInput,\n  SelectInput,\n  Toolbar,\n  SaveButton\n} from 'react-admin';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle = 'Sind Sie sicher, dass Sie diesen Account löschen wollen?';\n\nconst DeleteConfirmContent = props => {\n  return (\n    <SimpleShowLayout {...props} >\n      <TextField source='id' label='ID' />\n      <TextField source='username' label='Benutzername' />\n      <BooleanField source='Adminrechte' label='Adminrechte' />\n    </SimpleShowLayout>\n  );\n};\n\n// TODO: edit password should be restricted to users with admin status \nexport const AccountEdit = (props) => (\n    <Edit title='Accountdaten ändern' {...props}>\n      <SimpleForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n        <TextInput disabled source='id' label='ID' fullWidth />\n        <TextInput source='username' label='Benutzername' fullWidth/>\n        <PasswordInput source='password' label='Passwort' fullWidth/>\n        <BooleanInput source='Adminrechte' label='Adminrechte erlauben?' />\n        <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}      \n          content={DeleteConfirmContent}  \n          label='Löschen'                 \n          cancel='Abbrechen'                 \n        />\n      </SimpleForm>\n    </Edit>\n  );\n  \n  ","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["247"],"import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'react-admin';\n//material UI imports\nimport Card from '@material-ui/core/Card';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport badges from '../data/images/Badges.png';\nimport exponate from '../data/images/Exponate.png';\nimport tours from '../data/images/Tours.png';\nimport user from '../data/images/User.png';\n\n// style for the cards\nconst useCardStyles = makeStyles(() => ({\n  card: {\n    maxWidth: '100%',\n    margin: 'auto',\n    transition: '0.3s',\n    color: '#000',\n    backgroundColor: 'transparent',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    marginLeft: '50%',\n    margin: 'auto',\n    display: 'flex',\n    objectFit: 'contain',\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    textAlign: 'left',\n  },\n  heading: {\n    fontWeight: 'bold',\n  },\n  subheading: {\n    lineHeight: 1.8,\n  },\n  root: {\n    minWidth: '90%',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n// style for the grid\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\n  gridContainer: {\n    maxWidth: '100%',\n    margin: 'auto',\n    position: 'relative',\n  },\n}));\n\n// card components for different links\nconst CustomCard = ({ classes, image, title, subtitle, path }) => {\n  const cardStyles = useCardStyles();\n  return (\n    <Card className={classes.card}>\n      <div className={classes.con}>\n        <CardContent className={classes.content}>\n          <div\n            style={{\n              position: 'relative',\n            }}\n          >\n            <CardMedia className={classes.media} image={image} />\n            <div\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n              }}\n            >\n              <Typography\n                className={classes.title}\n                variant={'h4'}\n                component={'h4'}\n              >\n                {title}\n              </Typography>\n              <Typography className={classes.subtitle}>{subtitle}</Typography>\n              <CardActions>\n                <Link to={path}>\n                  <Button  color='secondary' variant='contained' renderAs='button'>\n                    Klicke hier\n                  </Button>\n                </Link>\n              </CardActions>\n            </div>\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\n//Copyright\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link to='/' color='inherit'>\n        Projekt Geschichte vernetzt\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n// place the card on a grid\nexport default function Dashboard() {\n  const cardStyles = useCardStyles();\n  const gridStyles = useGridStyles();\n\n  return (\n    <Container>\n      <Grid\n        container\n        spacing={0}\n        className={gridStyles.gridContainer}\n        justify='center'\n      >\n        <Title title='Geschichte vernetzt - Vergangenes interdisziplinär erforschen und vermitteln | TU Darmstadt' />\n        <Grid item md>\n          <CustomCard\n            classes={cardStyles}\n            title={'Benutzer*innen'}\n            subtitle={'Verwalte Benutzer*innen'}\n            image={user}\n            path='/Benutzer'\n          />\n          <CustomCard\n            classes={cardStyles}\n            title={'Touren'}\n            subtitle={'Erstelle Touren'}\n            image={tours}\n            path='/Touren'\n          />\n        </Grid>\n        <Grid item md>\n          <CustomCard\n            classes={cardStyles}\n            title={'Exponate'}\n            subtitle={'Bearbeite Exponate'}\n            image={exponate}\n            path='/Exponate'\n          />\n          <CustomCard\n            classes={cardStyles}\n            title={'Bildverknüpfungen'}\n            subtitle={'Füge neue Bildverknüpfungen hinzu'}\n            image={badges}\n            path='/Abzeichen'\n          />\n        </Grid>\n      </Grid>\n      <Copyright />\n    </Container>\n  );\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/CustomListActions.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/CustomBulkActions.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/MyProfile/Profile.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Faq/Faq.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate/ExponateFilterSidebar.js",["248","249","250","251"],"import React from 'react';\nimport {\n  useListContext,\n  FilterList,\n  FilterListItem,\n  FilterLiveSearch,\n} from 'react-admin';\n// material UI styling\nimport { Card as MuiCard, CardContent, withStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n//icons\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ClassIcon from '@material-ui/icons/Class';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SchoolIcon from '@material-ui/icons/School';\n\n// filter sidebar styling\nconst Card = withStyles((theme) => ({\n    root: {\n      [theme.breakpoints.up('sm')]: {\n        order: -1, // display on the left rather than on the right of the list\n        width: '15em',\n        minWidth: 250,\n        marginRight: '1em',\n      },\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n  }))(MuiCard);\n  \n\n  // check if picture object is not empty (create boolean)\n  const HasImageFilter = () => (\n    <FilterList label='Bildverknüpfung' icon={<ImageSearchIcon />}>\n      <FilterListItem label='vorhanden' value={{ img: true }} />\n      <FilterListItem label='nicht vorhanden' value={{ img: null }} />\n    </FilterList>\n  );\n  \n  const MapSubCategoryFilter = () => {\n    const { ids, data } = useListContext();\n    return (\n      <FilterList label='Subkategorie' icon={<ClassIcon />}>\n        {ids.map((id) => (\n          <FilterListItem\n            label={data[id].sub_category}\n            key={data[id]._id}\n            value={{ groups: data[id]._id }}\n          />\n        ))}\n      </FilterList>\n    );\n  };\n  \n  const MapCreatorFilter = () => {\n    const { ids, data } = useListContext();\n    return (\n      <FilterList label='Ersteller' icon={<PersonIcon />}>\n        {ids.map((id) => (\n          <FilterListItem\n            label={data[id].creator}\n            key={data[id]._id}\n            value={{ groups: data[id]._id }}\n          />\n        ))}\n      </FilterList>\n    );\n  };\n  \n  const MapContextFilter = () => {\n    const { ids, data } = useListContext();\n    return (\n      <FilterList label='Interdisziplinäre Bezüge' icon={<SchoolIcon />}>\n        {ids\n          .map((id) => (\n            <FilterListItem\n              label={data[id].interdisciplinary_context.split('Themen:')}\n              value={data[id]._id}\n            />\n          ))\n          .filter((a, b) => ids.indexOf(a) === b)}\n      </FilterList>\n    );\n  };\n  \n  // sidebar functionality\n  export const FilterSidebar = () => {\n    return (\n      <Card>\n        <CardContent>\n          <FilterLiveSearch />\n          <Typography variant='subtitle1' color='error' gutterBottom>\n            Entwurf: Bitte klicke auf keine von den unteren Kategorien\n          </Typography>\n          <HasImageFilter />\n          <MapSubCategoryFilter />\n          <MapCreatorFilter />\n        </CardContent>\n      </Card>\n    );\n  };","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/TourenFilter.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/Stationen.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Profilbilder/ProfilePictureGrid.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren/FeedbackGrid.js",["252"],"import React from 'react';\nimport {\n  TextField,\n  ReferenceField,\n  RichTextField,\n  NumberField,\n  useListContext,\n  EditButton,\n} from 'react-admin';\nimport { linkToRecord } from 'ra-core';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardHeader, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/icons/Stars';\n\nconst useStyles = makeStyles({\n  div: {\n    margin: '1em', // spacing between cards\n  },\n  // card styles\n  card: {\n    width: 300,\n    height: 350,\n    margin: '0.5em',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    textDecoration: 'none',\n  },\n  actions: {\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n  },\n\n  // styling for custom star field\n  icon: {\n    opacity: 0.87,\n    width: 20,\n    height: 20,\n  },\n});\n\nconst StarRatingField = ({ record }) => {\n  const classes = useStyles();\n  return (\n    <span>\n      {Array(record.rating)\n        .fill(true)\n        .map((_, i) => (\n          <Icon key={i} className={classes.icon} />\n        ))}\n    </span>\n  );\n};\n\nexport const FeedbackGrid = () => {\n  const { ids, data, basePath } = useListContext();\n  const classes = useStyles();\n  return (\n    <div className={classes.div}>\n      {ids.map((id) => (\n        <Card key={id} className={classes.card}>\n          <CardHeader\n            title={\n              <ReferenceField\n                source='tour.$oid'\n                reference='Touren'\n                label='Tourname'\n              >\n                <TextField source='name' />\n              </ReferenceField>\n            }\n            title='Tour Referenz'\n          />\n          <CardContent>\n            Bewertung:&nbsp;\n            <NumberField record={data[id]} source='rating' label='Bewertung' />\n            /10 <br />\n            <StarRatingField\n              record={data[id]}\n              source='rating'\n              label='Bewertung'\n            />\n          </CardContent>\n          {/* <CardContent>\n              TestRef:&nbsp;\n              <ReferenceField record={data[id]} source='tour.$oid' reference='Touren' label='Tourname'>\n                  <TextField source='name' />\n                </ReferenceField> \n            </CardContent> */}\n          <CardContent>\n            Feedback:&nbsp;\n            <RichTextField\n              record={data[id]}\n              source='review'\n              label='Rezension'\n            />\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <EditButton\n              label = 'Editieren'\n              to={linkToRecord(basePath, data[id].id)}\n              component={Link}\n              variant='outlined'\n              color='primary'\n            />\n          </CardActions>\n        </Card>\n      ))}\n    </div>\n  );\n};\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User/UserFilter.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/customGraphQLProvider.js",["253","254","255"],"import pluralize from 'pluralize';\nimport buildGraphQLProvider from 'ra-data-graphql-simple';\nimport {\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  DELETE,\n} from 'ra-core';\nimport { setContext } from '@apollo/client/link/context';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\n// custom queryBuilder\nimport { customBuildQuery } from './customQueryBuilder.js';\n// imports for setting up additional rest provider\nimport { RestLink } from 'apollo-link-rest';\nimport simpleRestProvider from 'ra-data-simple-rest';\n\n// documentation: https://www.howtographql.com/react-apollo/5-authentication/\n// TODO: set auth token in login\n\nconst API_ENDPOINT = 'http://127.0.0.1:5000/web';\nconst httpLink = new HttpLink({ uri: API_ENDPOINT });\n\n// initialize Bearer token authentification method\nconst authLink = setContext((_, { headers }) => {\n  // get created jwt token in local storage\n  const token = localStorage.getItem('token');\n  //const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNjE1NjM1ODYwLCJuYmYiOjE2MTU2MzU4NjAsImp0aSI6ImE0MzQwZGQ4LTJkZGMtNDQ2OC04NmQ2LWZmNTc4ZWJkNTg4OSIsImlkZW50aXR5IjoicCIsImV4cCI6MTYxNTYzNjc2MCwidXNlcl9jbGFpbXMiOnsiYWRtaW4iOnRydWV9fQ.Vqa4CtVFW5HRpsLmC41Ra77D6TKMGpeHLbpwk61425s';\n  return {\n    // set Authorization http headers\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\n// create a new Apollo Client\nconst gqlClient = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport default buildGraphQLProvider({\n  client: gqlClient,\n  // fit the introspection to the existing API naming scheme\n  introspection: {\n    operationNames: {\n      [GET_LIST]: (resource) => `all${pluralize(resource.name).capitalize()}`,\n      [GET_ONE]: (resource) => `${resource.name}`,\n      [GET_MANY]: (resource) => `all${pluralize(resource.name).capitalize()}`,\n      [GET_MANY_REFERENCE]: (resource) =>\n        `all${pluralize(resource.name).capitalize()}`,\n      [CREATE]: (resource) => `create${resource.name.capitalize()}`,\n      [UPDATE]: (resource) => `update${resource.name.capitalize()}`,\n      [DELETE]: (resource) => `delete${resource.name.capitalize()}`,\n    },\n  },\n  //add custom build query scheme\n  //buildQuery: customBuildQuery,\n});\n\n// import { useQuery, gql } from '@apollo/client';\n// const { data } = useQuery(FEED_QUERY);\n\n// setup for using multiple providers\n/* export const restClient = new ApolloClient({\n    link: new RestLink({ uri: LOCAL_REST_ENDPOINT }),\n    cache: new InMemoryCache()\n  });\n */\n\n/*   const LOCAL_REST_ENDPOINT = 'http://127.0.0.1:5000/file';\n  export const RestProvider = simpleRestProvider(LOCAL_REST_ENDPOINT); */\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/customQueryBuilder.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/refreshAuth.js",["256","257"],"import decodeJwt from 'jwt-decode';\nimport {AUTH} from './testmethods/testQueries.js';\n\n// authetification with jwt token \nexport default {\n    login: ({ username, password }) => {\n        const request = new Request('http://127.0.0.1:5000/web', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                const decodedToken = decodeJwt(token);\n                localStorage.setItem('token', token);\n                localStorage.setItem('permissions', decodedToken.permissions);\n            });\n    },\n    checkError: (error) => { /* ... */ },\n    checkAuth: () => {\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    },\n    logout: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('permissions');\n        return Promise.resolve();\n    },\n    getIdentity: () => { /* ... */ },\n    getPermissions: () => {\n        const role = localStorage.getItem('permissions');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n};","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/data/testmethods/testQueries.js",["258","259"],"import { gql, useQuery, useMutation } from '@apollo/client';\n\nexport const SIGNUP = gql`\n  mutation createAdmin($username: String!, $password: String!) {\n    createAdmin(username: $username, password: $password) {\n        user {\n          username\n        }\n        ok\n    }\n  }\n`;\n\nexport const AUTH = gql`\n  mutation auth($username: String!, $password: String!) {\n    auth(username: $username, password: $password) {\n        accessToken\n    }\n  }\n`;\n\nexport const REFRESH = gql`\n  mutation refresh($refreshToken: String!) {\n    refresh(refreshToken: $refreshToken) {\n        id\n        newToken \n    }\n  }\n`;\n\nexport const GET_ALL_OBJECTS = gql`\n  mutation allObjects($token: String!) {\n    allObjects(token: $token) {\n        object_id\n        category\n        sub_category\n        title\n        time_range\n        year\n        picture {\n          id\n        }\n        art_type\n        creator\n        material\n        size_\n        location\n        description\n        additionalInformation\n        interdisciplinaryContext\n    }\n  }\n`;\n\n// get object by id \nexport const GET_OBJECT = gql`\n  mutation museumobject($token: String!, $objectId: String!) {\n    museumObject(token: $token, objectId: $objectId) {\n        object_id\n        category\n        sub_category\n        title\n        time_range\n        year\n        picture {\n          id\n        }\n        art_type\n        creator\n        material\n        size_\n        location\n        description\n        additionalInformation\n        interdisciplinaryContext\n    }\n  }\n`;",{"ruleId":"260","severity":1,"message":"261","line":7,"column":27,"nodeType":"262","messageId":"263","endLine":7,"endColumn":33},{"ruleId":"260","severity":1,"message":"264","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":19},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"260","severity":1,"message":"269","line":36,"column":8,"nodeType":"262","messageId":"263","endLine":36,"endColumn":17},{"ruleId":"260","severity":1,"message":"270","line":52,"column":8,"nodeType":"262","messageId":"263","endLine":52,"endColumn":19},{"ruleId":"260","severity":1,"message":"271","line":53,"column":8,"nodeType":"262","messageId":"263","endLine":53,"endColumn":16},{"ruleId":"272","severity":1,"message":"273","line":6,"column":1,"nodeType":"274","endLine":19,"endColumn":3},{"ruleId":"275","severity":1,"message":"276","line":68,"column":11,"nodeType":"277","endLine":68,"endColumn":53},{"ruleId":"275","severity":1,"message":"276","line":69,"column":11,"nodeType":"277","endLine":69,"endColumn":55},{"ruleId":"260","severity":1,"message":"278","line":7,"column":7,"nodeType":"262","messageId":"263","endLine":7,"endColumn":19},{"ruleId":"260","severity":1,"message":"279","line":13,"column":3,"nodeType":"262","messageId":"263","endLine":13,"endColumn":17},{"ruleId":"260","severity":1,"message":"280","line":14,"column":3,"nodeType":"262","messageId":"263","endLine":14,"endColumn":14},{"ruleId":"260","severity":1,"message":"281","line":77,"column":9,"nodeType":"262","messageId":"263","endLine":77,"endColumn":16},{"ruleId":"260","severity":1,"message":"282","line":19,"column":3,"nodeType":"262","messageId":"263","endLine":19,"endColumn":14},{"ruleId":"260","severity":1,"message":"283","line":20,"column":3,"nodeType":"262","messageId":"263","endLine":20,"endColumn":30},{"ruleId":"260","severity":1,"message":"284","line":21,"column":3,"nodeType":"262","messageId":"263","endLine":21,"endColumn":28},{"ruleId":"260","severity":1,"message":"285","line":16,"column":3,"nodeType":"262","messageId":"263","endLine":16,"endColumn":13},{"ruleId":"260","severity":1,"message":"285","line":16,"column":3,"nodeType":"262","messageId":"263","endLine":16,"endColumn":13},{"ruleId":"260","severity":1,"message":"286","line":27,"column":3,"nodeType":"262","messageId":"263","endLine":27,"endColumn":16},{"ruleId":"260","severity":1,"message":"287","line":28,"column":3,"nodeType":"262","messageId":"263","endLine":28,"endColumn":14},{"ruleId":"260","severity":1,"message":"288","line":29,"column":3,"nodeType":"262","messageId":"263","endLine":29,"endColumn":30},{"ruleId":"260","severity":1,"message":"289","line":30,"column":3,"nodeType":"262","messageId":"263","endLine":30,"endColumn":28},{"ruleId":"260","severity":1,"message":"290","line":33,"column":10,"nodeType":"262","messageId":"263","endLine":33,"endColumn":23},{"ruleId":"260","severity":1,"message":"291","line":91,"column":7,"nodeType":"262","messageId":"263","endLine":91,"endColumn":21},{"ruleId":"260","severity":1,"message":"292","line":2,"column":30,"nodeType":"262","messageId":"263","endLine":2,"endColumn":39},{"ruleId":"260","severity":1,"message":"293","line":16,"column":9,"nodeType":"262","messageId":"263","endLine":16,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":3,"column":27,"nodeType":"262","messageId":"263","endLine":3,"endColumn":33},{"ruleId":"260","severity":1,"message":"294","line":3,"column":35,"nodeType":"262","messageId":"263","endLine":3,"endColumn":40},{"ruleId":"260","severity":1,"message":"295","line":3,"column":42,"nodeType":"262","messageId":"263","endLine":3,"endColumn":48},{"ruleId":"260","severity":1,"message":"296","line":3,"column":50,"nodeType":"262","messageId":"263","endLine":3,"endColumn":54},{"ruleId":"260","severity":1,"message":"297","line":17,"column":8,"nodeType":"262","messageId":"263","endLine":17,"endColumn":20},{"ruleId":"260","severity":1,"message":"298","line":20,"column":7,"nodeType":"262","messageId":"263","endLine":20,"endColumn":16},{"ruleId":"272","severity":1,"message":"299","line":38,"column":1,"nodeType":"274","endLine":91,"endColumn":3},{"ruleId":"300","severity":1,"message":"301","line":141,"column":7,"nodeType":"302","messageId":"303","endLine":141,"endColumn":11},{"ruleId":"300","severity":1,"message":"304","line":144,"column":7,"nodeType":"302","messageId":"303","endLine":144,"endColumn":18},{"ruleId":"300","severity":1,"message":"305","line":153,"column":11,"nodeType":"302","messageId":"303","endLine":153,"endColumn":19},{"ruleId":"300","severity":1,"message":"305","line":157,"column":11,"nodeType":"302","messageId":"303","endLine":157,"endColumn":19},{"ruleId":"300","severity":1,"message":"306","line":163,"column":7,"nodeType":"302","messageId":"303","endLine":163,"endColumn":15},{"ruleId":"265","replacedBy":"307"},{"ruleId":"267","replacedBy":"308"},{"ruleId":"260","severity":1,"message":"309","line":6,"column":3,"nodeType":"262","messageId":"263","endLine":6,"endColumn":16},{"ruleId":"260","severity":1,"message":"279","line":12,"column":3,"nodeType":"262","messageId":"263","endLine":12,"endColumn":17},{"ruleId":"260","severity":1,"message":"280","line":13,"column":3,"nodeType":"262","messageId":"263","endLine":13,"endColumn":14},{"ruleId":"260","severity":1,"message":"310","line":65,"column":9,"nodeType":"262","messageId":"263","endLine":65,"endColumn":19},{"ruleId":"260","severity":1,"message":"311","line":10,"column":8,"nodeType":"262","messageId":"263","endLine":10,"endColumn":18},{"ruleId":"312","severity":1,"message":"313","line":58,"column":3,"nodeType":"314","messageId":"315","endLine":83,"endColumn":9},{"ruleId":"312","severity":1,"message":"313","line":103,"column":3,"nodeType":"314","messageId":"315","endLine":116,"endColumn":10},{"ruleId":"260","severity":1,"message":"316","line":133,"column":9,"nodeType":"262","messageId":"263","endLine":133,"endColumn":25},{"ruleId":"317","severity":1,"message":"318","line":74,"column":13,"nodeType":"319","endLine":74,"endColumn":34},{"ruleId":"260","severity":1,"message":"320","line":15,"column":10,"nodeType":"262","messageId":"263","endLine":15,"endColumn":26},{"ruleId":"260","severity":1,"message":"321","line":17,"column":10,"nodeType":"262","messageId":"263","endLine":17,"endColumn":18},{"ruleId":"260","severity":1,"message":"322","line":18,"column":8,"nodeType":"262","messageId":"263","endLine":18,"endColumn":26},{"ruleId":"260","severity":1,"message":"323","line":2,"column":9,"nodeType":"262","messageId":"263","endLine":2,"endColumn":13},{"ruleId":"272","severity":1,"message":"299","line":5,"column":1,"nodeType":"274","endLine":39,"endColumn":3},{"ruleId":"260","severity":1,"message":"324","line":1,"column":15,"nodeType":"262","messageId":"263","endLine":1,"endColumn":23},{"ruleId":"260","severity":1,"message":"325","line":1,"column":25,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["326"],"no-negated-in-lhs",["327"],"'LoginPage' is defined but never used.","'refreshAuth' is defined but never used.","'LoginNew' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'initialState' is assigned a value but never used.","'ReferenceInput' is defined but never used.","'SelectInput' is defined but never used.","'classes' is assigned a value but never used.","'AnswerField' is defined but never used.","'MultipleChoiceQuestionField' is defined but never used.","'MultipleChoiceAnswerField' is defined but never used.","'ImageInput' is defined but never used.","'QuestionInput' is defined but never used.","'AnswerInput' is defined but never used.","'MultipleChoiceQuestionInput' is defined but never used.","'MultipleChoiceAnswerInput' is defined but never used.","'QuestionField' is defined but never used.","'optionRenderer' is assigned a value but never used.","'TextInput' is defined but never used.","'BadgeField' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'authProvider' is defined but never used.","'FakeLogin' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-dupe-keys","Duplicate key 'name'.","ObjectExpression","unexpected","Duplicate key 'description'.","Duplicate key 'username'.","Duplicate key 'lastEdit'.",["326"],["327"],"'PasswordInput' is defined but never used.","'cardStyles' is assigned a value but never used.","'Typography' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'MapContextFilter' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'customBuildQuery' is defined but never used.","'RestLink' is defined but never used.","'simpleRestProvider' is defined but never used.","'AUTH' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","no-global-assign","no-unsafe-negation"]