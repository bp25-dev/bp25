<<<<<<< HEAD
[{"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js":"1","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js":"2","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js":"3","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Routes.js":"4","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/LogoutStyle.js":"5","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen.js":"6","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"7","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/Theme.js":"8","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/dataProvider.js":"9","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren.js":"10","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate.js":"11","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User.js":"12","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/ProfilePicutre.js":"13","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Codes.js":"14","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Tour_Feedback.js":"15"},{"size":620,"mtime":1608462829115,"results":"16","hashOfConfig":"17"},{"size":4099,"mtime":1611647309397,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1608462829115,"results":"19","hashOfConfig":"17"},{"size":704,"mtime":1609672701770,"results":"20","hashOfConfig":"17"},{"size":1896,"mtime":1608462829115,"results":"21","hashOfConfig":"17"},{"size":3025,"mtime":1611309586776,"results":"22","hashOfConfig":"17"},{"size":4716,"mtime":1611307680788,"results":"23","hashOfConfig":"17"},{"size":472,"mtime":1610037043118,"results":"24","hashOfConfig":"17"},{"size":4644,"mtime":1611645416097,"results":"25","hashOfConfig":"17"},{"size":10131,"mtime":1611415192454,"results":"26","hashOfConfig":"17"},{"size":7393,"mtime":1611645416097,"results":"27","hashOfConfig":"17"},{"size":3070,"mtime":1611647640278,"results":"28","hashOfConfig":"17"},{"size":1662,"mtime":1611307680788,"results":"29","hashOfConfig":"17"},{"size":1171,"mtime":1611645416097,"results":"30","hashOfConfig":"17"},{"size":1582,"mtime":1611647244428,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"zx3xcf",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/index.js",["71","72"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["73","74"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/App.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Routes.js",["75","76"],"import React from 'react'\nimport { BrowserRouter as Router,\n    Route, Switch, Link } from \"react-router-dom\";\nimport Admins from './Admins';\nimport Exponate from './Exponate';\nimport Touren from './Touren';\n\n\n\n\nexport default class Routes extends React.Component {\n    render() {\n        return(\n            <div>\n            <Switch>\n           <Route exact path=\"/Touren\" render={() => (\n               <Touren></Touren>\n           )}/>\n              \n         \n          <Route exact path=\"/Exponate\">\n               <Exponate></Exponate>\n          </Route>\n          <Route exact path=\"/User\">\n                <Admins></Admins>\n            </Route>\n        </Switch>\n        </div>\n        )\n    }\n}",["77","78"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/LogoutStyle.js",["79","80","81"],"import React, { Component } from 'react'\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { CssBaseline } from '@material-ui/core';\n\nconst StyledMenu = withStyles()\n  ((props) => (\n    <Menu \n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\"\n      }}\n      {...props}\n    />\n  ));\n\n  const StyledMenuItem = withStyles((theme) => ({\n    root: {\n      \"&:focus\": {\n        backgroundColor: theme.palette.primary.main,\n        \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n          color: theme.palette.common.white\n        }\n      }\n    }\n  }))(MenuItem);\n\nexport default function LogoutStyle() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n      };\n\n    return(\n        <div>\n            <Button onClick={handleClick}>\n                <AccountCircleIcon/>\n            </Button>\n\n            <StyledMenu\n            id=\"customized-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n            >\n                <StyledMenuItem>\n                    <ListItemText primary=\"Abmelden\" onClick={blah}/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>            \n    )    \n}\n\nfunction blah()  {\n    return(\n        alert('Sie sind abgemeldet')\n    )\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Abzeichen.js",["82","83","84","85","86","87"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  UrlField,\n  ImageField,\n  NumberField,\n  ReferenceField,\n  ImageInput,\n  NumberInput,\n  ReferenceInput,\n  SelectInput,\n  EditButton,\n  Edit,\n  SimpleForm,\n  TextInput,\n  Create,\n  SimpleShowLayout,\n  Show,\n  ArrayField,\n  SingleFieldList,\n  ReferenceArrayInput,\n  SelectArrayInput,\n} from 'react-admin';\n\n// edit expand component\nconst ImageShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      {/* TODO: Show URL & image of related picture*/}\n      <ImageField source='picture' label='Abzeichen Bild' />\n      <ImageField\n        source='unlocked_picture'\n        label='freigeschaltete Profilbilder'\n      />\n      {/* TODO: Link to actual picture table to display connectes profile pictures \n      show as a list, if there is more than one profile picture for one badge?\n      <UrlField source='picture' label='Url' />\n      */}\n    </SimpleShowLayout>\n  </Show>\n);\n\n// list existing badges\nexport const AbzeichenList = (props) => (\n  <List {...props} title='Abzeichen'>\n    <Datagrid expand={<ImageShow />}>\n      <TextField source='id' label='ID' />\n      <TextField source='name' label='Name' />\n      <TextField source='picture' />\n      <NumberField source='cost' label='Kosten' />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\n// edit badges\nexport const AbzeichenEdit = (props) => (\n  <Edit title='Verändere Verknüpfung' {...props}>\n    <SimpleForm>\n      <TextInput disabled source='id' />\n      <TextInput source='name' label='Name' />\n      {/* Select a new picture for the badge*/}\n      <ImageInput source='Abzeichen' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      {/* TODO: Link to connected profile pictures and select by existing name/picture\n       (new profile pictures have to be added in the ProfilePicture database)*/}\n      <ReferenceInput\n        source='unlocked_picture'\n        reference='ProfilePicture'\n        label='freigeschaltete Profilbilder'\n      >\n        <SelectInput source='picture' />\n      </ReferenceInput>\n      <NumberInput source='cost' label='Kosten' />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new badge\nexport const AbzeichenCreate = (props) => (\n  <Create title='Lade Abzeichen hoch' {...props}>\n    <SimpleForm>\n      <TextInput disabled source='id' />\n      <TextInput source='name' label='Name' />\n      <ImageInput source='Badge' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      {/* TODO: Link to connected profile pictures and select by existing name/picture\n       (new profile pictures have to be added in the ProfilePicture database)*/}\n      <ReferenceInput\n        source='unlocked_picture'\n        reference='ProfilePicture'\n        label='freigeschaltete Profilbilder'\n      >\n        <SelectInput source='$oid' />\n      </ReferenceInput>\n      <NumberInput source='cost' label='Kosten' />\n    </SimpleForm>\n  </Create>\n);\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["88","89"],"import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'react-admin';\n//material UI imports\nimport Card from '@material-ui/core/Card';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\n// style for the cards\nconst useStyles = makeStyles(() => ({\n  card: {\n    maxWidth: '100%',\n    margin: 'auto',\n    transition: '0.3s',\n    color: '#000',\n    backgroundColor: 'transparent',\n    //   boxShadow: 'none',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    marginLeft: '50%',\n    margin: 'auto',\n    display: 'flex',\n    objectFit: 'contain',\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    textAlign: 'left',\n  },\n  heading: {\n    fontWeight: 'bold',\n  },\n  subheading: {\n    lineHeight: 1.8,\n  },\n  root: {\n    minWidth: '90%',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n// style for the grid\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\n  gridContainer: {\n    maxWidth: '100%',\n    //   paddingLeft: '40px',\n    //   paddingRight: '40px',\n    //  paddingTop: '0px',\n    margin: 'auto',\n    position: 'relative',\n  },\n}));\n\n// card components for different links\nconst CustomCard = ({ classes, image, title, subtitle, path }) => {\n  const cardStyles = useStyles();\n  return (\n    <Card className={classes.card}>\n      <div className={classes.con}>\n        <CardContent className={classes.content}>\n          <div\n            style={{\n              position: 'relative',\n            }}\n          >\n            <CardMedia className={classes.media} image={image} />\n            <div\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                //  transform: 'translateX(25%)'\n              }}\n            >\n              <Typography\n                className={classes.title}\n                variant={'h4'}\n                component={'h4'}\n              >\n                {title}\n              </Typography>\n              <Typography className={classes.subtitle}>{subtitle}</Typography>\n              <CardActions>\n                <Link to={path}>\n                  <Button renderAs='button'>Klicke hier</Button>\n                </Link>\n              </CardActions>\n            </div>\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\n// place the card on a grid\nexport default function Dashboard() {\n  const cardStyles = useStyles();\n  const gridStyles = useGridStyles();\n\n  return (\n    <Grid\n      container\n      //  direction=\"row\"\n      spacing={0}\n      className={gridStyles.gridContainer}\n      justify='center'\n    >\n      <Title title='Hessisches Landesmusuem' />\n      <Grid item md>\n        <CustomCard\n          classes={cardStyles}\n          title={'Benutzer'}\n          subtitle={'Verwalte Benutzer*innen'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/01_1180x0.png'\n          }\n          path='/Benutzer'\n        />\n        <CustomCard\n          classes={cardStyles}\n          title={'Touren'}\n          subtitle={'Erstelle Touren'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/02_376x376.png'\n          }\n          path='/Touren'\n        />\n      </Grid>\n      <Grid item md>\n        <CustomCard\n          classes={cardStyles}\n          title={'Exponate'}\n          subtitle={'Bearbeite Exponate'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/05_versionKlein_376x376.png'\n          }\n          path='/Exponate'\n        />\n        <CustomCard\n          classes={cardStyles}\n          title={'Abzeichen'}\n          subtitle={'Füge neue Abzeichen hinzu'}\n          image={\n            'https://www.geschichte.tu-darmstadt.de/media/geschichte/ifg/didaktik/geschichtsdidaktik_bilder/03_376x376.png'\n          }\n          path='/Abzeichen'\n        />\n      </Grid>\n    </Grid>\n  );\n}","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Style/Theme.js",[],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/containers/dataProvider.js",["90","91"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Touren.js",["92"],"import React from 'react';\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SimpleForm,\n  SingleFieldList,\n  //options\n  SimpleFormIterator,\n  Filter,\n  EditButton,\n  Show,\n  SimpleShowLayout,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //actions\n  useListContext,\n  TopToolbar,\n  CreateButton,\n  ExportButton,\n  sanitizeListRestProps,\n  //fields\n  TextField,\n  ReferenceField,\n  ReferenceArrayField,\n  DateField,\n  NumberField,\n  ChipField,\n  ArrayField,\n  BooleanField,\n  UrlField,\n  //inputs\n  SelectInput,\n  ImageInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  SearchInput,\n  ReferenceInput,\n  NumberInput,\n  ArrayInput,\n  BooleanInput,\n  DateInput,\n  TextInput,\n} from 'react-admin';\n// material UI styles\nimport { Button } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// filter the tours (search for text)\n// TODO: filter Ersteller der Tour\n// filter for featured tours (todo, not working yet)\nconst FilterBar = (props) => (\n  <div>\n    <Filter {...props}>\n      <SearchInput source='q' alwaysOn />\n      <SelectInput\n        source='status'\n        choices={[\n          { id: 'freigegeben', name: 'freigegeben' },\n          { id: 'ausstehend', name: 'ausstehend' },\n          { id: 'privat', name: 'privat' },\n        ]}\n        alwaysOn\n      />\n      <ReferenceInput\n        source='user'\n        reference='Benutzer'\n        label='Ersteller'\n        alwaysOn\n      >\n        <SelectInput optionText='username' />\n      </ReferenceInput>\n      <NumberInput\n        source='difficulty'\n        label='Schwierigkeitsgrad'\n        validate={validateDifficulty}\n        alwaysOn\n      />\n      <DateInput\n        source='lastEdit'\n        label='letzte Bearbeitung'\n        options={{ format: 'DD/MM/YYYY' }}\n        alwaysOn\n      />\n    </Filter>\n    <Button\n      variant='contained'\n      size='small'\n      startIcon={<DeleteIcon />}\n      onClick={() => props.setFilters({})}\n    >\n      Alle Filter zurücksetzen\n    </Button>\n  </div>\n);\n\n//solution for removing reset button from action bar (doesnt have functionality there)\nconst ListActions = (props) => {\n  const { className, exporter, filters, maxResults, ...rest } = props;\n  const {\n    currentSort,\n    resource,\n    filterValues,\n    basePath,\n    total,\n  } = useListContext();\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      <CreateButton basePath={basePath} />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filterValues={filterValues}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\n//edit expand component\n//TODO: get information about stations (from the video) and model them\nconst StationShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <ArrayField source='Stationen'>\n        <Datagrid>\n          {/*  if no object is there it is an individual slide and foto, text, details should be deactivated */}\n          <TextField source='Objekt' />\n          <TextField source='Foto' />\n          <TextField source='Text' />\n          <TextField source='Details' />\n          <TextField source='Textfeld' />\n          <UrlField source='Bild' />\n          {/*  model a question */}\n          <ArrayField source='???' label='Fragen'>\n            <Datagrid>\n              <TextField source='question' label='Frage' />\n              <ReferenceArrayField\n                label='verlinkte Objekte'\n                reference='Exponate'\n                source='linked_objects'\n              >\n                <SingleFieldList>\n                  <ChipField source='title' label='Name' />\n                </SingleFieldList>\n              </ReferenceArrayField>\n            </Datagrid>\n          </ArrayField>\n          {/*  model an answer */}\n          <ArrayField source='???' label='Antworten'>\n            <Datagrid>\n              <TextField source='answer' label='Antwort' />\n              <ReferenceArrayField\n                label='verlinkte User'\n                reference='User'\n                source='user'\n              >\n                <SingleFieldList>\n                  <ChipField source='username' label='Benutzer' />\n                </SingleFieldList>\n              </ReferenceArrayField>\n            </Datagrid>\n          </ArrayField>\n        </Datagrid>\n      </ArrayField>\n    </SimpleShowLayout>\n  </Show>\n);\n\n// TODO: create border to devide the component from the filters (spacing)\nconst useStyles = makeStyles({\n  main: {\n    marginTop: 20,\n  },\n});\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// list existing tours\nexport const TourenList = (props) => {\n  const classes = useStyles(props);\n  return (\n    <List\n      {...props}\n      title='Touren'\n      filters={<FilterBar />}\n      actions={<ListActions />}\n      classes={{ main: classes.main }}\n    >\n      <Datagrid expand={<StationShow />}>\n        {/* TODO: Whats the primaery key? replace Titel for pk or use built in  */}\n        <TextField source='_id' label='ID' />\n        <TextField source='name' label='Titel' />\n        <TextField source='description' label='Beschreibung' />\n        {/* refField: source=field in this table, reference=Name of reference Table  */}\n        <ReferenceField source='owner' reference='Benutzer' label='Ersteller'>\n          <ChipField source='username' />\n        </ReferenceField>\n        <ReferenceArrayField\n          label='Benutzer'\n          reference='Benutzer'\n          source='user'\n        >\n          <SingleFieldList>\n            <ChipField source='username' />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <TextField source='search_id' label='Touren Code' />\n        <TextField source='session_id' label='Passwort' />\n        <DateField\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberField source='difficulty' label='Schwierigkeitsgrad' />\n        <ChipField source='status' label='Status' />\n        <EditButton />\n      </Datagrid>\n    </List>\n  );\n};\n\n// edit a tour\nexport const TourenEdit = (props) => (\n  <Edit title='Bearbeite Touren' {...props}>\n    <SimpleForm warnWhenUnsavedChanges>\n      <TextInput disabled source='ID' />\n      <TextInput source='name' label='Titel' />\n      <TextInput source='description' label='Beschreibung' />\n      <ReferenceInput source='user' reference='Benutzer' label='Ersteller'>\n        <SelectInput optionText='username' />\n      </ReferenceInput>\n      <ReferenceArrayInput source='user' reference='Benutzer'>\n        <SelectArrayInput optionText='username' />\n      </ReferenceArrayInput>\n      <TextInput source='search_id' label='Touren Code' />\n      <TextInput source='session_id' label='Passwort' />\n      <DateInput\n        source='lastEdit'\n        label='letzte Bearbeitung'\n        options={{ format: 'DD/MM/YYYY' }}\n      />\n      <NumberInput\n        source='difficulty'\n        label='Schwierigkeitsgrad'\n        validate={validateDifficulty}\n      />\n      <SelectInput\n        source='Status'\n        choices={[\n          { id: 'freigegeben', name: 'freigegeben' },\n          { id: 'ausstehend', name: 'ausstehend' },\n          { id: 'privat', name: 'privat' },\n        ]}\n      />\n      {/*  TODO: model the different stations and translate them into edit Inputs*/}\n      <ArrayInput source='Stationen'>\n        <SimpleFormIterator>\n          <TextField source='Objekt' />\n          <BooleanInput source='Foto' />\n          <BooleanInput source='Text' />\n          <BooleanInput source='Details' />\n          <TextInput source='Textfeld' />\n          <ArrayInput source='Fragen'>\n            <SimpleFormIterator>\n              <TextInput source='Antwort' />\n              <BooleanInput source='Antwort' />\n            </SimpleFormIterator>\n          </ArrayInput>\n          <ImageInput source='Bild' />\n        </SimpleFormIterator>\n      </ArrayInput>\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new tour\n// todo: ID should not be created manually but automatically (distinct id)\nexport const TourenCreate = (props) => (\n  <Create title='Erstelle Touren' {...props}>\n    <SimpleForm warnWhenUnsavedChanges>\n      <TextInput disabled source='ID' />\n      <TextInput source='name' label='Titel' />\n      <TextInput source='description' label='Beschreibung' />\n      <ReferenceInput source='user' reference='Benutzer' label='Ersteller'>\n        <SelectInput optionText='username' />\n      </ReferenceInput>\n      <ReferenceArrayInput source='user' reference='Benutzer'>\n        <SelectArrayInput optionText='username' />\n      </ReferenceArrayInput>\n      <TextInput source='search_id' label='Touren Code' />\n      <TextInput source='session_id' label='Passwort' />\n      <DateInput\n        source='lastEdit'\n        label='letzte Bearbeitung'\n        options={{ format: 'DD/MM/YYYY' }}\n      />\n      <NumberInput\n        source='difficulty'\n        label='Schwierigkeitsgrad'\n        validate={validateDifficulty}\n      />\n      <SelectInput\n        source='Status'\n        choices={[\n          { id: 'freigegeben', name: 'freigegeben' },\n          { id: 'ausstehend', name: 'ausstehend' },\n          { id: 'privat', name: 'privat' },\n        ]}\n      />\n      {/*  TODO: model the different stations and translate them into edit Inputs*/}\n      <ArrayInput source='Stationen'>\n        <SimpleFormIterator>\n          <TextField source='Objekt' />\n          <BooleanInput source='Foto' />\n          <BooleanInput source='Text' />\n          <BooleanInput source='Details' />\n          <TextInput source='Textfeld' />\n          <ArrayInput source='Fragen'>\n            <SimpleFormIterator>\n              <TextInput source='Antwort' />\n              <BooleanInput source='Antwort' />\n            </SimpleFormIterator>\n          </ArrayInput>\n          <ImageInput source='Bild' />\n        </SimpleFormIterator>\n      </ArrayInput>\n    </SimpleForm>\n  </Create>\n);\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Exponate.js",["93","94"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/User.js",["95"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/ProfilePicutre.js",["96"],"import React from 'react';\nimport { Fragment } from 'react';\nimport {\n  List,\n  Datagrid,\n  UrlField,\n  ImageField,\n  BooleanField,\n  ImageInput,\n  BooleanInput,\n  EditButton,\n  Edit,\n  SimpleForm,\n  Create,\n  SimpleShowLayout,\n  Show,\n  TextField,\n  TextInput,\n} from 'react-admin';\n\n// edit expand component\nconst ImageShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <ImageField source='picture' />\n      <UrlField source='picture' label='Url' />\n    </SimpleShowLayout>\n  </Show>\n);\n\n// list existing badges\nexport const PictureList = (props) => (\n  <List {...props} title='Abzeichen'>\n    <Datagrid expand={<ImageShow />}>\n      <TextField source='name' label='Name' />\n      <BooleanField source='locked' label='gesperrt' />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\n// edit badges\nexport const PictureEdit = (props) => (\n  <Edit title='Verändere Profilbilder' {...props}>\n    <SimpleForm>\n      <TextInput source='name' label='Name' fullWidth />\n      <ImageInput source='ProfilePicture' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      <BooleanInput label='gesperrt' source='locked' />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new badge\nexport const PictureCreate = (props) => (\n  <Create title='Lade Profilbilder hoch' {...props}>\n    <SimpleForm>\n      <TextInput source='name' label='Name' fullWidth />\n      <ImageInput source='ProfilePicture' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      <BooleanInput label='gesperrt' source='locked' />\n    </SimpleForm>\n  </Create>\n);\n","/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Codes.js",["97","98","99","100"],"/home/anna/Dokumente/Projects/BPProject/Test-Gitlab/test-app/src/app/components/Tour_Feedback.js",[],{"ruleId":"101","severity":1,"message":"102","line":7,"column":27,"nodeType":"103","messageId":"104","endLine":7,"endColumn":33},{"ruleId":"101","severity":1,"message":"105","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":19},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":27,"nodeType":"103","messageId":"104","endLine":2,"endColumn":33},{"ruleId":"101","severity":1,"message":"110","line":3,"column":20,"nodeType":"103","messageId":"104","endLine":3,"endColumn":24},{"ruleId":"106","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"101","severity":1,"message":"113","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"114","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":9,"column":10,"nodeType":"103","messageId":"104","endLine":9,"endColumn":21},{"ruleId":"101","severity":1,"message":"115","line":6,"column":3,"nodeType":"103","messageId":"104","endLine":6,"endColumn":11},{"ruleId":"101","severity":1,"message":"116","line":9,"column":3,"nodeType":"103","messageId":"104","endLine":9,"endColumn":17},{"ruleId":"101","severity":1,"message":"117","line":21,"column":3,"nodeType":"103","messageId":"104","endLine":21,"endColumn":13},{"ruleId":"101","severity":1,"message":"118","line":22,"column":3,"nodeType":"103","messageId":"104","endLine":22,"endColumn":18},{"ruleId":"101","severity":1,"message":"119","line":23,"column":3,"nodeType":"103","messageId":"104","endLine":23,"endColumn":22},{"ruleId":"101","severity":1,"message":"120","line":24,"column":3,"nodeType":"103","messageId":"104","endLine":24,"endColumn":19},{"ruleId":"101","severity":1,"message":"121","line":6,"column":16,"nodeType":"103","messageId":"104","endLine":6,"endColumn":21},{"ruleId":"101","severity":1,"message":"122","line":64,"column":9,"nodeType":"103","messageId":"104","endLine":64,"endColumn":19},{"ruleId":"101","severity":1,"message":"123","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"124","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":26},{"ruleId":"101","severity":1,"message":"125","line":33,"column":3,"nodeType":"103","messageId":"104","endLine":33,"endColumn":15},{"ruleId":"101","severity":1,"message":"126","line":22,"column":3,"nodeType":"103","messageId":"104","endLine":22,"endColumn":12},{"ruleId":"101","severity":1,"message":"117","line":23,"column":3,"nodeType":"103","messageId":"104","endLine":23,"endColumn":13},{"ruleId":"101","severity":1,"message":"127","line":59,"column":7,"nodeType":"103","messageId":"104","endLine":59,"endColumn":21},{"ruleId":"101","severity":1,"message":"128","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":18},{"ruleId":"101","severity":1,"message":"129","line":4,"column":3,"nodeType":"103","messageId":"104","endLine":4,"endColumn":7},{"ruleId":"101","severity":1,"message":"125","line":10,"column":3,"nodeType":"103","messageId":"104","endLine":10,"endColumn":15},{"ruleId":"101","severity":1,"message":"130","line":14,"column":8,"nodeType":"103","messageId":"104","endLine":14,"endColumn":16},{"ruleId":"101","severity":1,"message":"131","line":15,"column":8,"nodeType":"103","messageId":"104","endLine":15,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'Link' is defined but never used.",["132"],["133"],"'Component' is defined but never used.","'AcUnitIcon' is defined but never used.","'UrlField' is defined but never used.","'ReferenceField' is defined but never used.","'ArrayField' is defined but never used.","'SingleFieldList' is defined but never used.","'ReferenceArrayInput' is defined but never used.","'SelectArrayInput' is defined but never used.","'Paper' is defined but never used.","'cardStyles' is assigned a value but never used.","'simpleRestProvider' is defined but never used.","'jsonServerProvider' is defined but never used.","'BooleanField' is defined but never used.","'ChipField' is defined but never used.","'optionRenderer' is assigned a value but never used.","'Fragment' is defined but never used.","'Edit' is defined but never used.","'DoneIcon' is defined but never used.","'ClearIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/index.js":"1","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/App.js":"2","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/reportWebVitals.js":"3","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate.js":"4","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren.js":"5","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Codes.js":"6","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/ProfilePicutre.js":"7","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User.js":"8","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen.js":"9","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Style/Theme.js":"10","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/dataProvider.js":"11","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"12"},{"size":620,"mtime":1609756755796,"results":"13","hashOfConfig":"14"},{"size":3883,"mtime":1611135537372,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609756755796,"results":"16","hashOfConfig":"14"},{"size":6823,"mtime":1611154494503,"results":"17","hashOfConfig":"14"},{"size":10149,"mtime":1611157030778,"results":"18","hashOfConfig":"14"},{"size":516,"mtime":1611135537372,"results":"19","hashOfConfig":"14"},{"size":1660,"mtime":1611159095559,"results":"20","hashOfConfig":"14"},{"size":2657,"mtime":1611135537372,"results":"21","hashOfConfig":"14"},{"size":3196,"mtime":1611158717380,"results":"22","hashOfConfig":"14"},{"size":472,"mtime":1610464763255,"results":"23","hashOfConfig":"14"},{"size":4584,"mtime":1611158438420,"results":"24","hashOfConfig":"14"},{"size":4352,"mtime":1611236581338,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"8d2lr6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/index.js",["58","59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["60","61"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/App.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate.js",["62","63","64","65","66","67","68"],"import React from 'react';\nimport {\n  TabbedForm,\n  FormTab,\n  List,\n  Datagrid,\n  TextField,\n  ImageField,\n  BooleanField,\n  EditButton,\n  Edit,\n  SimpleForm,\n  TextInput,\n  ImageInput,\n  Create,\n  FilterList,\n  FilterListItem,\n  FilterLiveSearch,\n  SimpleShowLayout,\n  ReferenceField,\n  Show,\n  Filter,\n  SearchInput,\n  SelectInput,\n  BooleanInput,\n\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { makeStyles } from '@material-ui/core/styles';\n//icons\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ClassIcon from '@material-ui/icons/Class';\nimport { Card as MuiCard, CardContent, withStyles } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { Category } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\n// filter sidebar styling\nconst Card = withStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      order: -1, // display on the left rather than on the right of the list\n      width: '15em',\n      marginRight: '1em',\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n}))(MuiCard);\n\n// check if picture object is not empty (create boolean)\nconst HasImageFilter = () => (\n  <FilterList label='Bildverknüpfung' icon={<ImageSearchIcon />}>\n    <FilterListItem label='vorhanden' value={{picture: true }} />\n    <FilterListItem label='nicht vorhanden' value={{ picture: null }} />\n  </FilterList>\n);\n\n\n// TODO: map each existing category into a Filter List Item Label\nconst KategorieFilter = () => (\n  <FilterList label='Kategorie' icon={<ClassIcon />}>\n   {/* {  {category.map(category => (\n          <FilterListItem\n              label={category.name}\n              key={category.name}\n          />\n   )) } }*/}\n  </FilterList>\n);\n\n\n//TODO: more filters.. Subkategorie Mapping, Timeframes, Material, ...? \n\n// sidebar functionality\nconst FilterSidebar = () => (\n  <Card>\n    <CardContent>\n      <FilterLiveSearch />\n      <HasImageFilter />\n      <KategorieFilter />\n    </CardContent>\n  </Card>\n);\n\n// edit expand component\nconst ImageShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <TextField source='art_type' label='Kunsttyp' />\n      <TextField source='description' label='Beschreibung' />\n      <TextField source='additionfal_inf' label='Weitere Informationen' />\n      {/* add new table with images and reference them here*/}\n      <ReferenceField label='Bildverknüpfung' source='' reference='Pictures'>\n        <ImageField source='picture' />\n      </ReferenceField>\n      <TextField source='year' label='Jahr' />\n      <TextField source='material' label='Material' />\n      <TextField source='size_' label='Größe' />\n      <TextField source='location' label='Ort' />\n    </SimpleShowLayout>\n  </Show>\n);\n\n\n\n// list the exhibits\nexport const ExponateList = (props) => (\n  <List {...props} title='Exponate' aside={<FilterSidebar />}>\n    <Datagrid expand={<ImageShow />}>\n      {/* todo: use ObjectID as primary key \n      instead of <TextField source='ID' /> */}\n      <TextField source='_id' label='ObjektID' />\n      <TextField source='title' label='Titel' />\n      <TextField source='creator' label='Ersteller' />\n      <TextField source='category' label='Kategorie' />\n      <TextField source='sub_category' label='Subkategorie' />\n      <TextField\n        source='interdisciplinary_context'\n        label='Interdisziplinärkontext'\n      />\n      {/* should be true if there is an linked picture */}\n      <ReferenceField label='Bildverknüpfung' source='' reference='Pictures'>\n        <BooleanField source='picture' />\n      </ReferenceField>\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\n// edit an exhibit\nexport const ExponateEdit = props => {\n  const classes = useStyles();\n  return(\n  <Edit {...props} title='Bearbeite Exponate' >\n    <TabbedForm warnWhenUnsavedChanges>\n      <FormTab label=\"Übersicht\">\n        <TextInput source='_id' label='ObjektID' fullWidth/>\n        <TextInput source='title' label='Titel' fullWidth/>\n        <RichTextInput source='description' label='Beschreibung' fullWidth/>\n        <TextInput source='additionfal_inf' label='Weitere Informationen' fullWidth/>\n        <TextInput source='category' label='Kategorie' fullWidth/>\n        <TextInput source='sub_category' label='Subkategorie' fullWidth/>\n        <TextInput\n          source='interdisciplinary_context'\n          label='Interdisziplinärkontext'\n          fullWidth\n        />\n      </FormTab>\n      {/* <TextInput disabled source='ID' /> */}\n     <FormTab label = \"Eckdaten\">\n        <TextInput source='year' label='Jahr' fullWidth/>\n        <TextInput source='picture' label='Bild' fullWidth/>\n        <TextInput source='art_type' label='Kunsttyp' fullWidth/>\n        <TextInput source='creator' label='Ersteller' fullWidth/>\n        <TextInput source='material' label='Material' fullWidth/>\n        <TextInput source='size_' label='Größe' formClassName={classes.inlineBlock}/>\n        <TextInput source='location' label='Ort'  formClassName={classes.inlineBlock}/>\n        <ImageInput source='picture' fullWidth/>\n     </FormTab>\n    </TabbedForm>\n  </Edit>\n  )\n};\n\n// create a new exhibit\n// todo: ID should not be created manually but automacially (distinct id)\nexport const ExponateCreate = props => {\n  const classes = useStyles();\n  return(\n  <Create title='Erstelle Exponate' {...props}>\n    <TabbedForm warnWhenUnsavedChanges>\n      <FormTab label=\"Übersicht\">\n        <TextInput source='_id' label='ObjektID' fullWidth/>\n        <TextInput source='title' label='Titel' fullWidth/>\n        <RichTextInput source='description' label='Beschreibung' fullWidth/>\n        <TextInput source='additionfal_inf' label='Weitere Informationen' fullWidth/>\n        <TextInput source='category' label='Kategorie' fullWidth/>\n        <TextInput source='sub_category' label='Subkategorie' fullWidth/>\n        <TextInput\n          source='interdisciplinary_context'\n          label='Interdisziplinärkontext'\n          fullWidth\n        />\n      </FormTab>\n        <FormTab label = \"Eckdaten\">\n        <TextInput source='year' label='Jahr' fullWidth/>\n        <TextInput source='picture' label='Bild' fullWidth/>\n        <TextInput source='art_type' label='Kunsttyp' fullWidth/>\n        <TextInput source='creator' label='Ersteller' fullWidth/>\n        <TextInput source='material' label='Material' fullWidth/>\n        <TextInput source='size_' label='Größe' formClassName={classes.inlineBlock}/>\n        <TextInput source='location' label='Ort' formClassName={classes.inlineBlock} />\n        <ImageInput source='picture' fullWidth/>\n      </FormTab>\n    </TabbedForm>\n  </Create>\n  )\n  };\n\n  ","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Codes.js",["69"],"import React from 'react';\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SimpleForm,\n  TextField,\n  TextInput,\n} from 'react-admin';\n\nexport const CodeList = (props) => (\n\n    <List {...props} title='Ersteller Codes'>\n      <Datagrid>\n        <TextField source='id' label='ID' />\\\n        <TextField source='Code' />\n      </Datagrid>\n    </List>\n  );\n  \n  export const CodeCreate = (props) => (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput source='Code' />\n      </SimpleForm>\n    </Create>\n  );","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/ProfilePicutre.js",["70"],"\nimport React from 'react';\nimport { Fragment } from 'react';\nimport {\n  List,\n  Datagrid,\n  UrlField,\n  ImageField,\n  BooleanField,\n  ImageInput,\n  BooleanInput,\n  EditButton,\n  Edit,\n  SimpleForm,\n  Create,\n  SimpleShowLayout,\n  Show,\n  TextField,\n  TextInput,\n} from 'react-admin';\n\n// edit expand component\nconst ImageShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <ImageField source='picture' />\n      <UrlField source='picture' label='Url' />\n    </SimpleShowLayout>\n  </Show>\n);\n\n// list existing badges\nexport const PictureList = (props) => (\n  <List {...props} title='Abzeichen'>\n    <Datagrid expand={<ImageShow />}>\n      <TextField source='name' label='Name'/>\n      <BooleanField source='locked' label='gesperrt' />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\n// edit badges\nexport const PictureEdit = (props) => (\n  <Edit title='Verändere Profilbilder' {...props}>\n    <SimpleForm>\n      <TextInput source='name' label='Name' fullWidth/>\n      <ImageInput source='ProfilePicture' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      <BooleanInput label='gesperrt' source='locked' />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new badge\nexport const PictureCreate = (props) => (\n  <Create title='Lade Profilbilder hoch' {...props}>\n    <SimpleForm>\n      <TextInput source='name' label='Name' fullWidth/>\n      <ImageInput source='ProfilePicture' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      <BooleanInput label='gesperrt' source='locked' />\n    </SimpleForm>\n  </Create>\n);\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User.js",["71"],"import React from 'react';\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SingleFieldList,\n  SimpleForm,\n  EditButton,\n  TextField,\n  ChipField,\n  ReferenceField,\n  EmailField,\n  ArrayField,\n  FunctionField,\n  BooleanField,\n  PasswordInput,\n  TextInput,\n  BooleanInput,\n} from 'react-admin';\n// material UI imports\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n// show eixsting users\nexport const UserList = (props) => (\n  <List {...props} title='Benutzer'>\n    <Datagrid>\n     {/*  TODO: get real primary key of user ID (username?) */}\n      <TextField source='id' label='ID' />\n      <TextField source='username' label='Benutzername' />\n      <EmailField source='email' label='Email' />\n      <FunctionField\n        source='password'\n        label='Passwort'\n        render={(record) => `**********`}\n      />\n      <BooleanField\n        source='producer'\n        label='Ersteller'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <BooleanField\n        source='Adminrechte'\n        label='Adminrechte'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <ArrayField source='badges' label='Abzeichen'>\n        <SingleFieldList>\n          <ReferenceField label='Abzeichen' source='_id' reference='Abzeichen'>\n            <ChipField source='name' />\n          </ReferenceField>\n        </SingleFieldList>\n      </ArrayField>\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nconst optionRenderer = (choice) => `${choice.picture}`;\n\n// edit paasword\nexport const AccountEdit = (props) => (\n  <Edit title='Accountdaten ändern' {...props}>\n    <SimpleForm>\n      <TextInput disabled source='id' label='ID' />\n      <TextInput source='username' label='Benutzername' />\n      <TextInput source='email' label='Email' />\n      <PasswordInput source='password' label='Passwort' />\n      <BooleanInput source='producer' label='Ersteller Status erteilen?' />\n      <BooleanInput source='Adminrechte' label='Adminrechte erlauben?' />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new user\nexport const UserCreate = (props) => (\n  <Create title='Erstelle Admin' {...props}>\n    <SimpleForm>\n      <TextInput source='username' label='Benutzername' />\n      <TextInput source='email' label='Email' />\n      <PasswordInput source='password' label='Passwort' />\n      <BooleanInput source='producer' label='Ersteller Status erteilen?' />\n      <BooleanInput source='Adminrechte' label='Adminrechte erlauben?' />\n    </SimpleForm>\n  </Create>\n);\n\n// to do: missing functions are to be embedded on the site\n// look up how to show different tables/ resources on one single page","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen.js",["72"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  UrlField,\n  ImageField,\n  NumberField,\n  ReferenceField,\n  ImageInput,\n  NumberInput,\n  ReferenceInput,\n  SelectInput,\n  EditButton,\n  Edit,\n  SimpleForm,\n  TextInput,\n  Create,\n  SimpleShowLayout,\n  Show,\n} from 'react-admin';\n\n// edit expand component\nconst ImageShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      {/* TODO: Show URL & image of related picture*/}\n      <ImageField source='picture.url' label='Bild' />\n      <UrlField source='picture.url' label='Url' />\n      {/* TODO: Link to actual picture table to display connectes profile pictures \n      show as a list, if there is more than one profile picture for one badge?*/}\n      {/*<ReferenceField\n        label='freigeschaltete Profilbilder'\n        source='unlocked_picture'\n        reference='Profilbild'\n      >\n        <ImageField source='unlocked_picture.url' />\n      </ReferenceField>*/}\n      <ImageField label='freigeschaltetes Bild' source='unlocked_picture.url'/>\n      <UrlField source='unlocked_picture.url' label='Url' />\n    </SimpleShowLayout>\n  </Show>\n);\n\n// list existing badges\nexport const AbzeichenList = (props) => (\n  <List {...props} title='Abzeichen'>\n    <Datagrid expand={<ImageShow />}>\n      <TextField source='id' label='ID' />\n      <TextField source='name' label='Name' />\n      <TextField source='picture' />\n      <NumberField source='cost' label='Kosten' />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\n// edit badges\nexport const AbzeichenEdit = (props) => (\n  <Edit title='Verändere Verknüpfung' {...props}>\n    <SimpleForm>\n      <TextInput disabled source='id' />\n      <TextInput source='name' label='Name' />\n      {/* Select a new picture for the badge*/}\n      <ImageInput source='Badge' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      {/* TODO: Link to connected profile pictures and select by existing name/picture\n       (new profile pictures have to be added in the ProfilePicture database)*/}\n      <ReferenceInput\n        label='freigeschaltete Profilbilder'\n        source='unlocked_picture'\n        reference='ProfilePicture'\n      >\n        <SelectInput source='picture' />\n      </ReferenceInput>\n      <NumberInput source='cost' label='Kosten' />\n    </SimpleForm>\n  </Edit>\n);\n\n// create a new badge\nexport const AbzeichenCreate = (props) => (\n  <Create title='Lade Abzeichen hoch' {...props}>\n    <SimpleForm>\n      <TextInput disabled source='id' />\n      <TextInput source='name' label='Name' />\n      <ImageInput source='Badge' accept='image/*'>\n        <ImageField source='picture' />\n      </ImageInput>\n      {/* TODO: Link to connected profile pictures and select by existing name/picture\n       (new profile pictures have to be added in the ProfilePicture database)*/}\n      <ReferenceInput\n        label='freigeschaltete Profilbilder'\n        source='unlocked_picture'\n        reference='ProfilePicture'\n      >\n        <SelectInput source='picture' />\n      </ReferenceInput>\n      <NumberInput source='cost' label='Kosten' />\n    </SimpleForm>\n  </Create>\n);","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Style/Theme.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/dataProvider.js",["73","74"],"import simpleRestProvider from 'ra-data-simple-rest';\nimport jsonServerProvider from 'ra-data-json-server';\nimport fakeDataProvider from 'ra-data-fakerest';\n\n// fake data base for testing\nconst dataProvider = fakeDataProvider({\n  Exponate: [\n    {\n      _id: 'Kg 31:21',\n      category: 'Kunst und Kulturgeschichte',\n      sub_category: 'Archäologie/Vor- und Frühgeschichte',\n      title: 'Goldfibel von Mölsheim',\n      picture: [\n        {\n          $oid: '5ff98892ccd2776f571d6c1a',\n        },\n      ],\n      description:\n        'Stilistisch datieren vor allem die Goldfiligranarbeiten in den Flächen der Vierpassform die Prunkfibel in die Zeit um 630/640–680 n. Chr. und legen eine Herstellung im westfränkischen Raum (Burgund?) nahe. Der zentral angebrachte Kameo – ein erhaben geschnittener Achat in Form eines Gorgonenhauptes – wurde von dem Goldschmiedemeister sicherlich in dem Wissen, dass es sich hierbei um ein antikes Kleinod aus hellenistischer Zeit handelte, wiederverwendet. Heute scheint es sehr wahrscheinlich, dass er aus derselben alexandrinischen Steinschneidewerkstatt stammt, aus der als bestes Vergleichsstück die bekannte Tazza Farnese, heute im Museo Archeologico Nationale in Neapel, mit einem ebenso ausgezeichnet geschnittenen Kameo hervorgegangen ist. (A. Z.)',\n      additional_information:\n        'Ein Landwirt fand die heute weltweit bekannte Filigranscheibenfibel im Jahr 1930 beim Anlegen eines Weinbergs ohne Grabkontext und damit ohne Hinweis darauf, welche adelige Frau sie getragen, geschweige denn, wo und von wem sie hergestellt wurde. Motiviert durch den sensationellen Fund unternahm das Hessische Landesmuseum Darmstadt in den Jahren 1931 und 1935 Grabungen, die einen frühmittelalterlichen Reihengräberfriedhof zutage brachten.',\n      interdisciplinary_context: 'Themen: Kunsthandwerk',\n      year: 'Fibel: um 630/40–680, Kameo:\\nspätes\\n2. Jahrhundert v. Chr.',\n      art_type: 'Kunsthandwerk; Fibel',\n      creator: 'unbekannt',\n      material:\n        'Fibel: Gold, Bronze, Perlen, Glas- und Edelsteine; \\nKameo: Achat',\n      size_: 'Durchmesser: 8,3 cm',\n      location: 'Fundort: Landkreis Alzey-Worms',\n    },\n  ],\n  Touren: [\n    {\n      _id: {\n        $oid: '600024333c43791d7831f306',\n      },\n      name: 'Tour1',\n      search_id: 'xxxxx',\n      description: 'This is such an awesome tour',\n      session_id: 420,\n      owner: {\n        username: 'Anna',\n      },\n      user: [\n        {\n          username: 'Vilja',\n        },\n        {\n          username: 'Cosima',\n        },\n      ],\n      difficulty: 5,\n      status: 'privat',\n      lastEdit: '2020-01-01',\n    },\n  ],\n  Benutzer: [\n    {\n      username: 'Anna',\n      password: '***',\n      producer: true,\n      badges: [{\n        _id: 'Erstellte_Rundgaenge_silber',\n      },\n      {\n        _id: 'Betrachtete_Artefakte_bronze',\n      },]\n      /* profile_picture: {\n        _id: 'Bild',\n      }, */\n    },\n  ],\n\n  Abzeichen: [\n    {\n      _id: 'Erstellte_Rundgaenge_silber',\n      name: 'Erstellte Rundgaenge silber',\n      picture: {\n        $oid: '5ff98919cdd36137740fc368',\n        url: 'https://image.shutterstock.com/image-vector/tickets-museum-history-icon-cartoon-600w-497081827.jpg',\n      },\n      unlocked_picture: {\n        $oid: '5ff98919cdd36137740fc367',\n      },\n      cost: 10,\n    },\n    {\n      _id: 'Betrachtete_Artefakte_bronze',\n      name: 'Betrachtete Artefakte bronze',\n      picture: {\n        $oid: '5ff98919cdd36137740fc36d',\n        url:'https://image.shutterstock.com/image-vector/not-completed-red-stamp-text-600w-472077142.jpg',\n      },\n      unlocked_picture: {\n        $oid: '5ff98919cdd36137740fc36c',\n        url:'https://image.shutterstock.com/image-vector/completed-grunge-vintage-square-stamp-600w-506324629.jpg',\n      },\n      cost: 3,\n    },\n    // {\n    //   AbzeichenID: '#1' /*\n    //   Url: '/app/components/Media/1.png', */,\n    //   Bild:\n    //     'https://blog.qwant.com/wp-content/uploads/sites/3/2016/01/test.jpg',\n    //   Beschreibung: 'test',\n    // },\n  ],\n  ProfilePicture: [\n    {\n      name: 'Test',\n      _id: {\n        $oid: '5ff9889f4028d9e0ea9cc52d',\n      },\n      /*picture: {\n        $oid: '5ff9889f4028d9e0ea9cc52a',\n      },*/\n      picture: 'https://blog.qwant.com/wp-content/uploads/sites/3/2016/01/test.jpg',\n      locked: false,\n    },\n  ],\n  Pictures: [\n    {\n      _id: {\n        $oid: '5ff98892ccd2776f571d6c1a',\n      },\n      picture: 'https://blog.qwant.com/wp-content/uploads/sites/3/2016/01/test.jpg',\n      locked: false,\n    },\n  ],\n});\nexport default dataProvider;\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["75","76","77"],{"ruleId":"78","severity":1,"message":"79","line":7,"column":27,"nodeType":"80","messageId":"81","endLine":7,"endColumn":33},{"ruleId":"78","severity":1,"message":"82","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":19},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"78","severity":1,"message":"87","line":12,"column":3,"nodeType":"80","messageId":"81","endLine":12,"endColumn":13},{"ruleId":"78","severity":1,"message":"88","line":22,"column":3,"nodeType":"80","messageId":"81","endLine":22,"endColumn":9},{"ruleId":"78","severity":1,"message":"89","line":23,"column":3,"nodeType":"80","messageId":"81","endLine":23,"endColumn":14},{"ruleId":"78","severity":1,"message":"90","line":24,"column":3,"nodeType":"80","messageId":"81","endLine":24,"endColumn":14},{"ruleId":"78","severity":1,"message":"91","line":25,"column":3,"nodeType":"80","messageId":"81","endLine":25,"endColumn":15},{"ruleId":"78","severity":1,"message":"92","line":36,"column":8,"nodeType":"80","messageId":"81","endLine":36,"endColumn":18},{"ruleId":"78","severity":1,"message":"93","line":37,"column":10,"nodeType":"80","messageId":"81","endLine":37,"endColumn":18},{"ruleId":"78","severity":1,"message":"94","line":4,"column":3,"nodeType":"80","messageId":"81","endLine":4,"endColumn":7},{"ruleId":"78","severity":1,"message":"95","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":18},{"ruleId":"78","severity":1,"message":"96","line":62,"column":7,"nodeType":"80","messageId":"81","endLine":62,"endColumn":21},{"ruleId":"78","severity":1,"message":"97","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":17},{"ruleId":"78","severity":1,"message":"98","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"99","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":26},{"ruleId":"78","severity":1,"message":"100","line":6,"column":27,"nodeType":"80","messageId":"81","endLine":6,"endColumn":32},{"ruleId":"78","severity":1,"message":"101","line":12,"column":10,"nodeType":"80","messageId":"81","endLine":12,"endColumn":21},{"ruleId":"78","severity":1,"message":"102","line":71,"column":9,"nodeType":"80","messageId":"81","endLine":71,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"'SimpleForm' is defined but never used.","'Filter' is defined but never used.","'SearchInput' is defined but never used.","'SelectInput' is defined but never used.","'BooleanInput' is defined but never used.","'PersonIcon' is defined but never used.","'Category' is defined but never used.","'Edit' is defined but never used.","'Fragment' is defined but never used.","'optionRenderer' is assigned a value but never used.","'ReferenceField' is defined but never used.","'simpleRestProvider' is defined but never used.","'jsonServerProvider' is defined but never used.","'Paper' is defined but never used.","'ContactMail' is defined but never used.","'cardStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> vilja_dev
