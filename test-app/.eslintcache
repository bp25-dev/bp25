[{"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/index.js":"1","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/App.js":"2","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/reportWebVitals.js":"3","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Style/Theme.js":"4","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/dataProvider.js":"5","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Dashboard.js":"6","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/CustomRoutes.js":"7","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js":"8","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js":"9","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js":"10","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js":"11","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js":"12","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js":"13","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/Tour_Feedback.js":"14","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js":"15","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserCreate.js":"16","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserList.js":"17","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js":"18","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js":"19","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js":"20","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js":"21","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js":"22","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js":"23","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js":"24","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js":"25","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Login/LoginPage.js":"26","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/MyProfile/MyLayout.js":"27","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/MyProfile/profile.js":"28","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/MyProfile/MyAppBar.js":"29","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/MyProfile/MyUserMenu.js":"30","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/DeleteButtonWithConfirmation.js":"31"},{"size":620,"mtime":1609756755796,"results":"32","hashOfConfig":"33"},{"size":5194,"mtime":1612015700295,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1609756755796,"results":"35","hashOfConfig":"33"},{"size":472,"mtime":1610464763255,"results":"36","hashOfConfig":"33"},{"size":9898,"mtime":1612199427005,"results":"37","hashOfConfig":"33"},{"size":4495,"mtime":1612184371912,"results":"38","hashOfConfig":"33"},{"size":227,"mtime":1612015700295,"results":"39","hashOfConfig":"33"},{"size":2192,"mtime":1612015700295,"results":"40","hashOfConfig":"33"},{"size":3296,"mtime":1612189975825,"results":"41","hashOfConfig":"33"},{"size":3985,"mtime":1612015700295,"results":"42","hashOfConfig":"33"},{"size":6112,"mtime":1612015700295,"results":"43","hashOfConfig":"33"},{"size":2664,"mtime":1612015700295,"results":"44","hashOfConfig":"33"},{"size":3520,"mtime":1612190364525,"results":"45","hashOfConfig":"33"},{"size":1582,"mtime":1612015700299,"results":"46","hashOfConfig":"33"},{"size":1465,"mtime":1612190626123,"results":"47","hashOfConfig":"33"},{"size":495,"mtime":1612015700299,"results":"48","hashOfConfig":"33"},{"size":2267,"mtime":1612015700299,"results":"49","hashOfConfig":"33"},{"size":855,"mtime":1612015700299,"results":"50","hashOfConfig":"33"},{"size":279,"mtime":1612015700299,"results":"51","hashOfConfig":"33"},{"size":1861,"mtime":1612015700295,"results":"52","hashOfConfig":"33"},{"size":1882,"mtime":1612190579331,"results":"53","hashOfConfig":"33"},{"size":992,"mtime":1612015700295,"results":"54","hashOfConfig":"33"},{"size":762,"mtime":1612015700295,"results":"55","hashOfConfig":"33"},{"size":1347,"mtime":1612190768093,"results":"56","hashOfConfig":"33"},{"size":541,"mtime":1612015700295,"results":"57","hashOfConfig":"33"},{"size":2753,"mtime":1612015700295,"results":"58","hashOfConfig":"33"},{"size":349,"mtime":1612015700295,"results":"59","hashOfConfig":"33"},{"size":2973,"mtime":1612015700295,"results":"60","hashOfConfig":"33"},{"size":214,"mtime":1612015700295,"results":"61","hashOfConfig":"33"},{"size":444,"mtime":1612015700295,"results":"62","hashOfConfig":"33"},{"size":4647,"mtime":1612188062335,"results":"63","hashOfConfig":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},"munf79",{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8d2lr6","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/index.js",["140","141"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n",["142","143"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/App.js",["144","145","146","147"],"import React from 'react';\nimport { Route } from \"react-router\";\nimport { Admin, Resource, Layout } from 'react-admin';\nimport { theme } from './app/components/Style/Theme.js';\n// site components\n//Exponate\nimport {ExponateCreate} from './app/components/Exponate/ExponateCreate.js';\nimport {ExponateEdit} from './app/components/Exponate/ExponateEdit.js';\nimport {ExponateList} from './app/components/Exponate/ExponateList.js';\n//Touren\nimport {TourenList} from './app/components/Touren/ListTouren.js';\nimport {TourenCreate} from './app/components/Touren/CreateTouren.js';\nimport {TourenEdit} from './app/components/Touren/EditTouren.js';\nimport { FeedbackList} from './app/components/Touren/Tour_Feedback.js';\n//Benutzer\nimport {UserList} from './app/components/User/UserList.js';\nimport {AccountEdit} from './app/components/User/AccountEdit.js';\nimport {UserCreate} from './app/components/User/UserCreate.js';\nimport {CodeList} from './app/components/User/Code/CodeList.js';\nimport {CodeCreate} from './app/components/User/Code/CodeCreate.js';\n//Bildverknüpfungen-Abzeichen\nimport {AbzeichenList} from './app/components/Abzeichen/AbzeichenList.js';\nimport {AbzeichenEdit} from './app/components/Abzeichen/AbzeichenEdit.js';\nimport {AbzeichenCreate} from './app/components/Abzeichen/AbzeichenCreate.js';\n//Bildverknüpfungen-Profilbilder\nimport {PictureList} from './app/components/Profilbilder/PictureList.js';\nimport {PictureEdit} from './app/components/Profilbilder/PictureEdit.js';\nimport {PictureCreate} from './app/components/Profilbilder/PictureCreate.js';\nimport Dashboard from './app/containers/Dashboard';\n\n//icons\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PhotoFilterIcon from '@material-ui/icons/PhotoFilter';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport ListIcon from '@material-ui/icons/List';\nimport CreateIcon from '@material-ui/icons/Create';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\n\nimport TreeMenu from '@bb-tech/ra-treemenu';\n//todo: import login page\n//import MyAppBar from './app/components/MyAppBar.js';\nimport LoginPage from './app/components/Login/LoginPage.js';\nimport dataProvider from './app/containers/dataProvider.js';\nimport customRoutes from './app/components/CustomRoutes';\nimport MyLayout from './app/components/MyProfile/MyLayout.js';\n\n\n\nexport default function App() {\n  return (\n    <div>\n      <Admin\n        title='Hessisches Landesmuseumgit '\n\n        //can be replaced with the real data provider\n        dataProvider={dataProvider}\n        // todo: User authentification\n        // authProdiver={authProvider}\n        customRoutes={customRoutes}\n        \n        // can be enabled/replaced if we have designed a custom LoginPage\n        loginPage={LoginPage}\n\n        // custom dashboard page\n        dashboard={Dashboard}\n        // custom theme\n        theme={theme} \n        // TODO: add a tree menu to show all resources\n        // Layout auslagern?\n        layout={MyLayout}\n      >\n        <Resource\n          name='Exponate'\n          options= {{label: 'Exponate'}}\n          list={ExponateList}\n          edit={ExponateEdit}\n          create={ExponateCreate}\n          icon={AccountBalanceIcon}\n          options={{ label: 'Exponate' }}\n        />\n        <Resource\n          name='Touren'\n          list={TourenList}\n          edit={TourenEdit}\n          create={TourenCreate}\n          icon={NavigationIcon}\n          options={{ label: 'Touren' }}\n        />\n        <Resource\n          name='Benutzer_overview'\n          icon={SupervisorAccountIcon}\n          options={{ label: 'Benutzer*innen', isMenuParent: true }}\n        />\n        <Resource\n          name='Benutzer'\n          list={UserList}\n          edit={AccountEdit}\n          create={UserCreate}\n          icon={ListIcon}\n          options={{ label: 'Übersicht', menuParent: 'Benutzer_overview' }}\n        />\n        <Resource\n          name='Codes'\n          list={CodeList}\n          create={CodeCreate}\n          icon={CreateIcon}\n          options={{\n            label: 'Code Erstellen',\n            menuParent: 'Benutzer_overview',\n          }}\n        />\n        <Resource\n          name='Bilder_overview'\n          icon={AddPhotoAlternateIcon}\n          options={{ label: 'Bildverknüpfungen', isMenuParent: true }}\n        />\n        <Resource\n          name='Abzeichen'\n          list={AbzeichenList}\n          edit={AbzeichenEdit}\n          create={AbzeichenCreate}\n          icon={PhotoFilterIcon}\n          options={{ label: 'Abzeichen', menuParent: 'Bilder_overview' }}\n        />\n        <Resource\n          name='ProfilePicture'\n          list={PictureList}\n          edit={PictureEdit}\n          create={PictureCreate}\n          icon={AddPhotoAlternateIcon}\n          options={{ label: 'Profilbilder', menuParent: 'Bilder_overview' }}\n        />\n        <Resource\n          name='Feedback'\n          list={FeedbackList}\n          icon={RateReviewIcon}\n          options={{ label: 'Feedback' }}\n        />\n      </Admin>\n    </div>\n  );\n}\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/reportWebVitals.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Style/Theme.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/dataProvider.js",["148","149"],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/Dashboard.js",["150","151","152"],"import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'react-admin';\n//material UI imports\nimport Card from '@material-ui/core/Card';\nimport { Container, Grid, Paper, Typography} from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { ContactMail } from '@material-ui/icons';\n\nimport badges from './images/Badges.png'\nimport exponate from './images/Exponate.png'\nimport tours from './images/Tours.png'\nimport user from './images/User.png'\n\n\n// style for the cards\nconst useStyles = makeStyles(() => ({\n  card: {\n    maxWidth: '100%',\n    margin: 'auto',\n    transition: '0.3s',\n    color: '#000',\n    backgroundColor: 'transparent',\n    //   boxShadow: 'none',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    marginLeft: '50%',\n    margin: 'auto',\n    display: 'flex',\n    objectFit: 'contain',\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    textAlign: 'left',\n  },\n  heading: {\n    fontWeight: 'bold',\n  },\n  subheading: {\n    lineHeight: 1.8,\n  },\n  root: {\n    minWidth: '90%',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n// style for the grid\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\n  gridContainer: {\n    maxWidth: '100%',\n    //   paddingLeft: '40px',\n    //   paddingRight: '40px',\n    //  paddingTop: '0px',\n    margin: 'auto',\n    position: 'relative',\n  },\n}));\n\n// card components for different links\nconst CustomCard = ({ classes, image, title, subtitle, path }) => {\n  const cardStyles = useStyles();\n  return (\n    <Card className={classes.card}>\n      <div className={classes.con}>\n        <CardContent className={classes.content}>\n          <div\n            style={{\n              position: 'relative',\n            }}\n          >\n            <CardMedia className={classes.media} image={image} />\n            <div\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                //  transform: 'translateX(25%)'\n              }}\n            >\n              <Typography\n                className={classes.title}\n                variant={'h4'}\n                component={'h4'}\n              >\n                {title}\n              </Typography>\n              <Typography className={classes.subtitle}>{subtitle}</Typography>\n              <CardActions>\n                <Link to={path}>\n                  <Button variant=\"contained\" color=\"primary\" renderAs='button'>Klicke hier</Button>\n                </Link>\n              </CardActions>\n            </div>\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\n//Copyright\nfunction Copyright() {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"textSecondary\"\n      align=\"center\"\n    >\n      {\"Copyright © \"}\n      <Link to=\"/\" color=\"inherit\" >\n      Projekt Geschichte vernetzt\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n// place the card on a grid\nexport default function Dashboard() {\n  const cardStyles = useStyles();\n  const gridStyles = useGridStyles();\n\n  return (\n    <Container>\n    <Grid\n      container\n      //  direction=\"row\"\n      spacing={0}\n      className={gridStyles.gridContainer}\n      justify='center'\n     \n      \n    >\n      <Title title='Geschichte vernetzt - Vergangenes interdisziplinär erforschen und vermitteln | TU Darmstadt' />\n      <Grid item md>\n        <CustomCard\n          classes={cardStyles}\n          title={'Benutzer*innen'}\n          subtitle={'Verwalte Benutzer*innen'}\n          image={user}\n          path='/Benutzer'\n        />\n        <CustomCard\n          classes={cardStyles}\n          title={'Touren'}\n          subtitle={'Erstelle Touren'}\n          image={tours}\n          path='/Touren'\n        />\n      </Grid>\n      <Grid item md>\n        <CustomCard\n          classes={cardStyles}\n          title={'Exponate'}\n          subtitle={'Bearbeite Exponate'}\n          image={exponate}\n          path='/Exponate'\n        />\n        <CustomCard\n          classes={cardStyles}\n          title={'Bildverknüpfungen'}\n          subtitle={'Füge neue Bildverknüpfungen hinzu'}\n          image={badges}\n          path='/Abzeichen'\n        />\n      </Grid>\n    </Grid>\n    <Copyright/>\n    </Container>\n  );\n}","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/CustomRoutes.js",["153"],"import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {ProfileEdit} from './MyProfile/profile.js';\n\nexport default [\n  <Route\n  key=\"my-profile\"\n  path=\"/my-profile\"\n  render={() => <ProfileEdit />}\n/>\n\n];","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateCreate.js",["154"],"import React from 'react';\nimport {\n  Create,\n  //Forms\n  TabbedForm,\n  FormTab,\n  //Inputs\n  TextInput,\n  ImageInput,\n  ReferenceInput,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport {\n  Card as MuiCard,\n  makeStyles,\n} from '@material-ui/core';\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\n\n// create a new exhibit\n// todo: ID should not be created manually but automacially (distinct id)\nexport const ExponateCreate = (props) => {\n  const classes = useStyles();\n  return (\n    <Create title='Erstelle Exponate' {...props}>\n      <TabbedForm warnWhenUnsavedChanges>\n        <FormTab label='Übersicht'>\n          <TextInput source='_id' label='ObjektID' fullWidth />\n          <TextInput source='title' label='Titel' fullWidth />\n          <RichTextInput source='description' label='Beschreibung' fullWidth />\n          <TextInput\n            source='additionfal_inf'\n            label='Weitere Informationen'\n            fullWidth\n          />\n          <TextInput source='category' label='Kategorie' fullWidth />\n          <TextInput source='sub_category' label='Subkategorie' fullWidth />\n          <TextInput\n            source='interdisciplinary_context'\n            label='Interdisziplinärkontext'\n            fullWidth\n          />\n        </FormTab>\n        <FormTab label='Eckdaten'>\n          <TextInput source='year' label='Jahr' fullWidth />\n          <TextInput source='art_type' label='Kunsttyp' fullWidth />\n          <TextInput source='creator' label='Ersteller' fullWidth />\n          <TextInput source='material' label='Material' fullWidth />\n          <TextInput\n            source='size_'\n            label='Größe'\n            formClassName={classes.inlineBlock}\n          />\n          <TextInput\n            source='location'\n            label='Ort'\n            formClassName={classes.inlineBlock}\n          />\n          <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n            <ImageInput source='picture' fullWidth />\n          </ReferenceInput>\n        </FormTab>\n      </TabbedForm>\n    </Create>\n  );\n};\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateEdit.js",["155"],"import React from 'react';\nimport {\n  Edit,\n  //Forms\n  TabbedForm,\n  FormTab,\n  //Inputs\n  TextInput,\n  ImageInput,\n  ReferenceInput,\n  Toolbar,\n  SaveButton,\n  SimpleShowLayout,\n  TextField,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\n// material UI styling\nimport {\n  Card as MuiCard,\n  makeStyles,\n} from '@material-ui/core';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle = 'Sind Sie sicher, dass Sie dieses Exponat löschen wollen?';\n\nconst DeleteConfirmContent = props => {\n  return (\n    <SimpleShowLayout {...props} >\n      <TextField source='_id' label='Objekt ID' />\n      <TextField source='title' label='Titel' />\n      <TextField source='category' label='Kategorie' />\n      <TextField source='year' label='Jahr' />\n      <TextField source='art_type' label='Kunsttyp' />\n      <TextField source='creator' label='Ersteller' />\n    </SimpleShowLayout>\n  );\n};\n\n//Edit & Create Styling\nconst useStyles = makeStyles({\n    inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n  });\n  \n  // edit an exhibit\n  export const ExponateEdit = (props) => {\n    const classes = useStyles();\n  \n    return (\n      <Edit {...props} title='Bearbeite Exponate'>\n        <TabbedForm toolbar={<UserEditToolbar />}  warnWhenUnsavedChanges>\n          <FormTab label='Übersicht'>\n            <TextInput source='_id' label='ObjektID' fullWidth />\n            <TextInput source='title' label='Titel' fullWidth />\n            <RichTextInput source='description' label='Beschreibung' fullWidth />\n            <TextInput\n              source='additionfal_inf'\n              label='Weitere Informationen'\n              fullWidth\n            />\n            <TextInput source='category' label='Kategorie' fullWidth />\n            <TextInput source='sub_category' label='Subkategorie' fullWidth />\n            <TextInput\n              source='interdisciplinary_context'\n              label='Interdisziplinärkontext'\n              fullWidth\n            />\n          </FormTab>\n          <FormTab label='Eckdaten'>\n            <TextInput source='year' label='Jahr' fullWidth />\n            <TextInput source='art_type' label='Kunsttyp' fullWidth />\n            <TextInput source='creator' label='Ersteller' fullWidth />\n            <TextInput source='material' label='Material' fullWidth />\n            <TextInput\n              source='size_'\n              label='Größe'\n              formClassName={classes.inlineBlock}\n            />\n            <TextInput\n              source='location'\n              label='Ort'\n              formClassName={classes.inlineBlock}\n            />\n          </FormTab>\n          <FormTab label='Bildverknüpfungen'>\n          <ReferenceInput source='pictures' reference='Pictures' label='Bild'>\n              <ImageInput source='picture' fullWidth />\n            </ReferenceInput>\n          </FormTab>\n          <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}      \n          content={DeleteConfirmContent}  \n          label='Löschen'                 \n          cancel='Abbrechen'                 \n        />\n       \n        </TabbedForm>\n      </Edit>\n    );\n  };","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Exponate/ExponateList.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/ListTouren.js",["156"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SingleFieldList,\n  //options\n  Filter,\n  EditButton,\n  Show,\n  SimpleShowLayout,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //actions\n  useListContext,\n  TopToolbar,\n  CreateButton,\n  ExportButton,\n  sanitizeListRestProps,\n  //fields\n  TextField,\n  ReferenceField,\n  ReferenceArrayField,\n  DateField,\n  NumberField,\n  ChipField,\n  ArrayField,\n  BooleanField,\n  UrlField,\n  //inputs\n  SelectInput,\n  SearchInput,\n  ReferenceInput,\n  NumberInput,\n  DateInput,\n} from 'react-admin';\n// material UI styles\nimport { Button } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// filter the tours (search for text)\n// TODO: filter Ersteller der Tour\n// filter for featured tours (todo, not working yet)\nconst FilterBar = (props) => (\n  <div>\n    <Filter {...props}>\n      <SearchInput source='q' alwaysOn />\n      <SelectInput\n        source='status'\n        choices={[\n          { id: 'freigegeben', name: 'freigegeben' },\n          { id: 'ausstehend', name: 'ausstehend' },\n          { id: 'privat', name: 'privat' },\n        ]}\n        alwaysOn\n      />\n      <ReferenceInput\n        source='user'\n        reference='Benutzer'\n        label='Ersteller'\n        alwaysOn\n      >\n        <SelectInput optionText='username' />\n      </ReferenceInput>\n      <NumberInput\n        source='difficulty'\n        label='Schwierigkeitsgrad'\n        validate={validateDifficulty}\n        alwaysOn\n      />\n      <DateInput\n        source='lastEdit'\n        label='letzte Bearbeitung'\n        options={{ format: 'DD/MM/YYYY' }}\n        alwaysOn\n      />\n    </Filter>\n    <Button\n      variant='contained'\n      size='small'\n      startIcon={<DeleteIcon />}\n      onClick={() => props.setFilters({})}\n    >\n      Alle Filter zurücksetzen\n    </Button>\n  </div>\n);\n\n//solution for removing reset button from action bar (doesnt have functionality there)\nconst ListActions = (props) => {\n  const { className, exporter, filters, maxResults, ...rest } = props;\n  const {\n    currentSort,\n    resource,\n    filterValues,\n    basePath,\n    total,\n  } = useListContext();\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      <CreateButton basePath={basePath} />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filterValues={filterValues}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\n//edit expand component\n//TODO: get information about stations (from the video) and model them\nconst StationShow = (props) => (\n  <Show\n    {...props}\n    /* disable the app title change when shown */\n    title=' '\n  >\n    <SimpleShowLayout>\n      <ArrayField source='Stationen'>\n        <Datagrid>\n          {/*  if no object is there it is an individual slide and foto, text, details should be deactivated */}\n          <TextField source='Objekt' />\n          <TextField source='Foto' />\n          <TextField source='Text' />\n          <TextField source='Details' />\n          <TextField source='Textfeld' />\n          <UrlField source='Bild' />\n          {/*  model a question */}\n          <ArrayField source='???' label='Fragen'>\n            <Datagrid>\n              <TextField source='question' label='Frage' />\n              <ReferenceArrayField\n                label='verlinkte Objekte'\n                reference='Exponate'\n                source='linked_objects'\n              >\n                <SingleFieldList>\n                  <ChipField source='title' label='Name' />\n                </SingleFieldList>\n              </ReferenceArrayField>\n            </Datagrid>\n          </ArrayField>\n          {/*  model an answer */}\n          <ArrayField source='???' label='Antworten'>\n            <Datagrid>\n              <TextField source='answer' label='Antwort' />\n              <ReferenceArrayField\n                label='verlinkte User'\n                reference='User'\n                source='user'\n              >\n                <SingleFieldList>\n                  <ChipField source='username' label='Benutzer' />\n                </SingleFieldList>\n              </ReferenceArrayField>\n            </Datagrid>\n          </ArrayField>\n        </Datagrid>\n      </ArrayField>\n    </SimpleShowLayout>\n  </Show>\n);\n\n// TODO: create border to devide the component from the filters (spacing)\nconst useStyles = makeStyles({\n  main: {\n    marginTop: 20,\n  },\n});\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// list existing tours\nexport const TourenList = (props) => {\n  const classes = useStyles(props);\n  return (\n    <List\n      {...props}\n      title='Touren'\n      filters={<FilterBar />}\n      actions={<ListActions />}\n      classes={{ main: classes.main }}\n    >\n      <Datagrid expand={<StationShow />}>\n        {/* TODO: Whats the primaery key? replace Titel for pk or use built in  */}\n        <TextField source='_id' label='ID' />\n        <TextField source='name' label='Titel' />\n        <TextField source='description' label='Beschreibung' />\n        {/* refField: source=field in this table, reference=Name of reference Table  */}\n        <ReferenceField source='owner' reference='Benutzer' label='Ersteller'>\n          <ChipField source='username' />\n        </ReferenceField>\n        <ReferenceArrayField\n          label='Benutzer'\n          reference='Benutzer'\n          source='user'\n        >\n          <SingleFieldList>\n            <ChipField source='username' />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <TextField source='search_id' label='Touren Code' />\n        <TextField source='session_id' label='Passwort' />\n        <DateField\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberField source='difficulty' label='Schwierigkeitsgrad' />\n        <ChipField source='status' label='Status' />\n        <EditButton />\n      </Datagrid>\n    </List>\n  );\n};\n\n","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/CreateTouren.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/EditTouren.js",["157"],"import React from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  //options\n  SimpleFormIterator,\n  //validation\n  minValue,\n  maxValue,\n  number,\n  //fields\n  TextField,\n  //inputs\n  SelectInput,\n  ImageInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  ReferenceInput,\n  NumberInput,\n  ArrayInput,\n  BooleanInput,\n  DateInput,\n  TextInput,\n\n  Toolbar,\n  SaveButton,\n  SimpleShowLayout,\n  BooleanField,\n} from 'react-admin';\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\n\nconst UserEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst DeleteConfirmTitle = 'Sind Sie sicher, dass Sie diese Tour löschen wollen?';\n\nconst DeleteConfirmContent = props => {\n  return (\n    <SimpleShowLayout {...props} >\n      <TextField disabled source='ID' label='ID' fullWidth/>\n      <TextField source='name' label='Titel' fullWidth/>\n      <TextField source='description' label='Beschreibung' fullWidth/>\n      <TextField source='search_id' label='Touren Code' fullWidth/>\n    </SimpleShowLayout>\n  );\n};\n\n// create a range withing the Difficulty can be selected\nconst validateDifficulty = [number(), minValue(1), maxValue(5)];\n\n// edit a tour\nexport const TourenEdit = (props) => (\n    <Edit title='Bearbeite Touren' {...props}>\n      <SimpleForm toolbar={<UserEditToolbar />} warnWhenUnsavedChanges>\n        <TextInput disabled source='ID' label='ID' fullWidth/>\n        <TextInput source='name' label='Titel' fullWidth/>\n        <TextInput source='description' label='Beschreibung' fullWidth/>\n        <ReferenceInput source='user' reference='Benutzer' label='Ersteller' fullWidth>\n          <SelectInput optionText='username' />\n        </ReferenceInput>\n        <ReferenceArrayInput source='user' reference='Benutzer' fullWidth>\n          <SelectArrayInput optionText='username' />\n        </ReferenceArrayInput>\n        <TextInput source='search_id' label='Touren Code' fullWidth/>\n        <TextInput source='session_id' label='Passwort' fullWidth/>\n        <DateInput\n          source='lastEdit'\n          label='letzte Bearbeitung'\n          options={{ format: 'DD/MM/YYYY' }}\n        />\n        <NumberInput\n          source='difficulty'\n          label='Schwierigkeitsgrad'\n          validate={validateDifficulty}\n        />\n        <SelectInput\n          source='Status'\n          choices={[\n            { id: 'freigegeben', name: 'freigegeben' },\n            { id: 'ausstehend', name: 'ausstehend' },\n            { id: 'privat', name: 'privat' },\n          ]}\n        />\n        {/*  TODO: model the different stations and translate them into edit Inputs*/}\n        <ArrayInput source='Stationen' fullWidth>\n          <SimpleFormIterator>\n            <TextField source='Objekt' />\n            <BooleanInput source='Foto' />\n            <BooleanInput source='Text' />\n            <BooleanInput source='Details' />\n            <TextInput source='Textfeld' />\n            <ArrayInput source='Fragen'>\n              <SimpleFormIterator>\n                <TextInput source='Antwort' />\n                <BooleanInput source='Antwort' />\n              </SimpleFormIterator>\n            </ArrayInput>\n            <ImageInput source='Bild' />\n          </SimpleFormIterator>\n        </ArrayInput>\n        <DeleteWithCustomConfirmButton\n          title={DeleteConfirmTitle}      \n          content={DeleteConfirmContent}  \n          label='Löschen'                 \n          cancel='Abbrechen'                 \n        />\n      </SimpleForm>\n    </Edit>\n  );\n  ","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Touren/Tour_Feedback.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/AccountEdit.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserCreate.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/UserList.js",["158"],"import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SingleFieldList,\n  EditButton,\n  TextField,\n  ChipField,\n  FunctionField,\n  BooleanField,\n  ReferenceManyField,\n} from 'react-admin';\n// material UI imports\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n// show eixsting users\nexport const UserList = (props) => (\n  <List {...props} title='Benutzer*innen'>\n    <Datagrid>\n      {/*  TODO: get real primary key of user ID (username?) */}\n      <TextField source='id' label='ID' />\n      <TextField source='username' label='Benutzername' />\n      <FunctionField\n        source='password'\n        label='Passwort'\n        render={(record) => `**********`}\n      />\n      <BooleanField\n        source='Adminrechte'\n        label='Adminrechte'\n        TrueIcon={DoneIcon}\n        FalseIcon={ClearIcon}\n      />\n      <ReferenceManyField\n        label='Erstellte Touren'\n        reference='Touren'\n        // match user.username with Touren.owner.username\n        source='username'\n        target='owner.username'\n      >\n        <SingleFieldList>\n          <ChipField \n          // display the name of the tour\n          source='name' />\n        </SingleFieldList>\n      </ReferenceManyField> \n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nconst optionRenderer = (choice) => `${choice.picture}`;\n\n// edit password with user rights first try\n/* export const AccountEdit = ({ permissions, ...props }) => (\n  <Edit title='Accountdaten ändern' {...props}>\n    <TabbedForm initialValues={{ role: 'user' }}>\n      <FormTab label='user.form.summary'>\n        {permissions === 'admin' && <TextInput disabled source='id' />}\n        <TextInput source='username' label='Username' validate={required()} />\n      </FormTab>\n      {permissions === 'admin' && (\n        <FormTab label='user.form.security'>\n          <TextInput source='email' label='Email' validate={required()} />\n          <PasswordInput\n            source='password'\n            label='Passwort'\n            validate={required()}\n          />\n          <BooleanInput\n            source='Adminrechte'\n            label='Adminrechte erlauben?'\n            validate={required()}\n          />\n        </FormTab>\n      )}\n    </TabbedForm>\n  </Edit>\n); */","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/Code/CodeList.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/User/Code/CodeCreate.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenList.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenEdit.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Abzeichen/AbzeichenCreate.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureList.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureEdit.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Profilbilder/PictureCreate.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/Login/LoginPage.js",["159","160","161","162"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LockIcon from '@material-ui/icons/Lock';\n\n// site components\n//import authProvider from \"./authProvider\";\nimport './LoginPage.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n      open: false,\n    };\n  }\n\n  setUsername = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  setPassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <div className='Login'>\n            <Button>\n              <LockIcon color='primary' fontSize='large' />\n            </Button>\n            <TextField\n              variant='standard'\n              label='Benutzername'\n              margin='normal'\n              onChange={this.setUsername}\n              value={this.state.username}\n            />\n            <TextField\n              variant='standard'\n              label='Passwort'\n              margin='normal'\n              type='password'\n              onChange={this.setPassword}\n              value={this.state.password}\n            />\n\n            <div className='Button'>\n              <Button variant='contained' color='primary' onClick={() => {}}>\n                ANMELDEN\n              </Button>\n            </div>\n          </div>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n          >\n            <DialogTitle id='alert-dialog-title'></DialogTitle>\n            <DialogContent>\n              <DialogContentText id='alert-dialog-description'>\n                {this.state.message}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color='primary'>\n                Okay\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Login;","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/MyProfile/MyLayout.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/MyProfile/profile.js",["163","164"],"/*\nimport ProfileEdit from './ProfileEdit';\n\nexport default {\n    edit: ProfileEdit\n};\n*/\n\nimport React, {\n    createContext,\n    useState,\n    useCallback,\n    useMemo,\n    useContext\n  } from \"react\";\n  import {\n    TextInput,\n    ImageInput,\n    ImageField,\n    PasswordInput,\n    SimpleForm,\n    required,\n    useDataProvider,\n    useNotify,\n    SaveContextProvider,\n    useGetIdentity\n  } from \"react-admin\";\n  \n  const ProfileContext = createContext();\n  \n  export const ProfileProvider = ({ children }) => {\n    const [profileVersion, setProfileVersion] = useState(0);\n    const context = useMemo(\n      () => ({\n        profileVersion,\n        refreshProfile: () =>\n          setProfileVersion((currentVersion) => currentVersion + 1)\n      }),\n      [profileVersion]\n    );\n  \n    return (\n      <ProfileContext.Provider value={context}>\n        {children}\n      </ProfileContext.Provider>\n    );\n  };\n  \n  export const useProfile = () => useContext(ProfileContext);\n  \n  export const ProfileEdit = ({ staticContext, ...props }) => {\n    console.log(\"ProfileEdit\");\n    const dataProvider = useDataProvider();\n    const notify = useNotify();\n    const [saving, setSaving] = useState();\n    const { refreshProfile } = useProfile();\n  \n    const { loaded, identity } = useGetIdentity();\n  \n    const handleSave = useCallback(\n      (values) => {\n        setSaving(true);\n        dataProvider.updateUserProfile(\n          { data: values },\n          {\n            onSuccess: ({ data }) => {\n              setSaving(false);\n              notify(\"Dein Profil wurde aktualisiert\", \"info\", {\n                _: \"Dein Profil wurde aktualisiert\"\n              });\n              refreshProfile();\n            },\n            onFailure: () => {\n              setSaving(false);\n              notify(\n                \"A technical error occured while updating your profile. Please try later.\",\n                \"warning\",\n                {\n                  _:\n                    \"A technical error occured while updating your profile. Please try later.\"\n                }\n              );\n            }\n          }\n        );\n      },\n      [dataProvider, notify, refreshProfile]\n    );\n  \n    const saveContext = useMemo(\n      () => ({\n        save: handleSave,\n        saving\n      }),\n      [saving, handleSave]\n    );\n  \n    if (!loaded) {\n      return null;\n    }\n  \n    return (\n      <SaveContextProvider value={saveContext}>\n        <SimpleForm save={handleSave} record={identity ? identity : {}}>\n          <TextInput source=\"Benutzername\" validate={required()} fullWidth/>\n          <PasswordInput source=\"altes Passwort\" validate={required()} label=\"altes Passwort\" fullWidth/>\n          <PasswordInput source=\"neues Passwort\" validate={required()} label=\"neues Passwort\" fullWidth/>\n          <PasswordInput source=\"neues Passwort\" validate={required()} label=\"neues Passwort wiederholen\" fullWidth/>\n        </SimpleForm>\n      </SaveContextProvider>\n    );\n  };\n  ","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/MyProfile/MyAppBar.js",[],"/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/components/MyProfile/MyUserMenu.js",["165"],"import React from 'react';\nimport { UserMenu, MenuItemLink} from 'react-admin';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\n\nconst MyUserMenu = (props) => {\n  return (\n    <UserMenu  {...props}>\n      <MenuItemLink\n        to=\"/my-profile\"\n        primaryText=\"Mein Profil\"\n        leftIcon={<SettingsIcon />}\n      />\n    </UserMenu>\n  );\n};\n\nexport default MyUserMenu;","/home/vilja/Desktop/BP/Test-Gitlab/test-app/src/app/containers/DeleteButtonWithConfirmation.js",["166","167","168","169","170"],{"ruleId":"171","severity":1,"message":"172","line":7,"column":27,"nodeType":"173","messageId":"174","endLine":7,"endColumn":33},{"ruleId":"171","severity":1,"message":"175","line":8,"column":8,"nodeType":"173","messageId":"174","endLine":8,"endColumn":19},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"171","severity":1,"message":"180","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":15},{"ruleId":"171","severity":1,"message":"181","line":3,"column":27,"nodeType":"173","messageId":"174","endLine":3,"endColumn":33},{"ruleId":"171","severity":1,"message":"182","line":41,"column":8,"nodeType":"173","messageId":"174","endLine":41,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":81,"column":11,"nodeType":"185","endLine":81,"endColumn":42},{"ruleId":"171","severity":1,"message":"186","line":1,"column":8,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"187","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":26},{"ruleId":"171","severity":1,"message":"188","line":6,"column":27,"nodeType":"173","messageId":"174","endLine":6,"endColumn":32},{"ruleId":"171","severity":1,"message":"189","line":12,"column":10,"nodeType":"173","messageId":"174","endLine":12,"endColumn":21},{"ruleId":"171","severity":1,"message":"190","line":71,"column":9,"nodeType":"173","messageId":"174","endLine":71,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":5,"column":1,"nodeType":"193","endLine":12,"endColumn":3},{"ruleId":"171","severity":1,"message":"194","line":15,"column":11,"nodeType":"173","messageId":"174","endLine":15,"endColumn":18},{"ruleId":"171","severity":1,"message":"194","line":19,"column":11,"nodeType":"173","messageId":"174","endLine":19,"endColumn":18},{"ruleId":"171","severity":1,"message":"195","line":29,"column":3,"nodeType":"173","messageId":"174","endLine":29,"endColumn":15},{"ruleId":"171","severity":1,"message":"195","line":28,"column":3,"nodeType":"173","messageId":"174","endLine":28,"endColumn":15},{"ruleId":"171","severity":1,"message":"196","line":53,"column":7,"nodeType":"173","messageId":"174","endLine":53,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":2,"column":27,"nodeType":"173","messageId":"174","endLine":2,"endColumn":33},{"ruleId":"171","severity":1,"message":"180","line":2,"column":35,"nodeType":"173","messageId":"174","endLine":2,"endColumn":40},{"ruleId":"171","severity":1,"message":"197","line":2,"column":42,"nodeType":"173","messageId":"174","endLine":2,"endColumn":48},{"ruleId":"171","severity":1,"message":"198","line":2,"column":50,"nodeType":"173","messageId":"174","endLine":2,"endColumn":54},{"ruleId":"171","severity":1,"message":"199","line":18,"column":5,"nodeType":"173","messageId":"174","endLine":18,"endColumn":15},{"ruleId":"171","severity":1,"message":"200","line":19,"column":5,"nodeType":"173","messageId":"174","endLine":19,"endColumn":15},{"ruleId":"171","severity":1,"message":"201","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":24},{"ruleId":"171","severity":1,"message":"202","line":34,"column":10,"nodeType":"173","messageId":"174","endLine":34,"endColumn":20},{"ruleId":"171","severity":1,"message":"203","line":34,"column":30,"nodeType":"173","messageId":"174","endLine":34,"endColumn":42},{"ruleId":"171","severity":1,"message":"204","line":34,"column":44,"nodeType":"173","messageId":"174","endLine":34,"endColumn":53},{"ruleId":"171","severity":1,"message":"205","line":34,"column":55,"nodeType":"173","messageId":"174","endLine":34,"endColumn":68},{"ruleId":"171","severity":1,"message":"206","line":34,"column":70,"nodeType":"173","messageId":"174","endLine":34,"endColumn":78},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'Route' is defined but never used.","'Layout' is defined but never used.","'TreeMenu' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'simpleRestProvider' is defined but never used.","'jsonServerProvider' is defined but never used.","'Paper' is defined but never used.","'ContactMail' is defined but never used.","'cardStyles' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'MuiCard' is defined but never used.","'BooleanField' is defined but never used.","'optionRenderer' is assigned a value but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'ImageInput' is defined but never used.","'ImageField' is defined but never used.","'createMuiTheme' is defined but never used.","'SimpleForm' is defined but never used.","'DeleteButton' is defined but never used.","'TextInput' is defined but never used.","'LongTextInput' is defined but never used.","'required' is defined but never used.","no-global-assign","no-unsafe-negation"]